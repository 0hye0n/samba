#include "../librpc/gen_ndr/ndr_rap.h"
#ifndef __CLI_RAP__
#define __CLI_RAP__
struct tevent_req *rpccli_rap_NetShareEnum_send(TALLOC_CTX *mem_ctx,
						struct tevent_context *ev,
						struct rpc_pipe_client *cli,
						uint16_t _level /* [in]  */,
						uint16_t _bufsize /* [in]  */,
						uint16_t _status /* [out]  */,
						uint16_t _convert /* [out]  */,
						uint16_t _count /* [out]  */,
						uint16_t _available /* [out]  */,
						union rap_share_info *_info /* [out] [ref,switch_is(level)] */);
NTSTATUS rpccli_rap_NetShareEnum_recv(struct tevent_req *req,
				      TALLOC_CTX *mem_ctx);
NTSTATUS rpccli_rap_NetShareEnum(struct rpc_pipe_client *cli,
				 TALLOC_CTX *mem_ctx,
				 uint16_t level /* [in]  */,
				 uint16_t bufsize /* [in]  */,
				 uint16_t status /* [out]  */,
				 uint16_t convert /* [out]  */,
				 uint16_t count /* [out]  */,
				 uint16_t available /* [out]  */,
				 union rap_share_info *info /* [out] [ref,switch_is(level)] */);
struct tevent_req *rpccli_rap_NetServerEnum2_send(TALLOC_CTX *mem_ctx,
						  struct tevent_context *ev,
						  struct rpc_pipe_client *cli,
						  uint16_t _level /* [in]  */,
						  uint16_t _bufsize /* [in]  */,
						  uint32_t _servertype /* [in]  */,
						  const char *_domain /* [in] [ref,charset(DOS)] */,
						  uint16_t _status /* [out]  */,
						  uint16_t _convert /* [out]  */,
						  uint16_t _count /* [out]  */,
						  uint16_t _available /* [out]  */,
						  union rap_server_info *_info /* [out] [ref,switch_is(level)] */);
NTSTATUS rpccli_rap_NetServerEnum2_recv(struct tevent_req *req,
					TALLOC_CTX *mem_ctx);
NTSTATUS rpccli_rap_NetServerEnum2(struct rpc_pipe_client *cli,
				   TALLOC_CTX *mem_ctx,
				   uint16_t level /* [in]  */,
				   uint16_t bufsize /* [in]  */,
				   uint32_t servertype /* [in]  */,
				   const char *domain /* [in] [ref,charset(DOS)] */,
				   uint16_t status /* [out]  */,
				   uint16_t convert /* [out]  */,
				   uint16_t count /* [out]  */,
				   uint16_t available /* [out]  */,
				   union rap_server_info *info /* [out] [ref,switch_is(level)] */);
struct tevent_req *rpccli_rap_WserverGetInfo_send(TALLOC_CTX *mem_ctx,
						  struct tevent_context *ev,
						  struct rpc_pipe_client *cli,
						  uint16_t _level /* [in]  */,
						  uint16_t _bufsize /* [in]  */,
						  uint16_t _status /* [out]  */,
						  uint16_t _convert /* [out]  */,
						  uint16_t _available /* [out]  */,
						  union rap_server_info _info /* [out] [switch_is(level)] */);
NTSTATUS rpccli_rap_WserverGetInfo_recv(struct tevent_req *req,
					TALLOC_CTX *mem_ctx);
NTSTATUS rpccli_rap_WserverGetInfo(struct rpc_pipe_client *cli,
				   TALLOC_CTX *mem_ctx,
				   uint16_t level /* [in]  */,
				   uint16_t bufsize /* [in]  */,
				   uint16_t status /* [out]  */,
				   uint16_t convert /* [out]  */,
				   uint16_t available /* [out]  */,
				   union rap_server_info info /* [out] [switch_is(level)] */);
struct tevent_req *rpccli_rap_NetPrintQEnum_send(TALLOC_CTX *mem_ctx,
						 struct tevent_context *ev,
						 struct rpc_pipe_client *cli,
						 uint16_t _level /* [in]  */,
						 uint16_t _bufsize /* [in]  */,
						 uint16_t _status /* [out]  */,
						 uint16_t _convert /* [out]  */,
						 uint16_t _count /* [out]  */,
						 uint16_t _available /* [out]  */,
						 union rap_printq_info *_info /* [out] [ref,switch_is(level)] */);
NTSTATUS rpccli_rap_NetPrintQEnum_recv(struct tevent_req *req,
				       TALLOC_CTX *mem_ctx);
NTSTATUS rpccli_rap_NetPrintQEnum(struct rpc_pipe_client *cli,
				  TALLOC_CTX *mem_ctx,
				  uint16_t level /* [in]  */,
				  uint16_t bufsize /* [in]  */,
				  uint16_t status /* [out]  */,
				  uint16_t convert /* [out]  */,
				  uint16_t count /* [out]  */,
				  uint16_t available /* [out]  */,
				  union rap_printq_info *info /* [out] [ref,switch_is(level)] */);
#endif /* __CLI_RAP__ */
