#!/usr/bin/env python

extra_deps = ''

if bld.CONFIG_SET("HAVE_AESNI_INTEL"):
        extra_deps += ' aesni-intel'

bld.SAMBA_SUBSYSTEM('GNUTLS_HELPERS',
                    source='''
                    gnutls_error.c
                    gnutls_arcfour_confounded_md5.c
                    ''',
                    deps='gnutls samba-errors');

# We have a GnuTLS DCEPRC backupkey implementation for the server and the test.
# However this is only working with GnuTLS >= 3.4.7. So we need to keep this
# around till we can require at least GnuTLS in a newer version.
bld.SAMBA_SUBSYSTEM('LIBCRYPTO_RC4',
                    source='arcfour.c',
                    deps='talloc',
                    enabled=not bld.CONFIG_SET('HAVE_GNUTLS_3_4_7'))

bld.SAMBA_SUBSYSTEM('LIBCRYPTO',
        source='''
               md4.c
               aes.c
               rijndael-alg-fst.c
               aes_cmac_128.c
               aes_ccm_128.c
               aes_gcm_128.c
               ''',
        deps='''
             talloc
             LIBCRYPTO_RC4
             ''' + extra_deps)

bld.SAMBA_SUBSYSTEM('TORTURE_LIBCRYPTO',
        source='''md4test.c
            aes_cmac_128_test.c aes_ccm_128_test.c aes_gcm_128_test.c
        ''',
        autoproto='test_proto.h',
        deps='LIBCRYPTO'
        )

bld.SAMBA_PYTHON('python_crypto',
                 source='py_crypto.c',
                 deps='gnutls talloc',
                 realname='samba/crypto.so')
