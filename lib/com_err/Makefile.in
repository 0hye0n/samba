#
# $Id$
#

SHELL = /bin/sh

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
AR = ar
RANLIB = @RANLIB@
LN_S = @LN_S@
DEFS = @DEFS@
CFLAGS = @CFLAGS@
LD_FLAGS = @LD_FLAGS@
EXECSUFFIX=@EXECSUFFIX@

YACC = @YACC@
LEX = @LEX@

INSTALL = @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
MKINSTALLDIRS = @top_srcdir@/mkinstalldirs

prefix = @prefix@
exec_prefix = @exec_prefix@
libdir = @libdir@
bindir = @bindir@
includedir = @includedir@

PICFLAGS = @PICFLAGS@
 
LIBNAME = $(LIBPREFIX)com_err
LIBEXT = @LIBEXT@
SHLIBEXT = @SHLIBEXT@
LIBPREFIX = @LIBPREFIX@
LDSHARED = @LDSHARED@
lib_LIBRARIES = $(LIBNAME).$(LIBEXT)
bin_PROGRAMS = compile_et
include_HEADERS = com_right.h com_err.h

SOURCES = error.c com_err.c compile_et.c
OBJECTS = error.o com_err.o

all: $(lib_LIBRARIES) $(bin_PROGRAMS) $(include_HEADERS)

Wall:
	make CFLAGS="-g -Wall -Wno-comment -Wmissing-prototypes -Wmissing-declarations -D__USE_FIXED_PROTOTYPES__"

.c.o:
	$(CC) -c $(DEFS) -I../../include -I. -I$(srcdir) $(CFLAGS) $(CPPFLAGS) $(PICFLAGS) $<

install: all
	$(MKINSTALLDIRS) $(includedir)
	@for i in $(include_HEADERS); do \
	if test -f "$(srcdir)/$$i" ; then x="$(srcdir)/$$i"; \
	else x="$$i"; fi ;\
	echo "$(INSTALL_DATA) $$x $(includedir)" ;\
	$(INSTALL_DATA) $$x $(includedir) ; done

	$(MKINSTALLDIRS) $(libdir)
	@for i in $(lib_LIBRARIES); do \
	echo "$(INSTALL) -m 0555 $$i $(libdir)" ;\
	$(INSTALL) -m 0555 $$i $(libdir) ; done

	$(MKINSTALLDIRS) $(bindir)
	@for i in $(bin_PROGRAMS); do \
	echo "$(INSTALL) -m 0555 $$i $(bindir)" ;\
	$(INSTALL) -m 0555 $$i $(bindir) ; done

uninstall:
	rm -f $(libdir)/$(LIB)

TAGS: $(SOURCES)
	etags $(SOURCES)

clean:
	rm -f $(LIB) *.o *.a krb_err.c krb_err.h parse.h parse.c lex.c \
	$(lib_LIBRARIES) $(bin_PROGRAMS)

mostlyclean: clean

distclean: clean
	rm -f Makefile *.tab.c *~

realclean: distclean
	rm -f TAGS

dist: $(DISTFILES)
	for file in $(DISTFILES); do \
	  ln $$file ../`cat ../.fname`/lib \
	    || cp -p $$file ../`cat ../.fname`/lib; \
	done

$(LIBNAME).a: $(OBJECTS)
	rm -f $@
	$(AR) cr $@ $(OBJECTS)
	-$(RANLIB) $@

$(LIBNAME).$(SHLIBEXT): $(OBJECTS) $(LDOBJ)
	rm -f $@
	$(LDSHARED) -o $@ $(OBJECTS) $(LDOBJ) $(LIBDES)


COBJ = compile_et.o parse.o lex.o

$(COBJ): parse.h

compile_et: $(COBJ)
	$(CC) -o compile_et $(COBJ) -L../roken -lroken

parse.c parse.h: $(srcdir)/parse.y
	$(YACC) -d $(srcdir)/parse.y
	mv -f y.tab.h parse.h
	mv -f y.tab.c parse.c

lex.c: $(srcdir)/lex.l
	$(LEX) $(srcdir)/lex.l
	mv -f lex.yy.c lex.c
