#
# $Id$
#

SHELL = /bin/sh

srcdir = @srcdir@
VPATH = @srcdir@

CC	= @CC@
CPP	= @CPP@
AR	= ar
RANLIB	= @RANLIB@
DEFS	= @DEFS@
CFLAGS	= @CFLAGS@

INSTALL = @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
MKINSTALLDIRS = @top_srcdir@/mkinstalldirs

prefix = @prefix@
exec_prefix = $(prefix)
libdir = $(exec_prefix)/lib

PICFLAGS = # @PICFLAGS@
 
LIBNAME = libroken
#LIBEXT = @LIBEXT@ Always build archive library and don't install!
LIBEXT = a
SHLIBEXT = @SHLIBEXT@
SHARED = @SHARED@
LIB = $(LIBNAME).$(LIBEXT)

OBJECTS = k_getpwuid.o k_getpwnam.o signal.o tm2time.o \
	  verify.o inaddr2str.o mini_inetd.o \
	  @LIBOBJS@

all: $(LIB)

Wall:
	make CFLAGS="-g -Wall -Wmissing-prototypes -Wmissing-declarations -D__USE_FIXED_PROTOTYPES__"

.c.o:
	$(CC) -c $(CPPFLAGS) $(DEFS) -I../.. -I../../include -I$(srcdir) $(CFLAGS) $(PICFLAGS) $<

install: all

uninstall:

TAGS: $(SOURCES)
	etags $(SOURCES)

check:

clean:
	rm -f $(LIB) *.o *.a

mostlyclean: clean

distclean: clean
	rm -f Makefile *.tab.c *~

realclean: distclean
	rm -f TAGS

dist: $(DISTFILES)
	for file in $(DISTFILES); do \
	  ln $$file ../`cat ../.fname`/lib \
	    || cp -p $$file ../`cat ../.fname`/lib; \
	done

$(LIBNAME).a: $(OBJECTS)
	rm -f $@
	$(AR) cr $@ $(OBJECTS)
	-$(RANLIB) $@

$(LIBNAME).$(SHLIBEXT): $(OBJECTS)
	rm -f $@
	$(CC) $(CFLAGS) $(PICFLAGS) $(SHARED) -o $@ $(OBJECTS)

$(OBJECTS): ../../config.h
