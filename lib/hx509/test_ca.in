#!/bin/sh
#
# Copyright (c) 2006 Kungliga Tekniska Högskolan
# (Royal Institute of Technology, Stockholm, Sweden). 
# All rights reserved. 
#
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions 
# are met: 
#
# 1. Redistributions of source code must retain the above copyright 
#    notice, this list of conditions and the following disclaimer. 
#
# 2. Redistributions in binary form must reproduce the above copyright 
#    notice, this list of conditions and the following disclaimer in the 
#    documentation and/or other materials provided with the distribution. 
#
# 3. Neither the name of the Institute nor the names of its contributors 
#    may be used to endorse or promote products derived from this software 
#    without specific prior written permission. 
#
# THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND 
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE 
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
# SUCH DAMAGE. 
#
# $Id$
#

srcdir="@srcdir@"

hxtool="${TESTS_ENVIRONMENT} ./hxtool"
if ${hxtool} info | grep 'rsa: hcrypto null RSA' > /dev/null ; then
    exit 77
fi

echo "create certificate request"
${hxtool} request-create \
	 --subject="CN=Love,DC=it,DC=su,DC=se" \
	 --key=$srcdir/data/key.der \
	 pkcs10-request.der || exit 1

echo "issue certificate"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "verify certificate"
${hxtool} verify --missing-revoke \
	cert:FILE:cert-ee.der \
	anchor:FILE:$srcdir/data/ca.crt > /dev/null || exit 1

echo "issue certificate (10years 1 month)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
          --lifetime="10years 1 month" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "issue certificate (with https ekus)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
	  --type="https-server" \
	  --type="https-client" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "issue certificate (pkinit KDC)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
	  --type="pkinit-kdc" \
          --pk-init-principal="krbtgt/TEST.H5L.SE@TEST.H5L.SE" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "issue certificate (pkinit client)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
	  --type="pkinit-client" \
          --pk-init-principal="lha@TEST.H5L.SE" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "issue certificate (hostnames)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
	  --type="https-server" \
          --hostname="www.test.h5l.se" \
          --hostname="ftp.test.h5l.se" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "issue certificate (email)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --subject="cn=foo" \
          --email="lha@test.h5l.se" \
          --email="test@test.h5l.se" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ee.der" || exit 1

echo "issue self-signed cert"
${hxtool} issue-certificate \
	  --self-signed \
	  --ca-private-key=$srcdir/data/key.der \
	  --subject="cn=test" \
	  --certificate="cert-ee.der" || exit 1

echo "issue ca cert"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/ca.crt,$srcdir/data/ca.key \
	  --issue-ca \
	  --subject="cn=ca-cert" \
	  --req="pkcs10-request.der" \
	  --certificate="cert-ca.der" || exit 1

echo "issue self-signed ca cert"
${hxtool} issue-certificate \
	  --self-signed \
	  --issue-ca \
	  --ca-private-key=$srcdir/data/key.der \
	  --subject="cn=ca-root" \
	  --certificate="cert-ca.der" || exit 1

echo "issue proxy certificate"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:$srcdir/data/test.crt,$srcdir/data/test.key \
	  --issue-proxy \
	  --req="pkcs10-request.der" \
	  --certificate="cert-proxy.der" || exit 1

echo "verify proxy cert"
${hxtool} verify --missing-revoke \
    --allow-proxy-certificate \
    cert:FILE:cert-proxy.der \
    chain:FILE:$srcdir/data/test.crt \
    anchor:FILE:$srcdir/data/ca.crt > /dev/null || exit 1

echo "issue ca cert (generate rsa key)"
${hxtool} issue-certificate \
	  --self-signed \
	  --issue-ca \
	  --generate-key=rsa \
	  --key="ca2-key.der" \
	  --subject="cn=ca2-cert" \
	  --certificate="cert-ca.der" || exit 1

echo "issue ca cert (generate rsa key)"
${hxtool} issue-certificate \
	  --ca-certificate=FILE:cert-ca.der,ca2-key.der \
	  --generate-key=rsa \
	  --key="ee2-key.der" \
	  --subject="cn=cert-ee2" \
	  --certificate="cert-ee.der" || exit 1

echo "verify certificate"
${hxtool} verify --missing-revoke \
	cert:FILE:cert-ee.der \
	anchor:FILE:cert-ca.der > /dev/null || exit 1

echo "sign CMS signature (generate key)"
${hxtool} cms-create-sd \
	--certificate=FILE:cert-ee.der,ee2-key.der \
	"$srcdir/test_name.c" \
	sd.data > /dev/null || exit 1

echo "verify CMS signature (generate key)"
${hxtool} cms-verify-sd \
	--missing-revoke \
	--anchors=FILE:cert-ca.der \
	sd.data sd.data.out > /dev/null || exit 1
cmp "$srcdir/test_name.c" sd.data.out || exit 1



exit 0
