<% page_header("columns", "Upgrade", "install"); 

 /* frontend to Samba3 upgrade.
	Based on provision.esp
	(C) Jelmer Vernooij 2005
	Published under the GNU GPL
  */

  include("/scripting/forms.js");
  libinclude("base.js");
  libinclude("provision.js");
  libinclude("samba3.js");
%>

<h1>Import from Samba3</h1>

<%
if (form['submit'] == "Cancel") {
	redirect("/");
}

if (form['submit'] == "Import") {
	var samba3 = samba3_read(form['SMBCONF'], form['LIBDIR']);

	var subobj = upgrade_provision(samba3);

	var f = FormObj("Import from Samba3", 0, 2);

	f.add("REALM", "Realm");
	f.add("DOMAIN", "Domain Name");
	f.add("HOSTNAME", "Hostname");
	f.add("ADMINPASS", "Administrator Password", "password");
	f.add("CONFIRM", "Confirm Password", "password");
	f.add("DOMAINSID", "Domain SID");
	f.add("HOSTGUID", "Host GUID");
	f.add("BASEDN", "Base DN");
	f.add("HOSTIP", "Host IP");
	f.add("DEFAULTSITE", "Default Site");

	for (i=0;i<f.element.length;i++) {
		f.element[i].value = subobj[f.element[i].name];
	}

	f.submit[0] = "Continue";
	f.submit[1] = "Cancel";
	f.display();	
} else if (form['submit'] == "Continue") {
	var subobj = Object();
	for (r in form) {
		subobj[r] = form[r];
	}

	provision(subobj, writefln, false);

	var samba3 = samba3_read(form['SMBCONF'], form['LIBDIR']);
	upgrade(subobj, samba3, writefln);
} else {
	var f = FormObj("Import from Samba3", 0, 2);

	f.add("SMBCONF", "smb.conf file");
	f.add("LIBDIR", "Lib directory");
	f.submit[0] = "Import";
	f.submit[1] = "Cancel";

	f.element[0].value = "/etc/samba/smb.conf";
	f.element[1].value = "/var/lib/samba";

	f.display();
}
%>

<% page_footer(); %>
