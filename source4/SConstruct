#!/usr/bin/env python

# This is the experimental scons build script for Samba 4. For a proper 
# build use the old build system (configure + make). scons may
# eventually replace this system.
#
# Copyright (C) 2005 Jelmer Vernooij <jelmer@samba.org>
# Published under the GNU GPL

hostenv = Environment(
		toolpath=['build/scons','.'],
		tools=['default','pidl','proto','et'],
		CPPPATH=['#include','#','#lib'], 
                CPPDEFINES={'_SAMBA_BUILD_': None},
		)

hostenv.Append(CPPPATH = ['#heimdal_build', '#heimdal/lib/krb5',
			  '#heimdal/lib/hdb', '#heimdal/lib/gssapi',
			  '#heimdal/lib/asn1', '#heimdal/lib/des',
			  '#heimdal/kdc', '#heimdal/lib/roken',
			  '#heimdal/lib/com_err'])

buildenv = hostenv

cross_compiling = 0

if cross_compiling:
	buildenv = hostenv.Copy()
	buildenv.BuildDir('build-env','.')

dynenv = hostenv.Copy()

bindir = "bindir"

paths = { 
	'BINDIR': bindir,
	'SBINDIR': "sbin",
	'CONFIGFILE': "cfg",
	'LOGFILEBASE': "lfb",
	'NCALRPCDIR': "ncalrpc",
	'LMHOSTSFILE': "lmhosts",
	'LIBDIR': "libdir",
	'SHLIBEXT': "ext",
	'LOCKDIR': "lockdir",
	'PIDDIR': "piddir",
	'SMB_PASSWD_FILE': "smbpasswd",
	'PRIVATE_DIR': 'private',
	'SWATDIR': 'swat'
}

[dynenv.Append(CPPDEFINES = {p: '\\"%s\\"' % paths[p]}) for p in paths]
	
dynconfig = dynenv.Object('dynconfig.c')
Export('dynconfig')

proto_files = []

SConscript(
		dirs=['param','lib','torture','rpc_server','cldap_server','libcli',
		'nbt_server','client','ldap_server','libnet','nsswitch','web_server',
		'smbd','dsdb','heimdal_build','ntptr','kdc','smb_server','ntvfs',
		'winbind','scripting','auth'],
		exports='buildenv hostenv proto_files')

hostenv.CProtoHeader(target='include/proto.h',source = proto_files)
