# This file contains a list of regular expressions matching testsuites that 
# should be skipped during "make test".
#
# Possible reasons for adding a testsuite here:
# * Testsuite functionality not implemented on the server side
# * Testsuite crashes during run
# * Testsuite crashes server
# * Testsuite contains "flapping" tests (sometimes success, sometimes failure)
# * Testsuite hangs indefinitely
#
# If a testsuite is partially succeeding, please list the failing bits 
# in the selftest/knownfail file rather than disabling the testsuite completely.
# That way those tests that do succeed still get run and we will be notified
# if a known failing test suddenly starts succeeding.
#
# If a testsuite is very slow, please add it to selftest/slow instead.
# This way it will still get run in "make slowtest"
#
# Please add a comment for each testsuite you disable explaining why
# it is being skipped.
^samba4.raw.composite
^samba4.base.iometer
^samba4.base.casetable
^samba4.base.nttrans
^samba4.base.scan.maxfid
^samba4.raw.hold-oplock 		# Not a test, but a way to block other clients for a test
^samba4.smb2.hold-oplock 		# Not a test, but a way to block other clients for a test
^samba4.raw.ping.pong		# Needs second server to test
^samba4.rpc.samr.accessmask
^samba4.raw.scan.eamax
^samba4.smb2.notify
^samba4.smb2.scan
^samba4.smb2.lease
^samba4.smb2.durable.open
^samba4.smb2.dir
^samba4.ntvfs.cifs.*.base.charset
^samba4.ntvfs.cifs.*.base.iometer
^samba4.ntvfs.cifs.*.base.casetable
^samba4.ntvfs.cifs.*.base.nttrans
^samba4.ntvfs.cifs.*.base.scan-maxfid
^samba4.ntvfs.cifs.*.base.utable
^samba4.ntvfs.cifs.*.base.smb
^samba4.ntvfs.cifs.*.raw.
^samba4.rpc.samsync
^samba4.rpc.remact							# Not provided by Samba 4
^samba4.rpc.oxidresolve						# Not provided by Samba 4
^samba4.rpc.eventlog						# Not provided by Samba 4
^samba4.rpc.initshutdown					# Not provided by Samba 4
^samba4.rpc.spoolss						# Not provided by Samba 4
^samba4.rpc.svcctl							# Not provided by Samba 4
^samba4.rpc.atsvc							# Not provided by Samba 4
^samba4.rpc.frsapi							# Not provided by Samba 4
^samba4.rpc.ntsvcs							# Not provided by Samba 4
^samba4.rpc.dfs								# Not provided by Samba 4
^samba4.rpc.lsa.forest							# Not provided by Samba 4
^samba4.*.base.samba3.*						# Samba3-specific test
^samba4.*.raw.samba3.*						# Samba3-specific test
^samba4.rpc..*samba3.*						# Samba3-specific test
^samba4.samba-tool.domopen.*$				# Hangs for some reason
^samba4.nss.test						# Fails
^samba4.raw.offline 			# Samba 4 doesn't have much offline support yet
^samba4.rpc.autoidl  # this one just generates a lot of noise, and is no longer useful
^samba4.rpc.countcalls # this is not useful now we have full IDL
^samba4.rap.scan # same thing here - we have docs now
^samba4.rap.printing # Not provided by Samba 4
^samba4.rap.sam # Not provided by Samba 4
bench # don't run benchmarks in our selftest
^samba4..*trans2.scan # uses huge number of file descriptors
^samba4.*.base.scan.ioctl # bad idea in make test
^samba4.*.base.scan.pipe_number # bad idea in make test
^samba4.*.base.secleak # no point on build farm
^samba4.*.base.delaywrite # This is randomly failing, depending on timing and filesystem features
^samba4.*.base.winattr
^samba4.*.base.birthtime
^samba4.smb2.acls # new test which doesn't pass yet
# ktutil might not be installed or from mit...
# we should build a samba4ktutil and use that instead
^samba4.blackbox.ktpass # this test isn't portable ...
^samba4.drs.repl_schema.python # flakey test
^samba4.nbt.winsreplication # flakey test
^samba4.smb2.ioctl # snapshots not supported by default
