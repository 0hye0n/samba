/* header auto-generated by pidl */

struct dfs_Exist {
	struct {
	} in;

	struct {
		uint32 *exist_flag;
	} out;

};

struct dfs_Add {
	struct {
		const char *path;
		const char *server;
		const char *share;
		const char *comment;
		uint32 flags;
	} in;

	struct {
		NTSTATUS result;
	} out;

};

struct dfs_Remove {
	struct {
		const char *path;
		const char *server;
		const char *share;
	} in;

	struct {
		NTSTATUS result;
	} out;

};

struct dfs_UNKNOWN3 {
	struct {
	} in;

	struct {
		NTSTATUS result;
	} out;

};

struct dfs_Info {
	struct {
		const char *path;
		const char *server;
		const char *share;
		uint16 level;
	} in;

	struct {
		NTSTATUS result;
	} out;

};

struct dfs_Info1 {
	const char *path;
};

struct dfs_EnumArray1 {
	uint32 count;
	struct dfs_Info1 *s;
};

struct dfs_Info2 {
	const char *path;
	const char *comment;
	uint32 state;
	uint32 num_stores;
};

struct dfs_EnumArray2 {
	uint32 count;
	struct dfs_Info2 *s;
};

struct dfs_StorageInfo {
	uint32 state;
	const char *server;
	const char *share;
};

struct dfs_Info3 {
	const char *path;
	const char *comment;
	uint32 state;
	uint32 num_stores;
	struct dfs_StorageInfo *stores;
};

struct dfs_EnumArray3 {
	uint32 count;
	struct dfs_Info3 *s;
};

union dfs_EnumInfo {
/* [case(1)] */ struct dfs_EnumArray1 *info1;
/* [case(2)] */ struct dfs_EnumArray2 *info2;
/* [case(3)] */ struct dfs_EnumArray3 *info3;
};

struct dfs_EnumStruct {
	uint32 level;
	union dfs_EnumInfo e;
};

struct dfs_Enum {
	struct {
		uint32 level;
		uint32 bufsize;
		struct dfs_EnumStruct *info;
		uint32 *unknown;
		uint32 *total;
	} in;

	struct {
		struct dfs_EnumStruct *info;
		uint32 *total;
		NTSTATUS result;
	} out;

};

#define DCERPC_DFS_EXIST 0
#define DCERPC_DFS_ADD 1
#define DCERPC_DFS_REMOVE 2
#define DCERPC_DFS_UNKNOWN3 3
#define DCERPC_DFS_INFO 4
#define DCERPC_DFS_ENUM 5
