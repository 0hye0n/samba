ldb_acl_module_ops: name = 0xXXXX "acl", init_context = 0xXXXX <acl_module_init>, search = 0xXXXX <acl_search>, add = 0xXXXX <acl_add>, modify = 0xXXXX <acl_modify>, del = 0xXXXX <acl_delete>, rename = 0xXXXX <acl_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_add: int (struct ldb_context *, const struct ldb_message *)
ldb_anr_module_ops: name = 0xXXXX "anr", init_context = 0, search = 0xXXXX <anr_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_any_comparison: int (struct ldb_context *, void *, ldb_attr_handler_t, const struct ldb_val *, const struct ldb_val *)
ldb_asprintf_errstring: void (struct ldb_context *, const char *, ...)
ldb_asq_module_ops: name = 0xXXXX "asq", init_context = 0xXXXX <asq_init>, search = 0xXXXX <asq_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_attr_casefold: char *(void *, const char *)
ldb_attr_dn: int (const char *)
ldb_attr_in_list: int (const char * const *, const char *)
ldb_attr_list_copy: const char **(TALLOC_CTX *, const char * const *)
ldb_attr_list_copy_add: const char **(TALLOC_CTX *, const char * const *, const char *)
ldb_base64_decode: int (char *)
ldb_base64_encode: char *(void *, const char *, int)
ldb_binary_decode: struct ldb_val (void *, const char *)
ldb_binary_encode: char *(void *, struct ldb_val)
ldb_binary_encode_string: char *(void *, const char *)
ldb_build_add_req: int (struct ldb_request **, struct ldb_context *, void *, const struct ldb_message *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_build_del_req: int (struct ldb_request **, struct ldb_context *, void *, struct ldb_dn *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_build_extended_req: int (struct ldb_request **, struct ldb_context *, void *, const char *, void *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_build_mod_req: int (struct ldb_request **, struct ldb_context *, void *, const struct ldb_message *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_build_rename_req: int (struct ldb_request **, struct ldb_context *, void *, struct ldb_dn *, struct ldb_dn *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_build_search_req: int (struct ldb_request **, struct ldb_context *, void *, struct ldb_dn *, enum ldb_scope, const char *, const char * const *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_build_search_req_ex: int (struct ldb_request **, struct ldb_context *, void *, struct ldb_dn *, enum ldb_scope, struct ldb_parse_tree *, const char * const *, struct ldb_control **, void *, ldb_request_callback_t, struct ldb_request *)
ldb_casefold: char *(struct ldb_context *, void *, const char *, size_t)
ldb_casefold_default: char *(void *, void *, const char *, size_t)
ldb_comparison_binary: int (struct ldb_context *, void *, const struct ldb_val *, const struct ldb_val *)
ldb_comparison_fold: int (struct ldb_context *, void *, const struct ldb_val *, const struct ldb_val *)
ldb_connect: int (struct ldb_context *, const char *, unsigned int, const char **)
ldb_connect_backend: int (struct ldb_context *, const char *, const char **, struct ldb_module **)
ldb_debug: void (struct ldb_context *, enum ldb_debug_level, const char *, ...)
ldb_debug_add: void (struct ldb_context *, const char *, ...)
ldb_debug_end: void (struct ldb_context *, enum ldb_debug_level)
ldb_debug_set: void (struct ldb_context *, enum ldb_debug_level, const char *, ...)
ldb_delete: int (struct ldb_context *, struct ldb_dn *)
ldb_descriptor_module_ops: name = 0xXXXX "descriptor", init_context = 0xXXXX <descriptor_init>, search = 0xXXXX <descriptor_search>, add = 0xXXXX <descriptor_change>, modify = 0xXXXX <descriptor_change>, del = 0, rename = 0xXXXX <descriptor_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_dn_add_base: bool (struct ldb_dn *, struct ldb_dn *)
ldb_dn_add_base_fmt: bool (struct ldb_dn *, const char *, ...)
ldb_dn_add_child: bool (struct ldb_dn *, struct ldb_dn *)
ldb_dn_add_child_fmt: bool (struct ldb_dn *, const char *, ...)
ldb_dn_alloc_casefold: char *(void *, struct ldb_dn *)
ldb_dn_alloc_linearized: char *(void *, struct ldb_dn *)
ldb_dn_canonical_ex_string: char *(void *, struct ldb_dn *)
ldb_dn_canonical_string: char *(void *, struct ldb_dn *)
ldb_dn_check_local: bool (struct ldb_module *, struct ldb_dn *)
ldb_dn_check_special: bool (struct ldb_dn *, const char *)
ldb_dn_compare: int (struct ldb_dn *, struct ldb_dn *)
ldb_dn_compare_base: int (struct ldb_dn *, struct ldb_dn *)
ldb_dn_copy: struct ldb_dn *(void *, struct ldb_dn *)
ldb_dn_escape_value: char *(void *, struct ldb_val)
ldb_dn_extended_add_syntax: int (struct ldb_context *, unsigned int, const struct ldb_dn_extended_syntax *)
ldb_dn_extended_filter: void (struct ldb_dn *, const char * const *)
ldb_dn_extended_syntax_by_name: const struct ldb_dn_extended_syntax *(struct ldb_context *, const char *)
ldb_dn_from_ldb_val: struct ldb_dn *(void *, struct ldb_context *, const struct ldb_val *)
ldb_dn_get_casefold: const char *(struct ldb_dn *)
ldb_dn_get_comp_num: int (struct ldb_dn *)
ldb_dn_get_component_name: const char *(struct ldb_dn *, unsigned int)
ldb_dn_get_component_val: const struct ldb_val *(struct ldb_dn *, unsigned int)
ldb_dn_get_extended_component: const struct ldb_val *(struct ldb_dn *, const char *)
ldb_dn_get_extended_linearized: char *(void *, struct ldb_dn *, int)
ldb_dn_get_linearized: const char *(struct ldb_dn *)
ldb_dn_get_parent: struct ldb_dn *(void *, struct ldb_dn *)
ldb_dn_get_rdn_name: const char *(struct ldb_dn *)
ldb_dn_get_rdn_val: const struct ldb_val *(struct ldb_dn *)
ldb_dn_has_extended: bool (struct ldb_dn *)
ldb_dn_is_null: bool (struct ldb_dn *)
ldb_dn_is_special: bool (struct ldb_dn *)
ldb_dn_is_valid: bool (struct ldb_dn *)
ldb_dn_map_local: struct ldb_dn *(struct ldb_module *, void *, struct ldb_dn *)
ldb_dn_map_rebase_remote: struct ldb_dn *(struct ldb_module *, void *, struct ldb_dn *)
ldb_dn_map_remote: struct ldb_dn *(struct ldb_module *, void *, struct ldb_dn *)
ldb_dn_new: struct ldb_dn *(void *, struct ldb_context *, const char *)
ldb_dn_new_fmt: struct ldb_dn *(void *, struct ldb_context *, const char *, ...)
ldb_dn_remove_base_components: bool (struct ldb_dn *, unsigned int)
ldb_dn_remove_child_components: bool (struct ldb_dn *, unsigned int)
ldb_dn_remove_extended_components: void (struct ldb_dn *)
ldb_dn_set_component: int (struct ldb_dn *, int, const char *, const struct ldb_val)
ldb_dn_set_extended_component: int (struct ldb_dn *, const char *, const struct ldb_val *)
ldb_dn_update_components: int (struct ldb_dn *, const struct ldb_dn *)
ldb_dn_validate: bool (struct ldb_dn *)
ldb_dsdb_cache_module_ops: name = 0xXXXX "dsdb_cache", init_context = 0xXXXX <dsdb_cache_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_dump_results: void (struct ldb_context *, struct ldb_result *, FILE *)
ldb_entryuuid_module_ops: name = 0xXXXX "entryuuid", init_context = 0xXXXX <entryuuid_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0xXXXX <entryuuid_extended>, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_errstring: const char *(struct ldb_context *)
ldb_extended: int (struct ldb_context *, const char *, void *, struct ldb_result **)
ldb_extended_default_callback: int (struct ldb_request *, struct ldb_reply *)
ldb_extended_dn_in_module_ops: name = 0xXXXX "extended_dn_in", init_context = 0, search = 0xXXXX <extended_dn_in_search>, add = 0, modify = 0xXXXX <extended_dn_in_modify>, del = 0xXXXX <extended_dn_in_del>, rename = 0xXXXX <extended_dn_in_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_extended_dn_out_fds_module_ops: name = 0xXXXX "extended_dn_out_fds", init_context = 0xXXXX <extended_dn_out_fds_init>, search = 0xXXXX <extended_dn_out_fds_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_extended_dn_out_ldb_module_ops: name = 0xXXXX "extended_dn_out_ldb", init_context = 0xXXXX <extended_dn_out_ldb_init>, search = 0xXXXX <extended_dn_out_ldb_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_extended_dn_out_openldap_module_ops: name = 0xXXXX "extended_dn_out_openldap", init_context = 0xXXXX <extended_dn_out_openldap_init>, search = 0xXXXX <extended_dn_out_openldap_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_extended_dn_store_module_ops: name = 0xXXXX "extended_dn_store", init_context = 0, search = 0, add = 0xXXXX <extended_dn_add>, modify = 0xXXXX <extended_dn_modify>, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_filter_from_tree: char *(void *, struct ldb_parse_tree *)
ldb_get_config_basedn: struct ldb_dn *(struct ldb_context *)
ldb_get_create_perms: unsigned int (struct ldb_context *)
ldb_get_default_basedn: struct ldb_dn *(struct ldb_context *)
ldb_get_event_context: struct tevent_context *(struct ldb_context *)
ldb_get_flags: unsigned int (struct ldb_context *)
ldb_get_opaque: void *(struct ldb_context *, const char *)
ldb_get_root_basedn: struct ldb_dn *(struct ldb_context *)
ldb_get_schema_basedn: struct ldb_dn *(struct ldb_context *)
ldb_global_init: int (void)
ldb_handle_new: struct ldb_handle *(TALLOC_CTX *, struct ldb_context *)
ldb_handler_copy: int (struct ldb_context *, void *, const struct ldb_val *, struct ldb_val *)
ldb_handler_fold: int (struct ldb_context *, void *, const struct ldb_val *, struct ldb_val *)
ldb_init: struct ldb_context *(TALLOC_CTX *, struct tevent_context *)
ldb_init_module_chain: int (struct ldb_context *, struct ldb_module *)
ldb_instancetype_module_ops: name = 0xXXXX "instancetype", init_context = 0, search = 0, add = 0xXXXX <instancetype_add>, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_kludge_acl_module_ops: name = 0xXXXX "kludge_acl", init_context = 0xXXXX <kludge_acl_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0xXXXX <kludge_acl_extended>, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_lazy_commit_module_ops: name = 0xXXXX "lazy_commit", init_context = 0xXXXX <unlazy_init>, search = 0xXXXX <unlazy_op>, add = 0xXXXX <unlazy_op>, modify = 0xXXXX <unlazy_op>, del = 0xXXXX <unlazy_op>, rename = 0xXXXX <unlazy_op>, request = 0xXXXX <unlazy_op>, extended = 0xXXXX <unlazy_op>, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_ldap_backend_ops: name = 0xXXXX "ldap", connect_fn = 0xXXXX <ildb_connect>
ldb_ldapi_backend_ops: name = 0xXXXX "ldapi", connect_fn = 0xXXXX <ildb_connect>
ldb_ldaps_backend_ops: name = 0xXXXX "ldaps", connect_fn = 0xXXXX <ildb_connect>
ldb_ldif_message_string: char *(struct ldb_context *, TALLOC_CTX *, enum ldb_changetype, const struct ldb_message *)
ldb_ldif_read: struct ldb_ldif *(struct ldb_context *, int (*)(void *), void *)
ldb_ldif_read_file: struct ldb_ldif *(struct ldb_context *, FILE *)
ldb_ldif_read_free: void (struct ldb_context *, struct ldb_ldif *)
ldb_ldif_read_string: struct ldb_ldif *(struct ldb_context *, const char **)
ldb_ldif_write: int (struct ldb_context *, int (*)(void *, const char *, ...), void *, const struct ldb_ldif *)
ldb_ldif_write_file: int (struct ldb_context *, FILE *, const struct ldb_ldif *)
ldb_ldif_write_string: char *(struct ldb_context *, TALLOC_CTX *, const struct ldb_ldif *)
ldb_linked_attributes_module_ops: name = 0xXXXX "linked_attributes", init_context = 0, search = 0, add = 0, modify = 0, del = 0, rename = 0xXXXX <linked_attributes_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_load_modules: int (struct ldb_context *, const char **)
ldb_load_modules_list: int (struct ldb_context *, const char **, struct ldb_module *, struct ldb_module **)
ldb_local_password_module_ops: name = 0xXXXX "local_password", init_context = 0, search = 0xXXXX <local_password_search>, add = 0xXXXX <local_password_add>, modify = 0xXXXX <local_password_modify>, del = 0xXXXX <local_password_delete>, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_map_init: int (struct ldb_module *, const struct ldb_map_attribute *, const struct ldb_map_objectclass *, const char * const *, const char *, const char *)
ldb_match_msg: int (struct ldb_context *, const struct ldb_message *, const struct ldb_parse_tree *, struct ldb_dn *, enum ldb_scope)
ldb_match_msg_objectclass: int (const struct ldb_message *, const char *)
ldb_mod_register_control: int (struct ldb_module *, const char *)
ldb_modify: int (struct ldb_context *, const struct ldb_message *)
ldb_module_done: int (struct ldb_request *, struct ldb_control **, struct ldb_extended *, int)
ldb_module_get_ctx: struct ldb_context *(struct ldb_module *)
ldb_module_get_name: const char *(struct ldb_module *)
ldb_module_get_ops: const struct ldb_module_ops *(struct ldb_module *)
ldb_module_get_private: void *(struct ldb_module *)
ldb_module_new: struct ldb_module *(TALLOC_CTX *, struct ldb_context *, const char *, const struct ldb_module_ops *)
ldb_module_send_entry: int (struct ldb_request *, struct ldb_message *, struct ldb_control **)
ldb_module_send_referral: int (struct ldb_request *, char *)
ldb_module_set_private: void (struct ldb_module *, void *)
ldb_modules_list_from_string: const char **(struct ldb_context *, TALLOC_CTX *, const char *)
ldb_msg_add: int (struct ldb_message *, const struct ldb_message_element *, int)
ldb_msg_add_empty: int (struct ldb_message *, const char *, int, struct ldb_message_element **)
ldb_msg_add_fmt: int (struct ldb_message *, const char *, const char *, ...)
ldb_msg_add_linearized_dn: int (struct ldb_message *, const char *, struct ldb_dn *)
ldb_msg_add_steal_string: int (struct ldb_message *, const char *, char *)
ldb_msg_add_steal_value: int (struct ldb_message *, const char *, struct ldb_val *)
ldb_msg_add_string: int (struct ldb_message *, const char *, const char *)
ldb_msg_add_value: int (struct ldb_message *, const char *, const struct ldb_val *, struct ldb_message_element **)
ldb_msg_canonicalize: struct ldb_message *(struct ldb_context *, const struct ldb_message *)
ldb_msg_check_string_attribute: int (const struct ldb_message *, const char *, const char *)
ldb_msg_copy: struct ldb_message *(TALLOC_CTX *, const struct ldb_message *)
ldb_msg_copy_attr: int (struct ldb_message *, const char *, const char *)
ldb_msg_copy_shallow: struct ldb_message *(TALLOC_CTX *, const struct ldb_message *)
ldb_msg_diff: struct ldb_message *(struct ldb_context *, struct ldb_message *, struct ldb_message *)
ldb_msg_element_compare: int (struct ldb_message_element *, struct ldb_message_element *)
ldb_msg_element_compare_name: int (struct ldb_message_element *, struct ldb_message_element *)
ldb_msg_find_attr_as_bool: int (const struct ldb_message *, const char *, int)
ldb_msg_find_attr_as_dn: struct ldb_dn *(struct ldb_context *, void *, const struct ldb_message *, const char *)
ldb_msg_find_attr_as_double: double (const struct ldb_message *, const char *, double)
ldb_msg_find_attr_as_int: int (const struct ldb_message *, const char *, int)
ldb_msg_find_attr_as_int64: int64_t (const struct ldb_message *, const char *, int64_t)
ldb_msg_find_attr_as_string: const char *(const struct ldb_message *, const char *, const char *)
ldb_msg_find_attr_as_uint: unsigned int (const struct ldb_message *, const char *, unsigned int)
ldb_msg_find_attr_as_uint64: uint64_t (const struct ldb_message *, const char *, uint64_t)
ldb_msg_find_element: struct ldb_message_element *(const struct ldb_message *, const char *)
ldb_msg_find_ldb_val: const struct ldb_val *(const struct ldb_message *, const char *)
ldb_msg_find_val: struct ldb_val *(const struct ldb_message_element *, struct ldb_val *)
ldb_msg_new: struct ldb_message *(void *)
ldb_msg_remove_attr: void (struct ldb_message *, const char *)
ldb_msg_remove_element: void (struct ldb_message *, struct ldb_message_element *)
ldb_msg_rename_attr: int (struct ldb_message *, const char *, const char *)
ldb_msg_sanity_check: int (struct ldb_context *, const struct ldb_message *)
ldb_msg_sort_elements: void (struct ldb_message *)
ldb_naming_fsmo_module_ops: name = 0xXXXX "naming_fsmo", init_context = 0xXXXX <naming_fsmo_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_new_partition_module_ops: name = 0xXXXX "new_partition", init_context = 0, search = 0, add = 0xXXXX <new_partition_add>, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_next_del_trans: int (struct ldb_module *)
ldb_next_end_trans: int (struct ldb_module *)
ldb_next_init: int (struct ldb_module *)
ldb_next_prepare_commit: int (struct ldb_module *)
ldb_next_remote_request: int (struct ldb_module *, struct ldb_request *)
ldb_next_request: int (struct ldb_module *, struct ldb_request *)
ldb_next_start_trans: int (struct ldb_module *)
ldb_nsuniqueid_module_ops: name = 0xXXXX "nsuniqueid", init_context = 0xXXXX <nsuniqueid_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0xXXXX <entryuuid_extended>, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_objectclass_module_ops: name = 0xXXXX "objectclass", init_context = 0xXXXX <objectclass_init>, search = 0, add = 0xXXXX <objectclass_add>, modify = 0xXXXX <objectclass_modify>, del = 0, rename = 0xXXXX <objectclass_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_objectguid_module_ops: name = 0xXXXX "objectguid", init_context = 0, search = 0, add = 0xXXXX <objectguid_add>, modify = 0xXXXX <objectguid_modify>, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_op_default_callback: int (struct ldb_request *, struct ldb_reply *)
ldb_operational_module_ops: name = 0xXXXX "operational", init_context = 0xXXXX <operational_init>, search = 0xXXXX <operational_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_paged_results_module_ops: name = 0xXXXX "paged_results", init_context = 0xXXXX <paged_request_init>, search = 0xXXXX <paged_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_paged_searches_module_ops: name = 0xXXXX "paged_searches", init_context = 0xXXXX <ps_init>, search = 0xXXXX <ps_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_parse_control_strings: struct ldb_control **(struct ldb_context *, void *, const char **)
ldb_parse_tree: struct ldb_parse_tree *(void *, const char *)
ldb_parse_tree_attr_replace: void (struct ldb_parse_tree *, const char *, const char *)
ldb_parse_tree_copy_shallow: struct ldb_parse_tree *(TALLOC_CTX *, const struct ldb_parse_tree *)
ldb_partition_module_ops: name = 0xXXXX "partition", init_context = 0, search = 0xXXXX <partition_search>, add = 0xXXXX <partition_add>, modify = 0xXXXX <partition_modify>, del = 0xXXXX <partition_delete>, rename = 0xXXXX <partition_rename>, request = 0, extended = 0xXXXX <partition_extended>, start_transaction = 0xXXXX <partition_start_trans>, prepare_commit = 0xXXXX <partition_prepare_commit>, end_transaction = 0xXXXX <partition_end_trans>, del_transaction = 0xXXXX <partition_del_trans>, sequence_number = 0, private_data = 0xXXXX
ldb_password_hash_module_ops: name = 0xXXXX "password_hash", init_context = 0, search = 0, add = 0xXXXX <password_hash_add>, modify = 0xXXXX <password_hash_modify>, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_pdc_fsmo_module_ops: name = 0xXXXX "pdc_fsmo", init_context = 0xXXXX <pdc_fsmo_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_qsort: void (void * const, size_t, size_t, void *, ldb_qsort_cmp_fn_t)
ldb_ranged_results_module_ops: name = 0xXXXX "ranged_results", init_context = 0, search = 0xXXXX <rr_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_rdn_name_module_ops: name = 0xXXXX "rdn_name", init_context = 0, search = 0, add = 0xXXXX <rdn_name_add>, modify = 0xXXXX <rdn_name_modify>, del = 0, rename = 0xXXXX <rdn_name_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_register_backend: int (const char *, ldb_connect_fn)
ldb_register_module: int (const struct ldb_module_ops *)
ldb_register_samba_handlers: int (struct ldb_context *)
ldb_rename: int (struct ldb_context *, struct ldb_dn *, struct ldb_dn *)
ldb_repl_meta_data_module_ops: name = 0xXXXX "repl_meta_data", init_context = 0xXXXX <replmd_init>, search = 0, add = 0xXXXX <replmd_add>, modify = 0xXXXX <replmd_modify>, del = 0xXXXX <replmd_delete>, rename = 0xXXXX <replmd_rename>, request = 0, extended = 0xXXXX <replmd_extended>, start_transaction = 0xXXXX <replmd_start_transaction>, prepare_commit = 0xXXXX <replmd_prepare_commit>, end_transaction = 0, del_transaction = 0xXXXX <replmd_del_transaction>, sequence_number = 0, private_data = 0xXXXX
ldb_reply_add_control: int (struct ldb_reply *, const char *, bool, void *)
ldb_reply_get_control: struct ldb_control *(struct ldb_reply *, const char *)
ldb_request: int (struct ldb_context *, struct ldb_request *)
ldb_request_add_control: int (struct ldb_request *, const char *, bool, void *)
ldb_request_done: int (struct ldb_request *, int)
ldb_request_get_control: struct ldb_control *(struct ldb_request *, const char *)
ldb_request_get_status: int (struct ldb_request *)
ldb_request_set_state: void (struct ldb_request *, int)
ldb_reset_err_string: void (struct ldb_context *)
ldb_resolve_oids_module_ops: name = 0xXXXX "resolve_oids", init_context = 0, search = 0xXXXX <resolve_oids_search>, add = 0xXXXX <resolve_oids_add>, modify = 0xXXXX <resolve_oids_modify>, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_rootdse_module_ops: name = 0xXXXX "rootdse", init_context = 0xXXXX <rootdse_init>, search = 0xXXXX <rootdse_search>, add = 0, modify = 0xXXXX <rootdse_modify>, del = 0, rename = 0, request = 0xXXXX <rootdse_request>, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_samba3sam_module_ops: name = 0xXXXX "samba3sam", init_context = 0xXXXX <samba3sam_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_samba3sid_module_ops: name = 0xXXXX "samba3sid", init_context = 0, search = 0, add = 0xXXXX <samba3sid_add>, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_samba_dsdb_module_ops: name = 0xXXXX "samba_dsdb", init_context = 0xXXXX <samba_dsdb_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_samba_secrets_module_ops: name = 0xXXXX "samba_secrets", init_context = 0xXXXX <samba_secrets_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_samba_syntax_by_lDAPDisplayName: const struct ldb_schema_syntax *(struct ldb_context *, const char *)
ldb_samba_syntax_by_name: const struct ldb_schema_syntax *(struct ldb_context *, const char *)
ldb_samldb_module_ops: name = 0xXXXX "samldb", init_context = 0, search = 0, add = 0xXXXX <samldb_add>, modify = 0xXXXX <samldb_modify>, del = 0xXXXX <samldb_delete>, rename = 0, request = 0, extended = 0xXXXX <samldb_extended>, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_sample_module_ops: name = 0xXXXX "sample", init_context = 0, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_schema_attribute_add: int (struct ldb_context *, const char *, unsigned int, const char *)
ldb_schema_attribute_add_with_syntax: int (struct ldb_context *, const char *, unsigned int, const struct ldb_schema_syntax *)
ldb_schema_attribute_by_name: const struct ldb_schema_attribute *(struct ldb_context *, const char *)
ldb_schema_attribute_remove: void (struct ldb_context *, const char *)
ldb_schema_attribute_set_override_handler: void (struct ldb_context *, ldb_attribute_handler_override_fn_t, void *)
ldb_schema_data_module_ops: name = 0xXXXX "schema_data", init_context = 0xXXXX <schema_data_init>, search = 0xXXXX <schema_data_search>, add = 0xXXXX <schema_data_add>, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_schema_load_module_ops: name = 0xXXXX "schema_load", init_context = 0xXXXX <schema_load_init>, search = 0, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0xXXXX <schema_load_extended>, start_transaction = 0xXXXX <schema_load_start_transaction>, prepare_commit = 0xXXXX <schema_load_prepare_commit>, end_transaction = 0, del_transaction = 0xXXXX <schema_load_del_transaction>, sequence_number = 0, private_data = 0xXXXX
ldb_search: int (struct ldb_context *, TALLOC_CTX *, struct ldb_result **, struct ldb_dn *, enum ldb_scope, const char * const *, const char *, ...)
ldb_search_default_callback: int (struct ldb_request *, struct ldb_reply *)
ldb_sequence_number: int (struct ldb_context *, enum ldb_sequence_type, uint64_t *)
ldb_server_sort_module_ops: name = 0xXXXX "server_sort", init_context = 0xXXXX <server_sort_init>, search = 0xXXXX <server_sort_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_set_create_perms: void (struct ldb_context *, unsigned int)
ldb_set_debug: int (struct ldb_context *, void (*)(void *, enum ldb_debug_level, const char *, struct va_list *), void *)
ldb_set_debug_stderr: int (struct ldb_context *)
ldb_set_default_dns: void (struct ldb_context *)
ldb_set_errstring: void (struct ldb_context *, const char *)
ldb_set_event_context: void (struct ldb_context *, struct tevent_context *)
ldb_set_flags: void (struct ldb_context *, unsigned int)
ldb_set_modules_dir: void (struct ldb_context *, const char *)
ldb_set_opaque: int (struct ldb_context *, const char *, void *)
ldb_set_timeout: int (struct ldb_context *, struct ldb_request *, int)
ldb_set_timeout_from_prev_req: int (struct ldb_context *, struct ldb_request *, struct ldb_request *)
ldb_set_utf8_default: void (struct ldb_context *)
ldb_set_utf8_fns: void (struct ldb_context *, void *, char *(*)(void *, void *, const char *, size_t))
ldb_setup_wellknown_attributes: int (struct ldb_context *)
ldb_should_b64_encode: int (struct ldb_context *, const struct ldb_val *)
ldb_show_deleted_module_ops: name = 0xXXXX "show_deleted", init_context = 0xXXXX <show_deleted_init>, search = 0xXXXX <show_deleted_search>, add = 0, modify = 0, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_skel_module_ops: name = 0xXXXX "skel", init_context = 0xXXXX <skel_init>, search = 0xXXXX <skel_search>, add = 0xXXXX <skel_add>, modify = 0xXXXX <skel_modify>, del = 0xXXXX <skel_delete>, rename = 0xXXXX <skel_rename>, request = 0xXXXX <skel_request>, extended = 0, start_transaction = 0xXXXX <skel_start_trans>, prepare_commit = 0, end_transaction = 0xXXXX <skel_end_trans>, del_transaction = 0xXXXX <skel_del_trans>, sequence_number = 0, private_data = 0xXXXX
ldb_standard_syntax_by_name: const struct ldb_schema_syntax *(struct ldb_context *, const char *)
ldb_strerror: const char *(int)
ldb_string_to_time: time_t (const char *)
ldb_string_utc_to_time: time_t (const char *)
ldb_subtree_delete_module_ops: name = 0xXXXX "subtree_delete", init_context = 0, search = 0, add = 0, modify = 0, del = 0xXXXX <subtree_delete>, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_subtree_rename_module_ops: name = 0xXXXX "subtree_rename", init_context = 0, search = 0, add = 0, modify = 0, del = 0, rename = 0xXXXX <subtree_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_timestring: char *(TALLOC_CTX *, time_t)
ldb_timestring_utc: char *(TALLOC_CTX *, time_t)
ldb_transaction_cancel: int (struct ldb_context *)
ldb_transaction_cancel_noerr: int (struct ldb_context *)
ldb_transaction_commit: int (struct ldb_context *)
ldb_transaction_prepare_commit: int (struct ldb_context *)
ldb_transaction_start: int (struct ldb_context *)
ldb_update_keytab_module_ops: name = 0xXXXX "update_keytab", init_context = 0xXXXX <update_kt_init>, search = 0, add = 0xXXXX <update_kt_add>, modify = 0xXXXX <update_kt_modify>, del = 0xXXXX <update_kt_delete>, rename = 0xXXXX <update_kt_rename>, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0xXXXX <update_kt_prepare_commit>, end_transaction = 0, del_transaction = 0xXXXX <update_kt_del_trans>, sequence_number = 0, private_data = 0xXXXX
ldb_val_dup: struct ldb_val (void *, const struct ldb_val *)
ldb_val_equal_exact: int (const struct ldb_val *, const struct ldb_val *)
ldb_val_map_local: struct ldb_val (struct ldb_module *, void *, const struct ldb_map_attribute *, const struct ldb_val *)
ldb_val_map_remote: struct ldb_val (struct ldb_module *, void *, const struct ldb_map_attribute *, const struct ldb_val *)
ldb_val_to_time: int (const struct ldb_val *, time_t *)
ldb_valid_attr_name: int (const char *)
ldb_validate_update_module_ops: name = 0xXXXX "validate_update", init_context = 0, search = 0, add = 0xXXXX <validate_update_add>, modify = 0xXXXX <validate_update_modify>, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_wait: int (struct ldb_handle *, enum ldb_wait_type)
ldb_wins_ldb_module_ops: name = 0xXXXX "wins_ldb", init_context = 0xXXXX <wins_ldb_init>, search = 0, add = 0xXXXX <wins_ldb_verify>, modify = 0xXXXX <wins_ldb_verify>, del = 0, rename = 0, request = 0, extended = 0, start_transaction = 0, prepare_commit = 0, end_transaction = 0, del_transaction = 0, sequence_number = 0, private_data = 0xXXXX
ldb_wrap_connect: struct ldb_context *(TALLOC_CTX *, struct tevent_context *, struct loadparm_context *, const char *, struct auth_session_info *, struct cli_credentials *, unsigned int)
ldb_wrap_fork_hook: void (void)
