#!gmake
#
# Makefile for tdb directory
#

CC = @CC@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
includedir = @includedir@
libdir = @libdir@
VPATH = @srcdir@:@libreplacedir@
srcdir = @srcdir@
builddir = @builddir@
CFLAGS = -I$(srcdir)/include -Iinclude -I@libreplacedir@ @CFLAGS@

.PHONY: test

PROGS = bin/tdbtool bin/tdbtorture
TDB_OBJ = @TDBOBJ@ @LIBREPLACEOBJ@

DIRS = lib bin common tools examples

all: showflags dirs $(PROGS)

showflags:
	@echo 'tdb will be compiled with flags:'
	@echo '  CFLAGS = $(CFLAGS)'
	@echo '  LIBS = $(LIBS)'

.c.o:
	@echo Compiling $*.c
	@mkdir -p `dirname $@`
	@$(CC) $(CFLAGS) -c $< -o $@

dirs:
	@mkdir -p $(DIRS)

install: all
	mkdir -p $(bindir)
	mkdir -p $(includedir)
	mkdir -p $(libdir) 
	mkdir -p $(libdir)/pkgconfig
	cp $(PROGS) $(bindir)
	cp $(srcdir)/include/tdb.h $(includedir)
	cp tdb.pc $(libdir)/pkgconfig

libtdb.a: $(TDB_OBJ)
	ar -rv libtdb.a $(TDB_OBJ)

bin/tdbtest: tools/tdbtest.o libtdb.a
	$(CC) $(CFLAGS) -o bin/tdbtest tools/tdbtest.o -L. -ltdb -lgdbm

bin/tdbtool: tools/tdbtool.o libtdb.a
	$(CC) $(CFLAGS) -o bin/tdbtool tools/tdbtool.o -L. -ltdb

bin/tdbtorture: tools/tdbtorture.o libtdb.a
	$(CC) $(CFLAGS) -o bin/tdbtorture tools/tdbtorture.o -L. -ltdb

bin/tdbdump: tools/tdbdump.o libtdb.a
	$(CC) $(CFLAGS) -o bin/tdbdump tools/tdbdump.o -L. -ltdb

bin/tdbbackup: tools/tdbbackup.o libtdb.a
	$(CC) $(CFLAGS) -o bin/tdbbackup tools/tdbbackup.o -L. -ltdb

test: bin/tdbtorture
	bin/tdbtorture

installcheck: test install

clean:
	rm -f $(PROGS) common/*.o tools/*.o test.db test.tdb test.gdbm

distclean: clean
	rm -f *~ */*~
	rm -f config.log config.status config.h
	rm -f Makefile

realdistclean: distclean
	rm -f configure config.h.in
