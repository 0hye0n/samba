# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.33
#
# Don't modify this file, modify the SWIG interface instead.

import _net
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import events
libnet_context_init = _net.libnet_context_init
class libnet(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args, **kwargs): 
        _net.libnet_swiginit(self,_net.new_libnet(*args, **kwargs))
    __swig_destroy__ = _net.delete_libnet
libnet.samsync_ldb = new_instancemethod(_net.libnet_samsync_ldb,None,libnet)
libnet.DomainList = new_instancemethod(_net.libnet_DomainList,None,libnet)
libnet.DomainClose = new_instancemethod(_net.libnet_DomainClose,None,libnet)
libnet.DomainOpen = new_instancemethod(_net.libnet_DomainOpen,None,libnet)
libnet.LookupName = new_instancemethod(_net.libnet_LookupName,None,libnet)
libnet.LookupDCs = new_instancemethod(_net.libnet_LookupDCs,None,libnet)
libnet.LookupHost = new_instancemethod(_net.libnet_LookupHost,None,libnet)
libnet.Lookup = new_instancemethod(_net.libnet_Lookup,None,libnet)
libnet.ListShares = new_instancemethod(_net.libnet_ListShares,None,libnet)
libnet.AddShare = new_instancemethod(_net.libnet_AddShare,None,libnet)
libnet.DelShare = new_instancemethod(_net.libnet_DelShare,None,libnet)
libnet.GroupList = new_instancemethod(_net.libnet_GroupList,None,libnet)
libnet.GroupInfo = new_instancemethod(_net.libnet_GroupInfo,None,libnet)
libnet.UserList = new_instancemethod(_net.libnet_UserList,None,libnet)
libnet.UserInfo = new_instancemethod(_net.libnet_UserInfo,None,libnet)
libnet.ModifyUser = new_instancemethod(_net.libnet_ModifyUser,None,libnet)
libnet.DeleteUser = new_instancemethod(_net.libnet_DeleteUser,None,libnet)
libnet.CreateUser = new_instancemethod(_net.libnet_CreateUser,None,libnet)
libnet.SamDump_keytab = new_instancemethod(_net.libnet_SamDump_keytab,None,libnet)
libnet.SamDump = new_instancemethod(_net.libnet_SamDump,None,libnet)
libnet.SamSync_netlogon = new_instancemethod(_net.libnet_SamSync_netlogon,None,libnet)
libnet.UnbecomeDC = new_instancemethod(_net.libnet_UnbecomeDC,None,libnet)
libnet.BecomeDC = new_instancemethod(_net.libnet_BecomeDC,None,libnet)
libnet.JoinSite = new_instancemethod(_net.libnet_JoinSite,None,libnet)
libnet.JoinDomain = new_instancemethod(_net.libnet_JoinDomain,None,libnet)
libnet.Join = new_instancemethod(_net.libnet_Join,None,libnet)
libnet.RpcConnect = new_instancemethod(_net.libnet_RpcConnect,None,libnet)
libnet.RemoteTOD = new_instancemethod(_net.libnet_RemoteTOD,None,libnet)
libnet.ChangePassword = new_instancemethod(_net.libnet_ChangePassword,None,libnet)
libnet.SetPassword = new_instancemethod(_net.libnet_SetPassword,None,libnet)
libnet_swigregister = _net.libnet_swigregister
libnet_swigregister(libnet)



