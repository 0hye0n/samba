--- smbwrapper/smbw.c.00	Mon Nov 13 13:32:16 2000
+++ smbwrapper/smbw.c	Thu Dec 28 11:24:26 2000
@@ -22,6 +22,11 @@
 #include "includes.h"
 #include "realcalls.h"
 
+#if defined(__USLC__) && defined(HAVE_SYS_ACL_H)
+#define GETACL ACL_GET
+#define GETACLCNT ACL_CNT
+#endif
+
 pstring smbw_cwd;
 
 static struct smbw_file *smbw_files;
@@ -1438,7 +1443,11 @@
 /***************************************************** 
 say no to acls
 *******************************************************/
+#if defined(__USLC__)
+ int smbw_acl(const char *pathp, int cmd, int nentries, void *aclbufp)
+#else
  int smbw_acl(const char *pathp, int cmd, int nentries, aclent_t *aclbufp)
+#endif
 {
 	if (cmd == GETACL || cmd == GETACLCNT) return 0;
 	errno = ENOSYS;
@@ -1450,7 +1459,11 @@
 /***************************************************** 
 say no to acls
 *******************************************************/
+#if defined(__USLC__)
+ int smbw_facl(int fd, int cmd, int nentries, void *aclbufp)
+#else
  int smbw_facl(int fd, int cmd, int nentries, aclent_t *aclbufp)
+#endif
 {
 	if (cmd == GETACL || cmd == GETACLCNT) return 0;
 	errno = ENOSYS;
--- tdb/tdb.c.00	Fri Dec 15 13:23:27 2000
+++ tdb/tdb.c	Wed Dec 27 18:53:56 2000
@@ -850,9 +850,16 @@
 {
 	TDB_DATA key, dbuf;
 	struct list_struct rec;
+#if defined(__USLC__)
+	struct tdb_traverse_lock tl = { (struct tdb_traverse_lock *)0, 0, 0 };
+#else
 	struct tdb_traverse_lock tl = { tdb->travlocks.next, 0, 0 };
+#endif
 	int ret, count = 0;
 
+#if defined(__USLC__)
+        tl.next = tdb->travlocks.next;
+#endif
 	/* fcntl locks don't stack: beware traverse inside traverse */
 	tdb->travlocks.next = &tl;
 
--- utils/torture.c.00	Mon Dec 11 13:06:56 2000
+++ utils/torture.c	Thu Dec 28 10:01:11 2000
@@ -2360,7 +2360,11 @@
 
 	dbf = stdout;
 
+#if defined(__USLC__)
+	setbuf(stdout, NULL);
+#else
 	setbuffer(stdout, NULL, 0);
+#endif
 
 	charset_initialise();
 
--- utils/locktest.c.00	Fri Sep 29 13:18:14 2000
+++ utils/locktest.c	Thu Dec 28 15:51:56 2000
@@ -34,7 +34,7 @@
 
 #define FILENAME "\\locktest.dat"
 #define LOCKRANGE 1000
-#define LOCKBASE 0;
+#define LOCKBASE 0
 
 /*
 #define LOCKBASE (0x40000000 - 50)
@@ -59,6 +59,7 @@
 	char needed;
 };
 
+#ifndef __USLC__
 static struct record preset[] = {
 #if 0
 {36,  5, 0, 0, 0,  8, 1},
@@ -67,6 +68,7 @@
 {99, 11, 0, 0, 7,  1, 1},
 #endif
 };
+#endif /* __USLC__) */
 
 static struct record *recorded;
 
@@ -378,20 +380,23 @@
 	recorded = (struct record *)malloc(sizeof(*recorded) * numops);
 
 	for (n=0; n<numops; n++) {
+#ifndef __USLC__
 		if (n < sizeof(preset) / sizeof(preset[0])) {
 			recorded[n] = preset[n];
 		} else {
+#endif
 			recorded[n].conn = random() % NCONNECTIONS;
 			recorded[n].f = random() % NFILES;
 			recorded[n].start = LOCKBASE + ((unsigned)random() % (LOCKRANGE-1));
-			recorded[n].len = 1 + 
-				random() % (LOCKRANGE-(recorded[n].start-LOCKBASE));
+			recorded[n].len = 1 + random() % (LOCKRANGE-(recorded[n].start-LOCKBASE));
 			recorded[n].start *= RANGE_MULTIPLE;
 			recorded[n].len *= RANGE_MULTIPLE;
 			recorded[n].r1 = random() % 100;
 			recorded[n].r2 = random() % 100;
 			recorded[n].needed = True;
+#ifndef __USLC__
 		}
+#endif
 	}
 
 	reconnect(cli, fnum, share);
@@ -484,7 +489,11 @@
 	int seed, server;
 	static pstring servicesf = CONFIGFILE;
 
+#if defined(__USLC__)
+        setvbuf(stdout,NULL,_IOLBF,0); /* line buffered */
+#else
 	setlinebuf(stdout);
+#endif
 
 	dbf = stderr;
 
--- utils/locktest2.c.00	Tue Jun 13 08:47:44 2000
+++ utils/locktest2.c	Thu Dec 28 10:33:32 2000
@@ -540,7 +540,11 @@
 	int seed;
 	static pstring servicesf = CONFIGFILE;
 
+#if defined(__USLC__)
+        setvbuf(stdout,NULL,_IOLBF,0); /* line buffered */
+#else
 	setlinebuf(stdout);
+#endif
 
 	dbf = stderr;
 
--- utils/masktest.c.00	Fri May 26 17:28:02 2000
+++ utils/masktest.c	Thu Dec 28 10:33:38 2000
@@ -310,7 +310,11 @@
 	int seed;
 	static pstring servicesf = CONFIGFILE;
 
+#if defined(__USLC__)
+        setvbuf(stdout,NULL,_IOLBF,0); /* line buffered */
+#else
 	setlinebuf(stdout);
+#endif
 
 	dbf = stderr;
 
--- utils/smbcacls.c.00	Fri Dec 15 16:08:02 2000
+++ utils/smbcacls.c	Thu Dec 28 10:33:44 2000
@@ -749,7 +749,11 @@
 	char *the_acl = NULL;
 	enum chown_mode change_mode = REQUEST_NONE;
 
+#if defined(__USLC__)
+        setvbuf(stdout,NULL,_IOLBF,0); /* line buffered */
+#else
 	setlinebuf(stdout);
+#endif
 
 	dbf = stderr;
 
--- ltconfig.00	Mon Mar 13 15:20:00 2000
+++ ltconfig	Wed Dec 27 19:30:16 2000
@@ -1482,9 +1482,9 @@
     no_undefined_flag=' -z text'
     # $CC -shared without GNU ld will not create a library from C++
     # object files and a static libstdc++, better avoid it by now
-    archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linkopts'
+    archive_cmds='$LD -G${allow_undefined_flag} -h $rpath/$soname -o $lib $libobjs $deplibs $linkopts'
     archive_expsym_cmds='$echo "{ global:" > $lib.exp~cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $lib.exp~$echo "local: *; };" >> $lib.exp~
-		$LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linkopts~$rm $lib.exp'
+		$LD -G${allow_undefined_flag} -M $lib.exp -h $rpath/$soname -o $lib $libobjs $deplibs $linkopts~$rm $lib.exp'
     hardcode_libdir_flag_spec=
     hardcode_shlibpath_var=no
     runpath_var='LD_RUN_PATH'
--- configure.in.00	Tue Dec  5 15:45:35 2000
+++ configure.in	Thu Dec 28 14:19:54 2000
@@ -532,6 +532,10 @@
 		*sysv5*)
 			if [ test "$GCC" != yes ]; then
 				AC_DEFINE(HAVE_MEMSET)
+				PICFLAG="-KPIC"
+                                ac_cv_prog_cc_fpic=no
+                                ac_cv_prog_cc_Kpic=no
+                                ac_cv_prog_cc_KPIC=yes
 			fi
 			LDSHFLAGS="-G"
 			;;
