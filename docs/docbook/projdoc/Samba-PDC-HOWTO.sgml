<chapter>


<chapterinfo>
	<author>
		<firstname>Gerald (Jerry)</firstname><surname>Carter</surname>
		<affiliation>
			<orgname>VA Linux Systems/Samba Team</orgname>
			<address><email>jerry@samba.org</email></address>
		</affiliation>
		<firstname>David</firstname><surname>Bannon</surname>
		<affiliation>
			<orgname>Samba Team</orgname>
			<address><email>dbannon@samba.org</email></address>
		</affiliation>
		
	</author>
	<pubdate> (26 Apr 2001) </pubdate>
</chapterinfo>

<title>
How to Configure Samba 2.2 as a Primary Domain Controller
</title>


<!-- **********************************************************

     Prerequisite Reading

*************************************************************** -->
<sect1>
<title>Prerequisite Reading</title>

<para>
Before you continue readingin this chapter, please make sure 
that you are comfortable with configuring basic files services
in smb.conf and how to enable and administrate password 
encryption in Samba.  Theses two topics are covered in the
<ulink url="smb.conf.5.html"><filename>smb.conf(5)</filename></ulink> 
manpage and the <ulink url="EMCRYPTION.html">Encryption chapter</ulink> 
of this HOWTO Collection.
</para>


</sect1>



<!-- **********************************************************

     Background Information

*************************************************************** -->
<sect1>
<title>
Background
</title>

<note>
<para>
<emphasis>Author's Note :</emphasis> This document is a combination 
of David Bannon's Samba 2.2 PDC HOWTO and the Samba NT Domain FAQ. 
Both documents are superceeded by this one.
</para>
</note>

<para>
Version of Samba prior to release 2.2 had marginal capabilities to
act as a Windows NT 4.0 Primary Domain Controller (PDC).  Beginning with 
Samba 2.2.0, we are proud to announce official support for Windows NT 4.0 
style domain logons from Windows NT 4.0 (through SP6) and Windows 2000 (through 
SP1) clients.  This article outlines the steps necessary for configuring Samba 
as a PDC.  It is necessary to have a working Samba server prior to implementing the 
PDC functionality.  If you have not followed the steps outlined in 
<ulink url="UNIX_INSTALL.html"> UNIX_INSTALL.html</ulink>, please make sure 
that your server is configured correctly before proceeding.  Another good 
resource in the <ulink url="smb.conf.5.html">smb.conf(5) man 
page</ulink>. The following  functionality should work in 2.2:
</para>

<itemizedlist>
	<listitem><para>
	domain logons for Windows NT 4.0/2000 clients.
	</para></listitem>
	
	<listitem><para>
	placing a Windows 9x client in user level security
	</para></listitem>
	
	<listitem><para>
	retrieving a list of users and groups from a Samba PDC to
	Windows 9x/NT/2000 clients
	</para></listitem>
	
	<listitem><para>
	roving (roaming) user profiles
	</para></listitem>
	
	<listitem><para>
	Windows NT 4.0 style system policies
	</para></listitem>
</itemizedlist>

<warning>
	<title>Windows 2000 Service Pack 2 Clients</title>
	<para>
	Samba 2.2.1 is required for PDC functionality when using Windows 2000 
	SP2 clients. 
	</para>
</warning>


<para>
The following pieces of functionality are not included in the 2.2 release:
</para>

<itemizedlist>
	<listitem><para>
	Windows NT 4 domain trusts
	</para></listitem>
	
	<listitem><para>
	SAM replication with Windows NT 4.0 Domain Controllers
	(i.e. a Samba PDC and a Windows NT BDC or vice versa) 
	</para></listitem>
	
	<listitem><para>
	Adding users via the User Manager for Domains
	</para></listitem>

	<listitem><para>
	Acting as a Windows 2000 Domain Controller (i.e. Kerberos and 
	Active Directory)
	</para></listitem>
</itemizedlist>

<para>
Please note that Windows 9x clients are not true members of a domain
for reasons outlined in this article.  Therefore the protocol for
support Windows 9x style domain logons is completely different
from NT4 domain logons and has been officially supported for some 
time.
</para>


<para>
Implementing a Samba PDC can basically be divided into 2 broad
steps.
</para>

<orderedlist numeration="Arabic">
	<listitem><para>
	Configuring the Samba PDC
	</para></listitem>
	
	<listitem><para>
	Creating machine trust accounts	and joining clients 
	to the domain
	</para></listitem>
</orderedlist>

<para>
There are other minor details such as user profiles, system
policies, etc...  However, these are not necessarily specific
to a Samba PDC as much as they are related to Windows NT networking
concepts.  They will be mentioned only briefly here.
</para>

</sect1>


<!-- **********************************************************

     Configuring the Samba PDC

*************************************************************** -->

<sect1>
<title>Configuring the Samba Domain Controller</title>

<para>
The first step in creating a working Samba PDC is to 
understand the parameters necessary in smb.conf.  I will not
attempt to re-explain the parameters here as they are more that
adequately covered in <ulink url="smb.conf.5.html"> the smb.conf
man page</ulink>.  For convenience, the parameters have been
linked with the actual smb.conf description.
</para>

<para>
Here is an example smb.conf for acting as a PDC:
</para>

<para><programlisting>
[global]
    ; Basic server settings
    <ulink url="smb.conf.5.html#NETBIOSNAME">netbios name</ulink> = <replaceable>POGO</replaceable>
    <ulink url="smb.conf.5.html#WORKGROUP">workgroup</ulink> = <replaceable>NARNIA</replaceable>

    ; we should act as the domain and local master browser
    <ulink url="smb.conf.5.html#OSLEVEL">os level</ulink> = 64
    <ulink url="smb.conf.5.html#PERFERREDMASTER">preferred master</ulink> = yes
    <ulink url="smb.conf.5.html#DOMAINMASTER">domain master</ulink> = yes
    <ulink url="smb.conf.5.html#LOCALMASTER">local master</ulink> = yes
    
    ; security settings (must user security = user)
    <ulink url="smb.conf.5.html#SECURITYEQUALSUSER">security</ulink> = user
    
    ; encrypted passwords are a requirement for a PDC
    <ulink url="smb.conf.5.html#ENCRYPTPASSWORDS">encrypt passwords</ulink> = yes
    
    ; support domain logons
    <ulink url="smb.conf.5.html#DOMAINLOGONS">domain logons</ulink> = yes
    
    ; where to store user profiles?
    <ulink url="smb.conf.5.html#LOGONPATH">logon path</ulink> = \\%N\profiles\%u
    
    ; where is a user's home directory and where should it
    ; be mounted at?
    <ulink url="smb.conf.5.html#LOGONDRIVE">logon drive</ulink> = H:
    <ulink url="smb.conf.5.html#LOGONHOME">logon home</ulink> = \\homeserver\%u
    
    ; specify a generic logon script for all users
    ; this is a relative **DOS** path to the [netlogon] share
    <ulink url="smb.conf.5.html#LOGONSCRIPT">logon script</ulink> = logon.cmd

; necessary share for domain controller
[netlogon]
    <ulink url="smb.conf.5.html#PATH">path</ulink> = /usr/local/samba/lib/netlogon
    <ulink url="smb.conf.5.html#WRITEABLE">writeable</ulink> = no
    <ulink url="smb.conf.5.html#WRITELIST">write list</ulink> = <replaceable>ntadmin</replaceable>
    
; share for storing user profiles
[profiles]
    <ulink url="smb.conf.5.html#PATH">path</ulink> = /export/smb/ntprofile
    <ulink url="smb.conf.5.html#WRITEABLE">writeable</ulink> = yes
    <ulink url="smb.conf.5.html#CREATEMASK">create mask</ulink> = 0600
    <ulink url="smb.conf.5.html#DIRECTORYMASK">directory mask</ulink> = 0700
</programlisting></para>

<para>
There are a couple of points to emphasize in the above configuration.
</para>

<itemizedlist>
	<listitem><para>
	Encrypted passwords must be enabled.  For more details on how 
	to do this, refer to <ulink url="ENCRYPTION.html">ENCRYPTION.html</ulink>.
	</para></listitem>
	
	<listitem><para>
	The server must support domain logons and a
	<filename>[netlogon]</filename> share
	</para></listitem>
	
	<listitem><para>
	The server must be the domain master browser in order for Windows 
	client to locate the server as a DC.  Please refer to the various 
	Network Browsing documentation included with this distribution for 
	details.
	</para></listitem>
</itemizedlist>    

<para>
As Samba 2.2 does not offer a complete implementation of group mapping between 
Windows NT groups and UNIX groups (this is really quite complicated to explain 
in a short space), you should refer to the <ulink url="smb.conf.5.html#DOMAINADMINUSERS">domain 
admin users</ulink> and <ulink url="smb.conf.5.html#DOMAINADMINGROUP">domain 
admin group</ulink> smb.conf parameters for information of creating a Domain Admins 
style accounts.
</para>

</sect1>


<sect1>
<title>Creating Machine Trust Accounts and Joining Clients 
to the Domain</title>

<para>
A machine trust account is a samba user account owned by a computer.  
The account password acts as the shared secret for secure 
communication with the Domain Controller.  This is a security feature
to prevent an unauthorized machine with the same netbios name from 
joining the domain and gaining access to domain user/group accounts.  
Hence a Windows 9x host is never a true member of a domain because it does 
not posses a machine trust account, and thus has no shared secret with the DC.
</para>

<para>
On a Windows NT PDC, these machine trust account passwords are stored
in the registry.  A Samba PDC stores these accounts in the same location
as user LanMan and NT password hashes (currently <filename>smbpasswd</filename>).
However, machine trust accounts only possess and use the NT password hash.
</para>

<para>
Because Samba requires machine accounts to possess a UNIX uid from
which an Windows NT SID can be generated, all of these accounts
must have an entry in <filename>/etc/passwd</filename> and smbpasswd.  
Future releases will alleviate the need to create 
<filename>/etc/passwd</filename> entries.  
</para>

<para>
There are two means of creating machine trust accounts.
</para>

<itemizedlist>
	<listitem><para>
	Manual creation before joining the client to the domain.  In this case, 
	the password is set to a known value -- the lower case of the 
	machine's netbios name.
	</para></listitem>
	
	<listitem><para>
	Creation of the account at the time of joining the domain.  In 
	this case, the session key of the administrative account used to join 
	the client to the domain acts as an encryption key for setting the 
	password to a random value (This is the recommended method).
	</para></listitem>
</itemizedlist>

<sect2>
<title>Manually creating machine trust accounts</title>

<para>
The first step in creating a machine trust account by hand is to 
create an entry for the machine in /etc/passwd.  This can be done 
using <command>vipw</command> or any 'add userr' command which is normally 
used to create new UNIX accounts.  The following is an example for a Linux 
based Samba server:
</para>

<para>
<prompt>root# </prompt>/usr/sbin/useradd -g 100 -d /dev/null -c <replaceable>
machine_nickname</replaceable> -m -s /bin/false <replaceable>machine_name</replaceable>$
</para>

<para>
The <filename>/etc/passwd</filename> entry will list the machine name 
with a $ appended, won't have a passwd, will have a null shell and no 
home directory. For example a machine called 'doppy' would have an 
<filename>/etc/passwd</filename> entry like this :
</para>

<para><programlisting>
doppy$:x:505:501:<replaceable>machine_nickname</replaceable>:/dev/null:/bin/false
</programlisting></para>

<para>
Above, <replaceable>machine_nickname</replaceable> can be any descriptive name for the
pc i.e. BasementComputer. The <replaceable>machine_name</replaceable> absolutely must be 
the netbios name of the pc to be added to the domain.  The "$" must append the netbios
name of the pc or samba will not recognize this as a machine account
</para>


<para>
Now that the UNIX account has been created, the next step is to create 
the smbpasswd entry for the machine containing the well known initial 
trust account password.  This can be done using the <ulink 
url="smbpasswd.6.html"><command>smbpasswd(8)</command></ulink> command 
as shown here:
</para>

<para>
<prompt>root# </prompt> smbpasswd -a -m <replaceable>machine_name</replaceable>
</para>

<para>
where <replaceable>machine_name</replaceable> is the machine's netbios
name. 
</para>

<warning>
	<title>Join the client to the domain immediately</title>

	<para>
	Manually creating a machine trust account using this method is the 
	equivalent of creating a machine account on a Windows NT PDC using 
	the "Server Manager".  From the time at which the account is created
	to the time which th client joins the domain and changes the password,
	your domain is vulnerable to an intruder joining your domain using a
	a machine with the same netbios name.  A PDC inherently trusts
	members of the domain and will serve out a large degree of user 
	information to such clients.  You have been warned!
	</para>
</warning>
</sect2>


<sect2>
<title>Creating machine trust accounts "on the fly"</title>

<para>
The second, and most recommended way of creating machine trust accounts 
is to create them as needed at the time the client is joined to 
the domain.  You will need to include a value for the <ulink 
url="smb.conf.5.html#ADDUSERSCRIPT">add user script</ulink>
parameter.  Below is an example from a RedHat 6.2 Linux system.
</para>

<para><programlisting>
add user script = /usr/sbin/useradd -d /dev/null -g 100 -s /bin/false -M %u 
</programlisting></para>

<para>
In Samba 2.2.1, <emphasis>only the root account</emphasis> can be used to create
machine accounts like this.  Therefore, it is required to create 
an entry in smbpasswd for <emphasis>root</emphasis>.  The password 
<emphasis>SHOULD</emphasis> be set to s different password that the 
associated <filename>/etc/passwd</filename> entry for security reasons.
</para>
</sect2>
</sect1>

<!-- **********************************************************

     Common Problems

*************************************************************** -->

<sect1>
<title>Common Problems and Errors</title>

<para>
</para>
<itemizedlist>
<listitem>
	<para>
	<emphasis>I cannot include a '$' in a machine name.</emphasis>
	</para>
    
	<para>
	A 'machine name' in (typically) <filename>/etc/passwd</> 	
	of the machine name with a '$' appended. FreeBSD (and other BSD 
	systems ?) won't create a user with a '$' in their name.
	</para>

	<para>
	The problem is only in the program used to make the entry, once 
	made, it works perfectly. So create a user without the '$' and 
	use <command>vipw</> to edit the entry, adding the '$'. Or create 
	the whole entry with vipw if you like, make sure you use a 
	unique uid !
	</para>
</listitem>
  
<listitem>
	<para>
	<emphasis>I get told "You already have a connection to the Domain...." 
	or "Cannot join domain, the credentials supplied conflict with an 
	existing set.." when creating a machine account.</emphasis>
	</para>

	<para>
	This happens if you try to create a machine account from the 
	machine itself and already have a connection (e.g. mapped drive) 
	to a share (or IPC$) on the Samba PDC.  The following command
	will remove all network drive connections:
	</para>

	<para>
	<prompt>C:\WINNT\></prompt> <command>net use * /d</command>
	</para>

	<para>
	Further, if the machine is a already a 'member of a workgroup' that 
	is the same name as the domain you are joining (bad idea) you will 
	get this message.  Change the workgroup name to something else, it 
	does not matter what, reboot, and try again.
	</para>
</listitem>

<listitem>
	<para>
	<emphasis>The system can not log you on (C000019B)....</emphasis>
	</para>

	<para>I joined the domain successfully but after upgrading 
	to a newer version of the Samba code I get the message, "The system 
	can not log you on (C000019B), Please try a gain or consult your 
	system administrator" when attempting to logon.
	</para>

	<para>
	This occurs when the domain SID stored in 
	<filename>private/WORKGROUP.SID</filename> is 
	changed.  For example, you remove the file and <command>smbd</command> automatically 
	creates a new one.  Or you are swapping back and forth between 
	versions 2.0.7, TNG and the HEAD branch code (not recommended).  The 
	only way to correct the problem is to restore the original domain 
	SID or remove the domain client from the domain and rejoin.
	</para>
</listitem>

<listitem>
	<para>
	<emphasis>The machine account for this computer either does not 
	exist or is not accessible.</emphasis>
	</para>

	<para>
	When I try to join the domain I get the message "The machine account 
	for this computer either does not exist or is not accessible". Whats 
	wrong?
	</para>

	<para>
	This problem is caused by the PDC not having a suitable machine account. 
	If you are using the <parameter>add user script</parameter> method to create 
	accounts then this would indicate that it has not worked. Ensure the domain 
	admin user system is working.
	</para>

	<para>
	Alternatively if you are creating account entries manually then they 
	have not been created correctly. Make sure that you have the entry 
	correct for the machine account in smbpasswd file on the Samba PDC. 
	If you added the account using an editor rather than using the smbpasswd 
	utility, make sure that the account name is the machine netbios name 
	with a '$' appended to it ( ie. computer_name$ ). There must be an entry 
	in both /etc/passwd and the smbpasswd file. Some people have reported 
	that inconsistent subnet masks between the Samba server and the NT 
	client have caused this problem.   Make sure that these are consistent 
	for both client and server.
	</para>
</listitem>

<listitem>
	<para>
	<emphasis>When I attempt to login to a Samba Domain from a NT4/W2K workstation,
	I get a message about my account being disabled.</emphasis>
	</para>

	<para>
	This problem is caused by a PAM related bug in Samba 2.2.0.  This bug is 
	fixed in 2.2.1.  Other symptoms could be unaccessible shares on 
	NT/W2K member servers in the domain or the following error in your smbd.log:
	passdb/pampass.c:pam_account(268) PAM: UNKNOWN ERROR for User: %user%
	</para>
 
	<para>
	At first be ensure to enable the useraccounts with <command>smbpasswd -e 
	%user%</command>, this is normaly done, when you create an account.
	</para>

	<para>
	In order to work around this problem in 2.2.0, configure the 
	<parameter>account</parameter> control flag in 
	<filename>/etc/pam.d/samba</filename> file as follows:
	</para> 

	<para><programlisting>
	account required        pam_permit.so
	</programlisting></para>

	<para>
	If you want to remain backward compatibility to samba 2.0.x use
	<filename>pam_permit.so</filename>, it's also possible to use 
	<filename>pam_pwdb.so</filename>. There are some bugs if you try to 
	use <filename>pam_unix.so</filename>, if you need this, be ensure to use
	the most recent version of this file.
	</para>
</listitem>
</itemizedlist>

</sect1>



<!-- **********************************************************

     Policies and Profiles

*************************************************************** -->

<sect1>
<title>
System Policies and Profiles
</title>

<para>
Much of the information necessary to implement System Policies and
Roving User Profiles in a Samba domain is the same as that for 
implementing these same items in a Windows NT 4.0 domain. 
You should read the white paper <ulink url="http://www.microsoft.com/ntserver/management/deployment/planguide/prof_policies.asp">Implementing
Profiles and Policies in Windows NT 4.0</ulink> available from Microsoft.
</para>

<para>
Here are some additional details:
</para>

<itemizedlist>

<listitem>
	<para>
	<emphasis>What about Windows NT Policy Editor ?</emphasis>
	</para>

	<para>
	To create or edit <filename>ntconfig.pol</filename> you must use 
	the NT Server Policy Editor, <command>poledit.exe</command>	which 
	is included with NT Server but <emphasis>not NT Workstation</emphasis>. 
	There is a Policy Editor on a NTws 
	but it is not suitable for creating <emphasis>Domain Policies</emphasis>. 
	Further, although the Windows 95 
	Policy Editor can be installed on an NT Workstation/Server, it will not
	work with NT policies because the registry key that are set by the policy templates. 
	However, the files from the NT Server will run happily enough on an NTws. 	
	You need <filename>poledit.exe, common.adm</> and <filename>winnt.adm</>. It is convenient
	to put the two *.adm files in <filename>c:\winnt\inf</> which is where
	the binary will look for them unless told otherwise. Note also that that 
	directory is 'hidden'.
	</para>

	<para>
	The Windows NT policy editor is also included with the Service Pack 3 (and 
	later) for Windows NT 4.0. Extract the files using <command>servicepackname /x</command>, 
	ie thats <command>Nt4sp6ai.exe /x</command> for service pack 6a.  The policy editor, 
	<command>poledit.exe</command> and the associated template files (*.adm) should
	be extracted as well.  It is also possible to downloaded the policy template 
	files for Office97 and get a copy of the policy editor.  Another possible 
	location is with the Zero Administration Kit available for download from Microsoft.
	</para>
</listitem>


<listitem>
	<para>
	<emphasis>Can Win95 do Policies ?</emphasis>
	</para>

	<para>
	Install the group policy handler for Win9x to pick up group 
	policies.   Look on the Win98 CD in <filename>\tools\reskit\netadmin\poledit</filename>. 
	Install group policies on a Win9x client by double-clicking 
	<filename>grouppol.inf</filename>. Log off and on again a couple of 
	times and see if Win98 picks up group policies.  Unfortunately this needs 
	to be done on every Win9x machine that uses group policies....
	</para> 

	<para>
	If group policies don't work one reports suggests getting the updated 
	(read: working) grouppol.dll for Windows 9x. The group list is grabbed 
	from /etc/group.
	</para>
</listitem>


<listitem>
	<para>
	<emphasis>How do I get 'User Manager' and 'Server Manager'</emphasis>
	</para>

	<para>
	Since I don't need to buy an NT Server CD now, how do I get 
	the 'User Manager for Domains', the 'Server Manager' ?
	</para>

	<para>
	Microsoft distributes a version of these tools called nexus for 
	installation on Windows 95 systems.  The tools set includes
	</para>
	
	<itemizedlist>
		<listitem><para>Server Manager</para></listitem> 
		
		<listitem><para>User Manager for Domains</para></listitem> 

		<listitem><para>Event Viewer</para></listitem> 
	</itemizedlist>

	<para>
	Click here to download the archived file <ulink 
	url="ftp://ftp.microsoft.com/Softlib/MSLFILES/NEXUS.EXE">ftp://ftp.microsoft.com/Softlib/MSLFILES/NEXUS.EXE</ulink>
	</para>

	<para>
	The Windows NT 4.0 version of the 'User Manager for 
	Domains' and 'Server Manager' are available from Microsoft via ftp 
	from <ulink url="ftp://ftp.microsoft.com/Softlib/MSLFILES/SRVTOOLS.EXE">ftp://ftp.microsoft.com/Softlib/MSLFILES/SRVTOOLS.EXE</ulink>
	</para>
</listitem>
</itemizedlist>

</sect1>



<!-- **********************************************************

     Getting Help

*************************************************************** -->


<sect1>
<title>What other help can I get ? </title>

<para>
There are many sources of information available in the form 
of mailing lists, RFC's and documentation.  The docs that come 
with the samba distribution contain very good explanations of 
general SMB topics such as browsing.</para> 

<itemizedlist>
<listitem>
	<para>
	<emphasis>What are some diagnostics tools I can use to debug the domain logon 
	process and where can I	find them?</emphasis>
	</para>

   <para>
	One of the best diagnostic tools for debugging problems is Samba itself.  
	You can use the -d option for both smbd and nmbd to specifiy what 
	'debug level' at which to run.  See the man pages on smbd, nmbd  and 
	smb.conf for more information on debugging options.  The debug 
	level can range from 1 (the default) to 10 (100 for debugging passwords).
	</para>
	
	<para>
	Another helpful method of debugging is to compile samba using the 
	<command>gcc -g </command> flag.   This will include debug 
	information in the binaries and allow you to attach gdb to the 
	running smbd / nmbd process.  In order to attach gdb to an smbd 
	process for an NT workstation, first get the workstation to make the 
	connection. Pressing ctrl-alt-delete and going down to the domain box 
	is sufficient (at least, on the first time you join the domain) to 
	generate a 'LsaEnumTrustedDomains'. Thereafter, the workstation 
	maintains an open connection, and therefore there will be an smbd 
	process running (assuming that you haven't set a really short smbd 
	idle timeout)  So, in between pressing ctrl alt delete, and actually 
	typing in your password, you can gdb attach and continue.
	</para>

	<para>
	Some useful samba commands worth investigating:
	</para>
	
	<itemizedlist>
		<listitem><para>testparam | more</para></listitem>
		<listitem><para>smbclient -L //{netbios name of server}</para></listitem>
	</itemizedlist>
    
	<para>
	An SMB enabled version of tcpdump is available from 
	<ulink url="http://www.tcpdump.org/">http://www.tcpdup.org/</ulink>.
	Ethereal, another good packet sniffer for UNIX and Win32
	hosts, can be downloaded from <ulink 
	url="http://www.ethereal.com/">http://www.ethereal.com</ulink>.
	</para>
	
	<para>
	For tracing things on the Microsoft Windows NT, Network Monitor 
	(aka. netmon) is available on the Microsoft Developer Network CD's, 
	the Windows NT Server install CD and the SMS CD's.  The version of 
	netmon that ships with SMS allows for dumping packets between any two 
	computers (ie. placing the network interface in promiscuous mode).  
	The version on the NT Server install CD will only allow monitoring 
	of network traffic directed to the local NT box and broadcasts on the 
	local subnet.  Be aware that Ethereal can read and write netmon 
	formatted files.
	</para>
</listitem>


<listitem>
	<para>
	<emphasis>How do I install 'Network Monitor' on an NT Workstation 
	or a Windows 9x box?</emphasis>
	</para>

	<para>
	Installing netmon on an NT workstation requires a couple 
	of steps.  The following are for installing Netmon V4.00.349, which comes 
	with Microsoft Windows NT Server 4.0, on Microsoft Windows NT 
	Workstation 4.0.  The process should be similar for other version of 
	Windows NT / Netmon.  You will need both the Microsoft Windows 
	NT Server 4.0 Install CD and the Workstation 4.0 Install CD.
	</para> 

	<para>
	Initially you will need to install 'Network Monitor Tools and Agent' 
	on the NT Server.  To do this 
	</para>

	<itemizedlist>
		<listitem><para>Goto Start - Settings - Control Panel - 
		Network - Services - Add </para></listitem>
		
		<listitem><para>Select the 'Network Monitor Tools and Agent' and 
		click on 'OK'.</para></listitem> 
		
		<listitem><para>Click 'OK' on the Network Control Panel.
		</para></listitem> 
		
		<listitem><para>Insert the Windows NT Server 4.0 install CD 
		when prompted.</para></listitem> 
	</itemizedlist>

	<para>
	At this point the Netmon files should exist in 
	<filename>%SYSTEMROOT%\System32\netmon\*.*</filename>.    
	Two subdirectories exist as well, <filename>parsers\</filename> 
	which contains the necessary DLL's for parsing the netmon packet 
	dump, and <filename>captures\</filename>.
	</para>

	<para>
	In order to install the Netmon tools on an NT Workstation, you will 
	first need to install the 'Network  Monitor Agent' from the Workstation 
	install CD.
	</para>

	<itemizedlist>
		<listitem><para>Goto Start - Settings - Control Panel - 
		Network - Services - Add</para></listitem> 

		<listitem><para>Select the 'Network Monitor Agent' and click 
		on 'OK'.</para></listitem> 
		
		<listitem><para>Click 'OK' on the Network Control Panel.
		</para></listitem> 
		
		<listitem><para>Insert the Windows NT Workstation 4.0 install 
		CD when prompted.</para></listitem> 
	</itemizedlist>


	<para>
	Now copy the files from the NT Server in %SYSTEMROOT%\System32\netmon\*.* 
	to %SYSTEMROOT%\System32\netmon\*.* on the Workstation and set 
	permissions as  you deem appropriate for your site. You will need 
	administrative rights on the NT box to run netmon.
	</para>

	<para>
	To install Netmon on a Windows 9x box install the network monitor agent 
	from the Windows 9x CD (\admin\nettools\netmon).  There is a readme 
	file located with the netmon driver files on the CD if you need 
	information on how to do this.  Copy the files from a working 
	Netmon installation.
	</para> 
</listitem>




<listitem>
	<para>
	The following is a list if helpful URLs and other links:
	</para>

	<itemizedlist>

 	<listitem><para>Home of Samba site <ulink url="http://samba.org">
        http://samba.org</ulink>. We have a mirror near you !</para></listitem>

	<listitem><para> The <emphasis>Development</emphasis> document 
	on the Samba mirrors might mention your problem. If so,
	it might mean that the developers are working on it.</para></listitem>
 
	<listitem><para>See how Scott Merrill simulates a BDC behavior at 
        <ulink url="http://www.skippy.net/linux/smb-howto.html">
        http://www.skippy.net/linux/smb-howto.html</>. </para></listitem>

	<listitem><para>Although 2.0.7 has almost had its day as a PDC, David Bannon will
        keep the 2.0.7 PDC pages at <ulink url="http://bioserve.latrobe.edu.au/samba">
        http://bioserve.latrobe.edu.au/samba</ulink> going for a while yet.</para></listitem>

	<listitem><para>Misc links to CIFS information 
        <ulink url="http://samba.org/cifs/">http://samba.org/cifs/</ulink></para></listitem>

	<listitem><para>NT Domains for Unix <ulink url="http://mailhost.cb1.com/~lkcl/ntdom/">
        http://mailhost.cb1.com/~lkcl/ntdom/</ulink></para></listitem>

	<listitem><para>FTP site for older SMB specs: 
        <ulink url="ftp://ftp.microsoft.com/developr/drg/CIFS/">
        ftp://ftp.microsoft.com/developr/drg/CIFS/</ulink></para></listitem>

	</itemizedlist>
</listitem>
</itemizedlist>


<itemizedlist>
<listitem>
	<para>
	<emphasis>How do I get help from the mailing lists ?</emphasis>
	</para>

	<para>
	There are a number of Samba related mailing lists. Go to <ulink 
	url="http://samba.org">http://samba.org</ulink>, click on your nearest mirror
	and then click on <command>Support</> and then click on <command>
	Samba related mailing lists</>.
	</para>

	<para>
	For questions relating to Samba TNG go to
	<ulink url="http://www.samba-tng.org/">http://www.samba-tng.org/</ulink> 
	It has been requested that you don't post questions about Samba-TNG to the
	main stream Samba lists.</para>
	 
	<para>
	If you post a message to one of the lists please observe the following guide lines :
	</para>

	<itemizedlist>

	<listitem><para> Always remember that the developers are volunteers, they are 
		not paid and they never guarantee to produce a particular feature at 
		a particular time. Any time lines are 'best guess' and nothing more.
		</para></listitem>

	<listitem><para> Always mention what version of samba you are using and what 
		operating system its running under. You should probably list the
        relevant sections of your smb.conf file, at least the options 
        in [global] that affect PDC support.</para></listitem>

    <listitem><para>In addition to the version, if you obtained Samba via
        CVS mention the date when you last checked it out.</para></listitem>

	<listitem><para> Try and make your question clear and brief, lots of long, 
		convoluted questions get deleted before	they are completely read ! 
		Don't post html encoded messages (if you can select colour or font 
		size its html).</para></listitem>

	<listitem><para> If you run one of those nifty 'I'm on holidays' things when 
		you are away, make sure its configured	to not answer mailing lists.
		</para></listitem> 

	<listitem><para> Don't cross post. Work out which is the best list to post to 
		and see what happens, ie don't post to both samba-ntdom and samba-technical.
        Many people active on the lists subscribe to more 
		than one list and get annoyed to see the same message two or more times. 
		Often someone will see a message and thinking it would be better dealt 
		with on another, will forward it on for you.</para></listitem>

    <listitem><para>You might include <emphasis>partial</emphasis>
        log files written at a debug level set to as much as 20.  
        Please don't send the entire log but enough to give the context of the 
        error messages.</para></listitem>

    <listitem><para>(Possibly) If you have a complete netmon trace ( from the opening of 
        the pipe to the error ) you can send the *.CAP file as well.</para></listitem> 

    <listitem><para>Please think carefully before attaching a document to an email.
        Consider pasting the relevant parts into the body of the message. The samba
        mailing lists go to a huge number of people, do they all need a copy of your 
        smb.conf in their attach directory ?</para></listitem>

	</itemizedlist>
</listitem>


<listitem>
	<para>
	<emphasis>How do I get off the mailing lists ?</emphasis>
	</para>

	<para>To have your name removed from a samba mailing list, go to the
	same place you went to to get on it. Go to <ulink 
	url="http://lists.samba.org/">http://lists.samba.org</ulink>, 
	click on your nearest mirror and then click on <command>Support</> and 
	then click on <command> Samba related mailing lists</>. Or perhaps see 
	<ulink url="http://lists.samba.org/mailman/roster/samba-ntdom">here</ulink>
	</para>

	<para>
	Please don't post messages to the list asking to be removed, you will just
	be referred to the above address (unless that process failed in some way...)
	</para>
</listitem>
</itemizedlist>

</sect1>


<!-- **********************************************************

     Windows 9x domain control

*************************************************************** -->
<sect1>
<title>Domain Control for Windows 9x/ME</title>

<note>
<para>
The following section contains much of the original 
DOMAIN.txt file previously included with Samba.  Much of 
the material is based on what went into the book Special 
Edition, Using Samba. (Richard Sharpe)
</para>
</note>

<para>
A domain and a workgroup are exactly the same thing in terms of network
browsing.  The difference is that a distributable authentication
database is associated with a domain, for secure login access to a
network.  Also, different access rights can be granted to users if they
successfully authenticate against a domain logon server (NT server and 
other systems based on NT server support this, as does at least Samba TNG now).
</para>

<para>
The SMB client logging on to a domain has an expectation that every other
server in the domain should accept the same authentication information.
Network browsing functionality of domains and workgroups is
identical and is explained in BROWSING.txt. It should be noted, that browsing
is total orthogonal to logon support.
</para>

<para>
Issues related to the single-logon network model are discussed in this
document.  Samba supports domain logons, network logon scripts, and user
profiles for MS Windows for workgroups and MS Windows 9X clients.
</para>


<para>
When an SMB client in a domain wishes to logon it broadcast requests for a
logon server.  The first one to reply gets the job, and validates its
password using whatever mechanism the Samba administrator has installed.
It is possible (but very stupid) to create a domain where the user
database is not shared between servers, ie they are effectively workgroup
servers advertising themselves as participating in a domain.  This
demonstrates how authentication is quite different from but closely
involved with domains.
</para>

<para>
Another thing commonly associated with single-logon domains is remote
administration over the SMB protocol.  Again, there is no reason why this
cannot be implemented with an underlying username database which is
different from the Windows NT SAM.  Support for the Remote Administration
Protocol is planned for a future release of Samba.
</para>

<para>
Network logon support as discussed in this section is aimed at Window for
Workgroups, and Windows 9X clients. 
</para>

<para>
Support for profiles is confirmed as working for Win95, NT 4.0 and NT 3.51.
It is possible to specify: the profile location; script file to be loaded
on login; the user's home directory; and for NT a kick-off time could also
now easily be supported. However, there are some differences between Win9X
profile support and WinNT profile support. These are discussed below.
</para>

<para>
With NT Workstations, all this does not require the use or intervention of
an NT 4.0 or NT 3.51 server: Samba can now replace the logon services
provided by an NT server, to a limited and experimental degree (for example,
running "User Manager for Domains" will not provide you with access to
a domain created by a Samba Server).
</para>

<para>
With Win95, the help of an NT server can be enlisted, both for profile storage
and for user authentication.  For details on user authentication, see
security_level.txt.  For details on profile storage, see below.
</para>

<para>
Using these features you can make your clients verify their logon via
the Samba server; make clients run a batch file when they logon to
the network and download their preferences, desktop and start menu.
</para>

<para>
Before launching into the configuration instructions, it is worthwhile looking
at how a Win9X client performs a logon:
</para>

<orderlist>
<listitem>
	<para>
	The client broadcasts (to the IP broadcast address of the subnet it is in)
	a NetLogon request. This is sent to the NetBIOS address DOMAIN<00> at the
	NetBIOS layer.  The client chooses the first response it receives, which
	contains the NetBIOS name of the logon server to use in the format of 
	\\SERVER.
	</para>
</listitem>

<listitem>
	<para>
	The client then connects to that server, logs on (does an SMBsessetupX) and
	then connects to the IPC$ share (using an SMBtconX).
	</para>
</listitem>

<listitem>
	<para>
	The client then does a NetWkstaUserLogon request, which retrieves the name
	of the user's logon script. 
	</para>
</listitem>

<listitem>
	<para>
	The client then connects to the NetLogon share and searches for this 	
	and if it is found and can be read, is retrieved and executed by the client.
	After this, the client disconnects from the NetLogon share.
	</para>
</listitem>

<listitem>
	<para>
	The client then sends a NetUserGetInfo request to the server, to retrieve
	the user's home share, which is used to search for profiles. Since the
	response to the NetUserGetInfo request does not contain much more 	
	the user's home share, profiles for Win9X clients MUST reside in the user
	home directory.
	</para>
</listitem>

<listitem>
	<para>
	The client then connects to the user's home share and searches for the 
	user's profile. As it turns out, you can specify the users home share as
	a sharename and path. For example, \\server\fred\.profile.
	If the profiles are found, they are implemented.
	</para>
</listitem>

<listitem>
	<para>
	The client then disconnects from the user's home share, and reconnects to
	the NetLogon share and looks for CONFIG.POL, the policies file. If this is
	found, it is read and implemented.
	</para>
</listitem>
</orderedlist>


<sect2>
<title>Configuration Instructions:	Network Logons</title>

To use domain logons and profiles you need to do the following:

1) Create a share called [netlogon] in your smb.conf. This share should
   be readable by all users, and probably should not be writeable. This
   share will hold your network logon scripts, and the CONFIG.POL file
   (Note: for details on the CONFIG.POL file, how to use it, what it is,
   refer to the Microsoft Windows NT Administration documentation.
   The format of these files is not known, so you will need to use
   Microsoft tools).

For example I have used:

   [netlogon]
    path = /data/dos/netlogon
    writeable = no
    guest ok = no

   Note that it is important that this share is not writeable by ordinary
   users, in a secure environment: ordinary users should not be allowed
   to modify or add files that another user's computer would then download
   when they log in.

2) in the [global] section of smb.conf set the following:

   domain logons = yes
   logon script = %U.bat

   The choice of batch file is, of course, up to you. The above would
   give each user a separate batch file as the %U will be changed to
   their username automatically. The other standard % macros may also be
   used. You can make the batch files come from a subdirectory by using
   something like:

   logon script = scripts\%U.bat

3) create the batch files to be run when the user logs in. If the batch
   file doesn't exist then no batch file will be run. 

   In the batch files you need to be careful to use DOS style cr/lf line
   endings. If you don't then DOS may get confused. I suggest you use a
   DOS editor to remotely edit the files if you don't know how to produce
   DOS style files under unix.

4) Use smbclient with the -U option for some users to make sure that
   the \\server\NETLOGON share is available, the batch files are
   visible and they are readable by the users.

5) you will probabaly find that your clients automatically mount the
   \\SERVER\NETLOGON share as drive z: while logging in. You can put
   some useful programs there to execute from the batch files.

<warning>
<title>security mode, master browsers, and wins</title>
<para>
</para>
</sect2>


<sect2>
<title>Configuration Instructions:	Setting up Roaming User Profiles</title>

NOTE! There has been considerable confusion around roaming profiles from
about Samba 2.0.4 to 2.0.5. The support changed in Samba 2.0.6, and, as the
Samba team now understands how roaming profiles work for both NT and Win9X
clients, the functionality will not be changed again.

NOTE! Roaming profiles support is different for Win9X and WinNT.

Before discussing how to configure roaming profiles, it is useful to see how
Win9X and WinNT clients implement these features.

Win9X clients send a NetUserGetInfo request to the server to get the user's
profiles location. However, the response does not have room for a separate 
profiles location field, only the users home share. This means that Win9X 
profiles are restricted to being in the user's home directory.

WinNT clients send a NetSAMLogon RPC request, which contains many fields, 
including a separate field for the location of the user's profiles. 

This means that support for profiles is different for Win9X and WinNT.

Windows NT Configuration
------------------------

To support WinNT clients, inn the [global] section of smb.conf set the
following (for example):

  logon path = \\profileserver\profileshare\profilepath\%U\moreprofilepath

The default for this option is \\%N\%U\profile, namely
\\sambaserver\username\profile.  The \\N%\%U service is created
automatically by the [homes] service.

If you are using a samba server for the profiles, you _must_ make the
share specified in the logon path browseable. 

[lkcl 26aug96 - we have discovered a problem where Windows clients can
maintain a connection to the [homes] share in between logins.  The
[homes] share must NOT therefore be used in a profile path.]

Windows 9X Configuration
------------------------

To support Win9X clients, you must use the "logon home" parameter. Samba has
now been fixed so that "net use/home" now works as well, and it, too, relies
on the "logon home" parameter.

By using the logon home parameter, you are restricted to putting Win9X 
profiles in the user's home directory.

But wait! There is a trick you can use. If you set the following in the
[global] section of your smb.conf file:

  logon home = \\%L\%U\.profiles

then your Win9X clients will dutifully put their clients in a subdirectory
of your home directory called .profiles (thus making them hidden).

Not only that, but 'net use/home' will also work, because of a feature in 
Win9X. It removes any directory stuff off the end of the home directory area
and only uses the server and share portion. That is, it looks like you
specified \\%L\%U for "logon home".

Win9X and WinNT Configuration
-----------------------------

You can support profiles for both Win9X and WinNT clients by setting both the
"logon home" and "logon path" parameters. For example:

  logon home = \\%L\%U\.profiles
  logon path = \\%L\profiles\%U

NOTE! I have not checked what 'net use /home' does on NT when "logon home" is
set as above.

Windows 9X Profile Setup
------------------------
When a user first logs in on Windows 9X, the file user.DAT is created,
as are folders "Start Menu", "Desktop", "Programs" and "Nethood".  
These directories and their contents will be merged with the local
versions stored in c:\windows\profiles\username on subsequent logins,
taking the most recent from each.  You will need to use the [global]
options "preserve case = yes", "short case preserve = yes" and
"case sensitive = no" in order to maintain capital letters in shortcuts
in any of the profile folders.

The user.DAT file contains all the user's preferences.  If you wish to
enforce a set of preferences, rename their user.DAT file to user.MAN,
and deny them write access to this file.

1) On the Windows 95 machine, go to Control Panel | Passwords and
   select the User Profiles tab.  Select the required level of
   roaming preferences.  Press OK, but do _not_ allow the computer
   to reboot.

2) On the Windows 95 machine, go to Control Panel | Network |
   Client for Microsoft Networks | Preferences.  Select 'Log on to
   NT Domain'.  Then, ensure that the Primary Logon is 'Client for
   Microsoft Networks'.  Press OK, and this time allow the computer
   to reboot.

Under Windows 95, Profiles are downloaded from the Primary Logon.
If you have the Primary Logon as 'Client for Novell Networks', then
the profiles and logon script will be downloaded from your Novell
Server.  If you have the Primary Logon as 'Windows Logon', then the
profiles will be loaded from the local machine - a bit against the
concept of roaming profiles, if you ask me.

You will now find that the Microsoft Networks Login box contains
[user, password, domain] instead of just [user, password].  Type in
the samba server's domain name (or any other domain known to exist,
but bear in mind that the user will be authenticated against this
domain and profiles downloaded from it, if that domain logon server
supports it), user name and user's password.

Once the user has been successfully validated, the Windows 95 machine
will inform you that 'The user has not logged on before' and asks you
if you wish to save the user's preferences?  Select 'yes'.

Once the Windows 95 client comes up with the desktop, you should be able
to examine the contents of the directory specified in the "logon path"
on the samba server and verify that the "Desktop", "Start Menu",
"Programs" and "Nethood" folders have been created.

These folders will be cached locally on the client, and updated when
the user logs off (if you haven't made them read-only by then :-).
You will find that if the user creates further folders or short-cuts,
that the client will merge the profile contents downloaded with the
contents of the profile directory already on the local client, taking
the newest folders and short-cuts from each set.

If you have made the folders / files read-only on the samba server,
then you will get errors from the w95 machine on logon and logout, as
it attempts to merge the local and the remote profile.  Basically, if
you have any errors reported by the w95 machine, check the unix file
permissions and ownership rights on the profile directory contents,
on the samba server.


If you have problems creating user profiles, you can reset the user's
local desktop cache, as shown below.  When this user then next logs in,
they will be told that they are logging in "for the first time".


1) instead of logging in under the [user, password, domain] dialog,
   press escape.

2) run the regedit.exe program, and look in:

     HKEY_LOCAL_MACHINE\Windows\CurrentVersion\ProfileList

   you will find an entry, for each user, of ProfilePath.  Note the
   contents of this key (likely to be c:\windows\profiles\username),
   then delete the key ProfilePath for the required user.

   [Exit the registry editor].

3) WARNING - before deleting the contents of the directory listed in
   the ProfilePath (this is likely to be c:\windows\profiles\username),
   ask them if they have any important files stored on their desktop
   or in their start menu.  delete the contents of the directory
   ProfilePath (making a backup if any of the files are needed).

   This will have the effect of removing the local (read-only hidden
   system file) user.DAT in their profile directory, as well as the
   local "desktop", "nethood", "start menu" and "programs" folders.

4) search for the user's .PWL password-cacheing file in the c:\windows
   directory, and delete it.

5) log off the windows 95 client.

6) check the contents of the profile path (see "logon path" described
   above), and delete the user.DAT or user.MAN file for the user,
   making a backup if required.  


If all else fails, increase samba's debug log levels to between 3 and 10,
and / or run a packet trace program such as tcpdump or netmon.exe, and
look for any error reports.

If you have access to an NT server, then first set up roaming profiles
and / or netlogons on the NT server.  Make a packet trace, or examine
the example packet traces provided with NT server, and see what the
differences are with the equivalent samba trace.


Windows NT Workstation 4.0
--------------------------

When a user first logs in to a Windows NT Workstation, the profile
NTuser.DAT is created.  The profile location can be now specified
through the "logon path" parameter.  

[lkcl 10aug97 - i tried setting the path to
\\samba-server\homes\profile, and discovered that this fails because
a background process maintains the connection to the [homes] share
which does _not_ close down in between user logins.  you have to
have \\samba-server\%L\profile, where user is the username created
from the [homes] share].

There is a parameter that is now available for use with NT Profiles:
"logon drive".  This should be set to "h:" or any other drive, and
should be used in conjunction with the new "logon home" parameter.

The entry for the NT 4.0 profile is a _directory_ not a file.  The NT
help on profiles mentions that a directory is also created with a .PDS
extension.  The user, while logging in, must have write permission to
create the full profile path (and the folder with the .PDS extension)
[lkcl 10aug97 - i found that the creation of the .PDS directory failed,
and had to create these manually for each user, with a shell script.
also, i presume, but have not tested, that the full profile path must
be browseable just as it is for w95, due to the manner in which they
attempt to create the full profile path: test existence of each path
component; create path component].

In the profile directory, NT creates more folders than 95.  It creates
"Application Data" and others, as well as "Desktop", "Nethood",
"Start Menu" and "Programs".  The profile itself is stored in a file
NTuser.DAT.  Nothing appears to be stored in the .PDS directory, and
its purpose is currently unknown.

You can use the System Control Panel to copy a local profile onto
a samba server (see NT Help on profiles: it is also capable of firing
up the correct location in the System Control Panel for you).  The
NT Help file also mentions that renaming NTuser.DAT to NTuser.MAN
turns a profile into a mandatory one.

[lkcl 10aug97 - i notice that NT Workstation tells me that it is
downloading a profile from a slow link.  whether this is actually the
case, or whether there is some configuration issue, as yet unknown,
that makes NT Workstation _think_ that the link is a slow one is a
matter to be resolved].

[lkcl 20aug97 - after samba digest correspondance, one user found, and
another confirmed, that profiles cannot be loaded from a samba server
unless "security = user" and "encrypt passwords = yes" (see the file
ENCRYPTION.txt) or "security = server" and "password server = ip.address.
of.yourNTserver" are used.  either of these options will allow the NT
workstation to access the samba server using LAN manager encrypted
passwords, without the user intervention normally required by NT
workstation for clear-text passwords].

[lkcl 25aug97 - more comments received about NT profiles: the case of
the profile _matters_.  the file _must_ be called NTuser.DAT or, for
a mandatory profile, NTuser.MAN].


Windows NT Server
-----------------

There is nothing to stop you specifying any path that you like for the
location of users' profiles.  Therefore, you could specify that the
profile be stored on a samba server, or any other SMB server, as long as
that SMB server supports encrypted passwords.



Sharing Profiles between W95 and NT Workstation 4.0
---------------------------------------------------

NOTE! I think this is all bogus, but have not deleted it. (Richard Sharpe)


The default logon path is \\%N\U%.  NT Workstation will attempt to create
a directory "\\samba-server\username.PDS" if you specify the logon path
as "\\samba-server\username" with the NT User Manager.  Therefore, you
will need to specify (for example) "\\samba-server\username\profile".
NT 4.0 will attempt to create "\\samba-server\username\profile.PDS", which
is more likely to succeed.

If you then want to share the same Start Menu / Desktop with W95, you will
need to specify "logon path = \\samba-server\username\profile" [lkcl 10aug97
this has its drawbacks: i created a shortcut to telnet.exe, which attempts
to run from the c:\winnt\system32 directory.  this directory is obviously
unlikely to exist on a Win95-only host].

If you have this set up correctly, you will find separate user.DAT and
NTuser.DAT files in the same profile directory.

[lkcl 25aug97 - there are some issues to resolve with downloading of
NT profiles, probably to do with time/date stamps.  i have found that
NTuser.DAT is never updated on the workstation after the first time that
it is copied to the local workstation profile directory.  this is in
contrast to w95, where it _does_ transfer / update profiles correctly].


</sect2>

</sect1>


<!-- **********************************************************

     Appendix - DOMAIN_CONTROL.txt

*************************************************************** -->

<sect1>
<title>
DOMAIN_CONTROL.txt : Windows NT Domain Control & Samba
</title>

<warning>
	<title>Possibly Outdated Material</title>

	<para>
	This appendix was originally authored by John H Terpstra of 
	the Samba Team and is included here for posterity.
	</para>
</warning>


<para>
<emphasis>NOTE :</emphasis> 
The term "Domain Controller" and those related to it refer to one specific
method of authentication that can underly an SMB domain. Domain Controllers
prior to Windows NT Server 3.1 were sold by various companies and based on 
private extensions to the LAN Manager 2.1 protocol. Windows NT introduced
Microsoft-specific ways of distributing the user authentication database.
See DOMAIN.txt for examples of how Samba can participate in or create
SMB domains based on shared authentication database schemes other than the 
Windows NT SAM.
</para>

<para>
Windows NT Server can be installed as either a plain file and print server
(WORKGROUP workstation or server) or as a server that participates in Domain
Control (DOMAIN member, Primary Domain controller or Backup Domain controller).
The same is true for OS/2 Warp Server, Digital Pathworks and other similar
products, all of which can participate in Domain Control along with Windows NT.
</para>

<para>
To many people these terms can be confusing, so let's try to clear the air.
</para>

<para>
Every Windows NT system (workstation or server) has a registry database.
The registry contains entries that describe the initialization information
for all services (the equivalent of Unix Daemons) that run within the Windows
NT environment. The registry also contains entries that tell application
software where to find dynamically loadable libraries that they depend upon.
In fact, the registry contains entries that describes everything that anything
may need to know to interact with the rest of the system.
</para>

<para>
The registry files can be located on any Windows NT machine by opening a
command prompt and typing:
</para>

<para>
<prompt>C:\WINNT\></prompt> dir %SystemRoot%\System32\config
</para>

<para>
The environment variable %SystemRoot% value can be obtained by typing:
</para>

<para>
<prompt>C:\WINNT></prompt>echo %SystemRoot%
</para>

<para>
The active parts of the registry that you may want to be familiar with are
the files called: default, system, software, sam and security.
</para>

<para>
In a domain environment, Microsoft Windows NT domain controllers participate
in replication of the SAM and SECURITY files so that all controllers within
the domain have an exactly identical copy of each.
</para>

<para>
The Microsoft Windows NT system is structured within a security model that
says that all applications and services must authenticate themselves before
they can obtain permission from the security manager to do what they set out
to do.
</para>

<para>
The Windows NT User database also resides within the registry. This part of
the registry contains the user's security identifier, home directory, group
memberships, desktop profile, and so on.
</para>

<para>
Every Windows NT system (workstation as well as server) will have its own
registry. Windows NT Servers that participate in Domain Security control
have a database that they share in common - thus they do NOT own an
independent full registry database of their own, as do Workstations and
plain Servers.
</para>

<para>
The User database is called the SAM (Security Access Manager) database and
is used for all user authentication as well as for authentication of inter-
process authentication (ie: to ensure that the service action a user has
requested is permitted within the limits of that user's privileges).
</para>

<para>
The Samba team have produced a utility that can dump the Windows NT SAM into 
smbpasswd format: see ENCRYPTION.txt for information on smbpasswd and
/pub/samba/pwdump on your nearest Samba mirror for the utility. This 
facility is useful but cannot be easily used to implement SAM replication
to Samba systems.
</para>

<para>
Windows for Workgroups, Windows 95, and Windows NT Workstations and Servers
can participate in a Domain security system that is controlled by Windows NT
servers that have been correctly configured. At most every domain will have
ONE Primary Domain Controller (PDC). It is desirable that each domain will
have at least one Backup Domain Controller (BDC).
</para>

<para>
The PDC and BDCs then participate in replication of the SAM database so that
each Domain Controlling participant will have an up to date SAM component
within its registry.
</para>

</sect1>

</chapter>
