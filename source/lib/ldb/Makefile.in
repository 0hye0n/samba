CC = @CC@
GCOV = @GCOV@
XSLTPROC = @XSLTPROC@
DOXYGEN = @DOXYGEN@
prefix = @prefix@
exec_prefix = @exec_prefix@
includedir = @includedir@
libdir = @libdir@
bindir = @bindir@
mandir = @mandir@
VPATH = @srcdir@:@srcdir@/..:@POPTDIR@
srcdir = @srcdir@
builddir = @builddir@
SLAPD = @SLAPD@
POPTOBJ = @POPTOBJ@
EXTRA_OBJ=@EXTRA_OBJ@
TESTS=test-tdb.sh @TESTS@

CFLAGS=-I$(srcdir)/include -Iinclude -I$(srcdir) -I$(srcdir)/.. \
       -I$(srcdir)/../tdb/include -I$(srcdir)/../tdb -I$(srcdir)/../talloc \
	-DLIBDIR=\"$(libdir)\" -DSHLIBEXT=\"@SHLIBEXT@\" -DUSE_MMAP=1 @CFLAGS@

LIB_FLAGS=-Llib -lldb @LIBS@

TDBDIR=tdb
TDB_OBJ=$(TDBDIR)/common/tdb.o $(TDBDIR)/common/dump.o \
	$(TDBDIR)/common/io.o $(TDBDIR)/common/lock.o \
	$(TDBDIR)/common/open.o $(TDBDIR)/common/traverse.o \
	$(TDBDIR)/common/freelist.o $(TDBDIR)/common/error.o \
	$(TDBDIR)/common/transaction.o 

TALLOCDIR=talloc
TALLOC_OBJ=$(TALLOCDIR)/talloc.o

LDB_TDB_DIR=ldb_tdb
LDB_TDB_OBJ=$(LDB_TDB_DIR)/ldb_tdb.o \
	$(LDB_TDB_DIR)/ldb_pack.o $(LDB_TDB_DIR)/ldb_search.o $(LDB_TDB_DIR)/ldb_index.o \
	$(LDB_TDB_DIR)/ldb_cache.o $(LDB_TDB_DIR)/ldb_tdb_wrap.o

COMDIR=common
COMMON_OBJ=$(COMDIR)/ldb.o $(COMDIR)/ldb_ldif.o \
	   $(COMDIR)/ldb_parse.o $(COMDIR)/ldb_msg.o $(COMDIR)/ldb_utf8.o \
	   $(COMDIR)/ldb_debug.o $(COMDIR)/ldb_modules.o \
	   $(COMDIR)/ldb_dn.o $(COMDIR)/ldb_match.o $(COMDIR)/ldb_attributes.o \
	   $(COMDIR)/attrib_handlers.o $(COMDIR)/ldb_controls.o $(COMDIR)/qsort.o

MODDIR=modules
MODULES_OBJ=$(MODDIR)/operational.o $(MODDIR)/schema.o $(MODDIR)/rdn_name.o \
	   $(MODDIR)/objectclass.o \
	   $(MODDIR)/paged_results.o $(MODDIR)/sort.o $(MODDIR)/asq.o

OBJS = $(MODULES_OBJ) $(COMMON_OBJ) $(LDB_TDB_OBJ) $(TDB_OBJ) $(TALLOC_OBJ) $(EXTRA_OBJ) $(POPTOBJ)

LDB_LIB = lib/libldb.a

BINS = bin/ldbadd bin/ldbsearch bin/ldbdel bin/ldbmodify bin/ldbedit bin/ldbrename bin/ldbtest bin/oLschema2ldif

LIBS = $(LDB_LIB)($(OBJS))

MANPAGES = $(patsubst %.xml,%,$(wildcard $(srcdir)/man/*.xml))

EXAMPLES = examples/ldbreader examples/ldifreader

DIRS = lib bin common ldb_tdb ldb_ldap ldb_sqlite3 modules tools examples tdb talloc

all: dirs $(BINS) $(LIBS) $(EXAMPLES) $(MANPAGES) doxygen

.c.o:
	@echo Compiling $*.c
	@mkdir -p `dirname $@`
	@$(CC) $(CFLAGS) -c $< -o $@

dirs:
	@mkdir -p $(DIRS)

lib/libldb.a: $(OBJS)

bin/ldbadd: tools/ldbadd.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbadd tools/ldbadd.o tools/cmdline.o $(LIB_FLAGS)

bin/ldbsearch: tools/ldbsearch.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbsearch tools/ldbsearch.o tools/cmdline.o $(LIB_FLAGS)

bin/ldbdel: tools/ldbdel.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbdel tools/ldbdel.o tools/cmdline.o $(LIB_FLAGS)

bin/ldbmodify: tools/ldbmodify.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbmodify tools/ldbmodify.o tools/cmdline.o $(LIB_FLAGS)

bin/ldbedit: tools/ldbedit.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbedit tools/ldbedit.o tools/cmdline.o $(LIB_FLAGS)

bin/ldbrename: tools/ldbrename.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbrename tools/ldbrename.o tools/cmdline.o $(LIB_FLAGS)

bin/ldbtest: tools/ldbtest.o tools/cmdline.o $(LIBS)
	$(CC) -o bin/ldbtest tools/ldbtest.o tools/cmdline.o $(LIB_FLAGS)

bin/oLschema2ldif: tools/oLschema2ldif.o tools/cmdline.o tools/convert.o $(LIBS)
	$(CC) -o bin/oLschema2ldif tools/oLschema2ldif.o tools/cmdline.o tools/convert.o $(LIB_FLAGS)

examples/ldbreader: examples/ldbreader.o $(LIBS)
	$(CC) -o examples/ldbreader examples/ldbreader.o $(LIB_FLAGS)

examples/ldifreader: examples/ldifreader.o $(LIBS)
	$(CC) -o examples/ldifreader examples/ldifreader.o $(LIB_FLAGS)

.SUFFIXES: .1 .1.xml .3 .3.xml .xml .html

%.3: %.3.xml
	test -z "$(XSLTPROC)" || $(XSLTPROC) -o $@ http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<

%.1: %.1.xml
	test -z "$(XSLTPROC)" || $(XSLTPROC) -o $@ http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<

%.html: %.xml
	test -z "$(XSLTPROC)" || $(XSLTPROC) -o $@ http://docbook.sourceforge.net/release/xsl/current/html/docbook.xsl $<

doxygen:
	test -z "$(DOXYGEN)" || (cd $(srcdir) && "$(DOXYGEN)")

clean:
	rm -f */*.o *.gcov */*.gc?? tdbtest.ldb* \
	rm -f $(BINS) $(TDB_OBJ) $(TALLOC_OBJ) $(LDB_LIB)
	rm -f $(MANPAGES)
	rm -f $(EXAMPLES)
	rm -rf apidocs/

distclean: clean
	rm -f *~ */*~
	rm -rf autom4te.cache bin lib
	rm -f configure \
		config.log config.status \
		include/config.h include/config.h.in \
	rm -f ldb.pc
	rm -f Makefile

etags:
	etags */*.[ch]

installcheck: install tests
	for t in $(TESTS); do echo STARTING $${t}; $(srcdir)/tests/$${t} || exit 1; done

test: installcheck

install: all
	mkdir -p $(includedir) $(libdir)/pkgconfig $(libdir) $(bindir)
	mkdir -p $(mandir) $(mandir)/man3 $(mandir)/man1
	cp $(srcdir)/include/ldb.h $(srcdir)/include/ldb_errors.h $(includedir)
	cp $(LDB_LIB) $(libdir)
	cp $(BINS) $(bindir)
	cp ldb.pc $(libdir)/pkgconfig
	test -z "$(XSLTPROC)" || cp $(filter %.1, $(MANPAGES)) $(mandir)/man1
	test -z "$(XSLTPROC)" || cp $(filter %.3, $(MANPAGES)) $(mandir)/man3

gcov:
	$(GCOV) -po ldb_sqlite3 $(srcdir)/ldb_sqlite3/*.c 2| tee ldb_sqlite3.report.gcov
	$(GCOV) -po ldb_ldap $(srcdir)/ldb_ldap/*.c 2| tee ldb_ldap.report.gcov
	$(GCOV) -po ldb_tdb $(srcdir)/ldb_tdb/*.c 2| tee ldb_tdb.report.gcov
	$(GCOV) -po common $(srcdir)/common/*.c 2| tee common.report.gcov
	$(GCOV) -po modules $(srcdir)/modules/*.c 2| tee modules.report.gcov
	$(GCOV) -po tools $(srcdir)/tools/*.c 2| tee tools.report.gcov

ctags:
	ctags `find $(srcdir) -name "*.[ch]"`
