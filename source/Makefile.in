###########################################################################
# Makefile.in for Samba - rewritten for autoconf support
# Copyright Andrew Tridgell 1992-1998
###########################################################################

prefix=@prefix@
exec_prefix=@exec_prefix@
mandir=@mandir@
DESTDIR=

LIBS=@LIBS@
CC=@CC@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
AWK=@AWK@

LIBTOOL=@LIBTOOL@ --quiet
LIBTOOL_DEPS=@LIBTOOL_DEPS@
LINK=$(LIBTOOL) --mode=link $(CC) $(FLAGS) $(LDFLAGS)

RUNTEST = runtest
RUNTESTDEFAULTFLAGS = --srcdir @srcdir@/../testsuite

INSTALL = @INSTALL@
INSTALLCMD=@INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@

VPATH=@srcdir@
srcdir=@srcdir@
builddir=@builddir@
top_builddir=.
SHELL=/bin/sh

BASEDIR= @prefix@
BINDIR = @bindir@
# we don't use sbindir because we want full compatibility with
# the previous releases of Samba
SBINDIR = @sbindir@
LIBDIR = @libdir@
VARDIR = @localstatedir@
MANDIR = @mandir@
sysconfdir = @sysconfdir@
sambaconfdir = @sambaconfdir@

# The permissions to give the executables
INSTALLPERMS = 0755

# set these to where to find various files
# These can be overridden by command line switches (see smbd(8))
# or in smb.conf (see smb.conf(5))
LOGFILEBASE = $(VARDIR)
SMBLOGFILE = $(LOGFILEBASE)/log.smb
NMBLOGFILE = $(LOGFILEBASE)/log.nmb
CONFIGFILE = $(sambaconfdir)/smb.conf
LMHOSTSFILE = $(sambaconfdir)/lmhosts
DRIVERFILE = $(LIBDIR)/printers.def
NTDRIVERSDIR = $(LIBDIR)
FORMSFILE = $(LIBDIR)/ntforms.def
PASSWD_PROGRAM = /bin/passwd
# This is where smbpasswd et al go
PRIVATEDIR = @privatedir@

SMB_PASSWD_FILE  = $(PRIVATEDIR)/smbpasswd
SMB_PASSGRP_FILE = $(PRIVATEDIR)/smbpassgrp
SMB_GROUP_FILE   = $(PRIVATEDIR)/smbgroup
SMB_ALIAS_FILE   = $(PRIVATEDIR)/smbalias
SAM_DIR = $(BASEDIR)/sam
SMB_PASSWD_PROGRAM = $(BINDIR)/smbpasswd

# This is where SWAT images and help files go
SWATDIR = @swatdir@

# the directory where lock files go
LOCKDIR = @lockdir@

# The directory where code page definition files go
CODEPAGEDIR = $(LIBDIR)/codepages

# The current codepage definition list.
CODEPAGELIST= 437 737 775 850 852 861 932 866 949 950 936 1251 ISO8859-1 ISO8859-2 ISO8859-5 ISO8859-7 KOI8-R

# where you are going to have the smbrun binary. This defaults to the 
# install directory. This binary is needed for correct printing
# and magic script execution. This should be an absolute path!
# Also not that this should include the name "smbrun" on the end (the
# name of the executable)
SMBRUN = $(BINDIR)/smbrun


PASSWD_FLAGS = \
		-DPASSWD_PROGRAM=\"$(PASSWD_PROGRAM)\"           \
		-DSMB_PASSWD_PROGRAM=\"$(SMB_PASSWD_PROGRAM)\"   \
		-DSMB_PASSWD_FILE=\"$(SMB_PASSWD_FILE)\"         \
		-DSAM_DIR=\"$(SAM_DIR)\"                         \
		-DSMB_PASSGRP_FILE=\"$(SMB_PASSGRP_FILE)\"       \
		-DSMB_GROUP_FILE=\"$(SMB_GROUP_FILE)\"           \
		-DSMB_ALIAS_FILE=\"$(SMB_ALIAS_FILE)\" 

FLAGS1 = $(CFLAGS)	\
		-Iinclude -I$(srcdir)/include                    \
		-I$(srcdir)/ubiqx                                \
		-I$(srcdir)/smbwrapper                           \
		$(CPPFLAGS)                                      \
		-DLOGFILEBASE=\"$(LOGFILEBASE)\"                 \
		-DSMBLOGFILE=\"$(SMBLOGFILE)\"                   \
		-DNMBLOGFILE=\"$(NMBLOGFILE)\"

FLAGS2 = -DCONFIGFILE=\"$(CONFIGFILE)\" -DLMHOSTSFILE=\"$(LMHOSTSFILE)\"  
FLAGS3 = -DSWATDIR=\"$(SWATDIR)\" -DSBINDIR=\"$(SBINDIR)\" -DLOCKDIR=\"$(LOCKDIR)\" -DSMBRUN=\"$(SMBRUN)\" -DCODEPAGEDIR=\"$(CODEPAGEDIR)\"
FLAGS4 = -DDRIVERFILE=\"$(DRIVERFILE)\" -DBINDIR=\"$(BINDIR)\" -DFORMSFILE=\"$(FORMSFILE)\" -DNTDRIVERSDIR=\"$(NTDRIVERSDIR)\"
FLAGS5 = $(FLAGS1) $(FLAGS2) $(FLAGS3) $(FLAGS4) -DHAVE_INCLUDES_H
FLAGS  = $(FLAGS5) $(PASSWD_FLAGS)

SPROGS = bin/smbd bin/lsarpcd bin/svcctld bin/spoolssd bin/samrd \
         bin/srvsvcd bin/wkssvcd bin/browserd bin/netlogond bin/winregd \
         bin/nmbd bin/swat
PROGS1 = bin/smbclient bin/testparm bin/testprns bin/smbrun bin/smbstatus 
PROGS2 = bin/rpcclient bin/smbpasswd bin/make_smbcodepage bin/make_unicodemap 
PROGS3 = bin/regedit bin/samedit bin/net bin/svccontrol bin/cmdat bin/ntspool
PROGS4 = @WRAP@ @WRAP32@
#MPROGS = @MPROGS@
PROGS = $(PROGS1) $(PROGS2) $(PROGS3) $(PROGS4) $(MPROGS) bin/nmblookup bin/make_printerdef 

SCRIPTS = $(srcdir)/script/smbtar $(srcdir)/script/addtosmbpass $(srcdir)/script/convert_smbpasswd

QUOTAOBJS=@QUOTAOBJS@

######################################################################
# object file lists
######################################################################

SAMBALIB = bin/libsamba.la
UBIQXLIB = bin/libubiqx.la
SMBLIB = bin/libsmb.la
NMBLIB = bin/libnmb.la
MSRPCLIB = bin/libmsrpc.la
SMBPWLIB = bin/libsmbpw.la
SAMRPASSLIB = bin/libsamrpass.la
SAMRTDBLIB = bin/libsamrtdb.la
SAMRNT5LDAPLIB = bin/libsamrnt5ldap.la
LIBSURS = bin/libsurs.la

SAM_PWDB_LIB = @SAM_PWDB_LIB@

SAMBA_LIBS = $(MSRPCLIB) $(SMBLIB) $(NMBLIB) $(SAMBALIB)

SHARED_LIBS = $(SAMBA_LIBS) $(SMBPWLIB) $(UBIQXLIB) \
		$(SAM_PWDB_LIB) $(LIBSURS)

LIBSTATUS_OBJ = lib/util_status.o 

LIB_OBJ =	lib/charcnv.o lib/charset.o lib/debug.o lib/fault.o \
		lib/getsmbpass.o lib/interface.o lib/kanji.o lib/md4.o \
		lib/pidfile.o lib/replace.o \
		lib/signal.o lib/getopt.o lib/slprintf.o \
		lib/fsusage.o lib/system.o lib/doscalls.o \
		lib/time.o lib/ufc.o lib/util.o lib/substitute.o \
		lib/genrand.o lib/username.o \
		lib/access.o lib/smbrun.o \
		lib/bitmap.o lib/util_sid.o lib/snprintf.o \
		lib/util_str.o lib/util_unistr.o lib/util_wunistr.o \
		lib/util_file.o \
		lib/util_sock.o lib/util_sec.o lib/util_array.o \
		lib/talloc.o \
		lib/ms_fnmatch.o \
		lib/interfaces.o \
		tdb/tdb.o tdb/tdbutil.o passdb/secrets.o

STUB_UID_OBJ = lib/stub_uid.o

UBIQX_OBJ = ubiqx/ubi_BinTree.o ubiqx/ubi_Cache.o ubiqx/ubi_SplayTree.o \
            ubiqx/ubi_dLinkList.o ubiqx/ubi_sLinkList.o

PARAM_OBJ = param/loadparm.o param/params.o 

LIBSAMBA_OBJ = $(PARAM_OBJ) $(LIB_OBJ)

LIBNMB_OBJ = libsmb/namequery.o libsmb/nmblib.o libsmb/unexpected.o

LIBSMB_OBJ = libsmb/clientgen.o libsmb/clidomain.o \
	libsmb/clifile.o libsmb/cliprint.o libsmb/clierror.o \
	libsmb/climessage.o libsmb/cliconnect.o \
	libsmb/nterr.o libsmb/smbdes.o libsmb/smbencrypt.o \
	libsmb/smberr.o libsmb/credentials.o \
	libsmb/pwd_cache.o  lib/util_hnd.o \
	lib/crc32.o lib/md5.o lib/hmacmd5.o \
	rpc_parse/parse_creds.o  rpc_parse/parse_net.o \
	rpc_parse/parse_rpc.o rpc_parse/parse_misc.o \
	rpc_parse/parse_ntlmssp.o rpc_parse/parse_prs.o \
	rpc_parse/parse_vuid.o \
	lib/vuser.o lib/vuser_db.o

RPC_SRVUTIL_OBJ = rpc_server/srv_pipe_srv.o \
		rpc_server/srv_pipe_noauth.o

RPC_SERVER_OBJ = \
		rpc_server/srv_pipe_hnd.o \
		rpc_server/srv_pipe.o 

RPC_PARSE_OBJ1 = rpc_parse/parse_lsa.o \
                rpc_parse/parse_reg.o \
                rpc_parse/parse_samr.o \
		rpc_parse/parse_srv.o \
                rpc_parse/parse_wks.o \
                rpc_parse/parse_svc.o \
		rpc_parse/parse_at.o \
		rpc_parse/parse_spoolss.o \
		rpc_parse/parse_eventlog.o \
		rpc_parse/parse_brs.o \
		rpc_parse/parse_dfs.o

RPC_PARSE_OBJ2 = \
                rpc_parse/parse_netsec.o \
		rpc_parse/parse_sec.o \
		lib/msrpc-client.o 

RPC_PARSE_OBJ = $(RPC_PARSE_OBJ1) $(RPC_PARSE_OBJ2)

RPC_CLIENT_OBJ = \
		rpc_client/cli_login.o    \
		rpc_client/cli_netlogon.o \
		rpc_client/cli_reg.o \
		rpc_client/cli_pipe.o     \
		rpc_client/cli_pipe_ntlmssp.o     \
		rpc_client/cli_pipe_netsec.o     \
		rpc_client/cli_pipe_noauth.o     \
		rpc_client/cli_connect.o     \
		rpc_client/cli_use.o     \
		rpc_client/ncalrpc_l_use.o     \
		rpc_client/ncacn_np_use.o     \
		rpc_client/cli_spoolss.o   \
		rpc_client/cli_lsarpc.o   \
		rpc_client/cli_wkssvc.o   \
		rpc_client/cli_brs.o   \
		rpc_client/cli_srvsvc.o   \
		rpc_client/cli_svcctl.o \
		rpc_client/cli_samr.o   \
		rpc_client/msrpc_samr.o   \
		rpc_client/msrpc_netlogon.o   \
		rpc_client/msrpc_lsarpc.o   \
		rpc_client/cli_atsvc.o \
		rpc_client/cli_eventlog.o \
		rpc_client/cli_dfs.o

LOCKING_OBJ = lib/hash.o locking/locking.o locking/brlock.o locking/posix.o

GROUPDB_OBJ = groupdb/groupdb.o groupdb/aliasdb.o groupdb/builtindb.o \
		groupdb/groupfile.o groupdb/aliasfile.o \
		groupdb/groupunix.o groupdb/aliasunix.o groupdb/builtinunix.o \
		groupdb/groupldap.o groupdb/aliasldap.o groupdb/builtinldap.o \
		groupdb/groupnt5ldap.o groupdb/aliasnt5ldap.o groupdb/builtinnt5ldap.o \
		passdb/passgrp.o passdb/smbpassgroup.o \
		passdb/smbpassgroupunix.o passdb/passgrpldap.o passdb/passgrpnt5ldap.o

SAMPASSDB_OBJ = passdb/sampassdb.o passdb/sampass.o passdb/sampassldap.o passdb/mysqlsampass.o \
		passdb/sampassnt5ldap.o 

UNIXPASSDB_OBJ = passdb/pass_check.o 

PASSDB_OBJ = passdb/passdb.o passdb/smbpass.o \
             passdb/ldap.o passdb/ldapdb.o passdb/nt5ldap.o passdb/nispass.o \
             passdb/smbpasschange.o passdb/mysqlpass.o passdb/smbpassnt5ldap.o \
             passdb/smbpassfile.o lib/util_pwdb.o lib/domain_namemap.o 

SIDDB_OBJ = lib/sids.o lib/util_seaccess.o

PROFILE_OBJ = profile/profile.o

SMBD_OBJ1 = smbd/server.o smbd/files.o smbd/connection.o \
		lib/set_uid.o smbd/dfree.o smbd/dir.o smbd/password.o \
		lib/util_unixsd.o \
		smbd/conn.o smbd/fileio.o \
		smbd/statcache.o \
		smbd/ipc.o smbd/lanman.o smbd/mangle.o smbd/negprot.o \
		smbd/message.o smbd/nttrans.o smbd/pipes.o \
		smbd/$(QUOTAOBJS) smbd/reply.o smbd/ssl.o smbd/trans2.o \
		smbd/uid.o smbd/dosmode.o smbd/filename.o smbd/open.o \
		smbd/close.o smbd/blocking.o smbd/process.o smbd/oplock.o \
		smbd/service.o smbd/error.o smbd/vfs.o smbd/vfs-wrap.o \
		smbd/challenge.o  lib/util_pwdb.o smbd/afsticket.o \
		printing/printfsp.o


PRINTING_OBJ =  printing/pcap.o printing/print_svid.o \
		printing/print_cups.o printing/load.o

PRINTBACKEND_OBJ = printing/printing.o printing/lpq_parse.o

MSDFS_OBJ = msdfs/msdfs.o msdfs/msdfs_tdb.o msdfs/parse_dfs_map.o

MSRPCD_OBJ = msrpc/msrpcd.o \
		msrpc/msrpcd_process.o \
		lib/set_vuid.o \
		lib/set_uid.o

BROWSERD_OBJ1 = browserd/browserd.o \
		rpc_server/srv_brs.o

WKSSVCD_OBJ1 = wkssvcd/wkssvcd.o \
		rpc_server/srv_wkssvc.o \
		wkssvcd/srv_wkssvc_nt.o

SRVSVCD_OBJ1 = srvsvcd/srvsvcd.o \
		srvsvcd/srv_srvsvc_nt.o \
		rpc_server/srv_srvsvc.o

WINREGD_OBJ1 = winregd/winregd.o \
		winregd/srv_reg_nt.o \
		rpc_server/srv_reg.o

NETLOGOND_OBJ1 = netlogond/netlogond.o \
		netlogond/creds_db.o \
		netlogond/srv_netlogon_nt.o \
		rpc_server/srv_netlog.o \
		rpc_server/srv_pipe_netsec.o \
		lib/passcheck.o

SAMRTDBLIB_OBJ = lib/util_pwdb.o lib/domain_namemap.o \
		samrd/srv_samr_tdb_init.o \
		samrd/srv_samr_dom_tdb.o \
		samrd/srv_samr_sam_tdb.o \
		samrd/srv_samr_usr_tdb.o \
		samrd/srv_samr_grp_tdb.o \
		samrd/srv_samr_als_tdb.o \
		samrd/srv_samr_tdb.o \
		samrd/samr_util.o

SAMRNT5LDAPLIB_OBJ = lib/util_pwdb.o lib/domain_namemap.o \
		samrd/srv_samr_usr_nt5ldap.o \
		samrd/srv_samr_dom_nt5ldap.o \
		samrd/srv_samr_nt5ldap.o \
		samrd/samr_util.o
#		samrd/srv_samr_sam_nt5ldap.o \
#		samrd/srv_samr_grp_nt5ldap.o \
#		samrd/srv_samr_als_nt5ldap.o

SAMRPASSLIB_OBJ = rpc_server/srv_lookup.o \
		samrd/srv_samr_passdb.o \
		smbd/chgpasswd.o \
		samrd/samr_util.o

SAMRD_OBJ1 = samrd/samrd.o \
		rpc_server/srv_pipe_ntlmssp.o \
		rpc_server/srv_samr.o

SVCCTLD_OBJ1 = svcctld/svcctld.o \
		svcctld/srv_svcctl_nt.o \
		rpc_server/srv_svcctl.o

LSARPCD_OBJ1 = lsarpcd/lsarpcd.o \
		lsarpcd/srv_lsa.o \
		lsarpcd/secret_db.o \
		lsarpcd/srv_lsa_samdb.o

SPOOLSSD_OBJ1 = spoolssd/spoolssd.o \
		rpc_server/srv_spoolss.o \
		lib/util_unixsd.o \
		spoolssd/srv_spoolss_nt.o \
		printing/nt_printing.o 

SMBD_OBJ = $(SMBD_OBJ1) $(MSDFS_OBJ) $(UNIXPASSDB_OBJ) \
           $(RPC_SERVER_OBJ) \
           lib/domain_namemap.o \
           $(LOCKING_OBJ) \
           $(SIDDB_OBJ) \
		$(LIBSTATUS_OBJ) $(PRINTING_OBJ) $(PRINTBACKEND_OBJ) \
		$(PROFILE_OBJ) 

SMBD_LIBS = $(SAMBA_LIBS) $(UBIQXLIB) $(LIBSURS)

SRVSVCD_OBJ = $(MSRPCD_OBJ) $(SRVSVCD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(PROFILE_OBJ)  \
           $(LOCKING_OBJ) \
	   $(UBIQXLIB) \
           $(SIDDB_OBJ) \
		$(LIBSTATUS_OBJ)

WKSSVCD_OBJ = $(MSRPCD_OBJ) $(WKSSVCD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(SIDDB_OBJ) \
           $(PROFILE_OBJ) 

BROWSERD_OBJ = $(MSRPCD_OBJ) $(BROWSERD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(SIDDB_OBJ) \
           $(PROFILE_OBJ) 

WINREGD_OBJ = $(MSRPCD_OBJ) $(WINREGD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(SIDDB_OBJ) \
           $(PROFILE_OBJ) 

SVCCTLD_OBJ = $(MSRPCD_OBJ) $(SVCCTLD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(SIDDB_OBJ) \
           $(PROFILE_OBJ) 

LSARPCD_OBJ = $(MSRPCD_OBJ) $(LSARPCD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(SIDDB_OBJ) \
		$(PROFILE_OBJ) 
LSARPCD_LIBS = $(SAMBA_LIBS)

SPOOLSSD_OBJ = $(MSRPCD_OBJ) $(SPOOLSSD_OBJ1) \
		$(PRINTING_OBJ) \
		$(PRINTBACKEND_OBJ) \
           $(SIDDB_OBJ) \
           $(RPC_SRVUTIL_OBJ) \
           $(PROFILE_OBJ)
SPOOLSSD_LIBS = $(SAMBA_LIBS) $(UBIQXLIB) $(LIBSURS)

NETLOGOND_OBJ = $(MSRPCD_OBJ) $(NETLOGOND_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(LOCKING_OBJ) \
	   $(UBIQXLIB) \
           $(SIDDB_OBJ) \
		$(UNIXPASSDB_OBJ) $(LIBSTATUS_OBJ) $(PROFILE_OBJ) 

NETLOGOND_LIBS        = $(SAMBA_LIBS) $(SAM_PWDB_LIB) \
			$(LIBSURS) $(UBIQXLIB)

NETLOGONPASSD_LIBS    = $(SAMBA_LIBS) $(SAMRPASSLIB) $(SMBPWLIB) \
			$(LIBSURS) $(UBIQXLIB)

NETLOGONTDBD_LIBS     = $(SAMBA_LIBS) $(SAMRTDBLIB) \
			$(LIBSURS) $(UBIQXLIB)

NETLOGONNT5LDAPD_LIBS = $(SAMBA_LIBS) $(SAMRNT5LDAPLIB) \
			$(LIBSURS) $(UBIQXLIB)

SAMRD_OBJ = $(MSRPCD_OBJ) $(SAMRD_OBJ1) \
           $(RPC_SRVUTIL_OBJ) \
           $(SIDDB_OBJ) \
		$(PROFILE_OBJ) 

LIBSURS_OBJ = lib/surs.o lib/sursalgdomonly.o \
		lib/sursalgnt5ldap.o \
		lib/surstdb.o

SAMRD_LIBS        = $(SAMBA_LIBS) $(SAM_PWDB_LIB) \
			$(LIBSURS) $(UBIQXLIB)

SAMRPASSD_LIBS    = $(SAMBA_LIBS) $(SAMRPASSLIB) $(SMBPWLIB) \
			$(LIBSURS) $(UBIQXLIB)

SAMRTDBD_LIBS     = $(SAMBA_LIBS) $(SAMRTDBLIB) \
			$(LIBSURS) $(UBIQXLIB)

SAMRNT5LDAPD_LIBS = $(SAMBA_LIBS) $(SAMRNT5LDAPLIB) \
			$(LIBSURS) $(UBIQXLIB)

NMBD_OBJ1 = nmbd/asyncdns.o nmbd/nmbd.o nmbd/nmbd_become_dmb.o \
            nmbd/nmbd_become_lmb.o nmbd/nmbd_browserdb.o \
            nmbd/nmbd_browsesync.o nmbd/nmbd_elections.o \
            nmbd/nmbd_incomingdgrams.o nmbd/nmbd_incomingrequests.o \
            nmbd/nmbd_lmhosts.o nmbd/nmbd_logonnames.o nmbd/nmbd_mynames.o \
            nmbd/nmbd_namelistdb.o nmbd/nmbd_namequery.o \
            nmbd/nmbd_nameregister.o nmbd/nmbd_namerelease.o \
            nmbd/nmbd_nodestatus.o nmbd/nmbd_packets.o \
            nmbd/nmbd_processlogon.o nmbd/nmbd_responserecordsdb.o \
            nmbd/nmbd_sendannounce.o nmbd/nmbd_serverlistdb.o \
            nmbd/nmbd_subnetdb.o nmbd/nmbd_winsproxy.o nmbd/nmbd_winsserver.o \
            nmbd/nmbd_workgroupdb.o nmbd/nmbd_synclists.o

NMBD_OBJ = $(NMBD_OBJ1) 
NMBD_LIBS = $(SMBLIB) $(NMBLIB) $(SAMBALIB) $(UBIQXLIB)

SWAT_OBJ = web/cgi.o web/diagnose.o web/startstop.o web/statuspage.o \
           web/swat.o libsmb/passchange.o $(LOCKING_OBJ) \
           rpc_server/srv_lookup.o \
           $(SIDDB_OBJ) \
           $(PRINTING_OBJ) \
           $(UNIXPASSDB_OBJ) \
           $(STUB_UID_OBJ)

SWAT_LIBS = $(SAMBA_LIBS) $(SMBPWLIB) $(UBIQXLIB) $(LIBSURS)

SMBRUN_OBJ = utils/smbrun.o lib/util_sec.o

SMBSH_OBJ = smbwrapper/smbsh.o smbwrapper/shared.o

MAKE_SMBCODEPAGE_OBJ = utils/make_smbcodepage.o

MAKE_UNICODEMAP_OBJ = utils/make_unicodemap.o

MAKE_PRINTERDEF_OBJ = utils/make_printerdef.o

STATUS_OBJ = utils/status.o $(LIBSTATUS_OBJ) $(LOCKING_OBJ) \
             $(PROFILE_OBJ)  $(STUB_UID_OBJ)

TESTPARM_OBJ = utils/testparm.o

TESTPRNS_OBJ = utils/testprns.o printing/pcap.o printing/print_svid.o \
		printing/print_cups.o

SMBPASSWD_OBJ = utils/smbpasswd.o libsmb/passchange.o \
           rpc_server/srv_lookup.o \
		rpc_client/cli_netlogon_sync.o \
           $(SIDDB_OBJ) $(STUB_UID_OBJ)

SMBPASSWD_LIBS = $(SAMBA_LIBS) $(SMBPWLIB) $(UBIQXLIB) $(LIBSURS)

REGEDIT_OBJ = lib/cmd_interp.o \
		rpcclient/regedit.o \
		rpcclient/regedit_cmds.o \
		rpcclient/display_reg.o \
		rpcclient/display_sec.o \
		rpcclient/cmd_reg.o \
		$(STUB_UID_OBJ)
REGEDIT_LIBS = $(SAMBA_LIBS)

SVCCLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/svcctrl.o \
		rpcclient/svcctrl_cmds.o \
		rpcclient/display_svc.o \
		rpcclient/cmd_svcctl.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
SVCCLIENT_LIBS = $(SAMBA_LIBS)

SAMCLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/samedit.o \
		rpcclient/samedit_cmds.o \
		rpcclient/netlogon_cmds.o \
		rpcclient/display_sam.o \
		rpcclient/display_sec.o \
		rpcclient/display_sync.o \
		rpcclient/cmd_samr.o \
		rpcclient/cmd_netlogon.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
SAMCLIENT_LIBS = $(SAMBA_LIBS)

CMDCLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/cmdat.o \
		rpcclient/cmdat_cmds.o \
		rpcclient/display_at.o \
		rpcclient/cmd_atsvc.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
CMDCLIENT_LIBS = $(SAMBA_LIBS)

NETCLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/net.o \
		rpcclient/net_cmds.o \
		rpcclient/dfs_cmds.o \
		rpcclient/display_srv.o \
		rpcclient/display_dfs.o \
		rpcclient/cmd_wkssvc.o \
		rpcclient/cmd_brs.o \
		rpcclient/cmd_dfs.o \
		rpcclient/cmd_srvsvc.o \
           $(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
NETCLIENT_LIBS = $(SAMBA_LIBS)

EVTCLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/eventlog.o \
		rpcclient/eventlog_cmds.o \
		rpcclient/display_event.o \
		rpcclient/cmd_eventlog.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
EVTCLIENT_LIBS = $(SAMBA_LIBS) $(UBIQXLIB)

LSACLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/lsa.o \
		rpcclient/lsa_cmds.o \
		rpcclient/cmd_lsarpc.o \
		$(SIDDB_OBJ) \
		rpcclient/display_sec.o \
		$(STUB_UID_OBJ)

LSACLIENT_LIBS = $(SAMBA_LIBS) $(UBIQXLIB)

RPCTORTURE_OBJ = lib/cmd_interp.o \
		utils/rpctorture.o \
		rpcclient/net_cmds.o \
		rpcclient/display_event.o \
		rpcclient/display_srv.o \
		rpcclient/display_sync.o \
		rpcclient/cmd_wkssvc.o \
		rpcclient/cmd_brs.o \
		rpcclient/cmd_srvsvc.o \
		rpcclient/cmd_netlogon.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)

RPCTORTURE_LIBS = $(SAMBA_LIBS) $(UBIQXLIB)

SPOOLCLIENT_OBJ = lib/cmd_interp.o \
		rpcclient/spoolss.o \
		rpcclient/spoolss_cmds.o \
		rpcclient/display_spool.o \
		rpcclient/display_sec.o \
		rpcclient/cmd_spoolss.o \
		rpc_client/msrpc_spoolss.o   \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
SPOOLCLIENT_LIBS = $(SAMBA_LIBS)

RPCCLIENT_OBJ = lib/cmd_interp.o \
		rpc_client/msrpc_spoolss.o   \
		rpcclient/rpcclient.o \
		rpcclient/svcctrl_cmds.o \
		rpcclient/samedit_cmds.o \
		rpcclient/regedit_cmds.o \
		rpcclient/lsa_cmds.o \
		rpcclient/net_cmds.o \
		rpcclient/eventlog_cmds.o \
		rpcclient/netlogon_cmds.o \
		rpcclient/cmdat_cmds.o \
		rpcclient/spoolss_cmds.o \
		rpcclient/dfs_cmds.o \
		rpcclient/display_at.o \
		rpcclient/display_event.o \
		rpcclient/display_reg.o \
		rpcclient/display_sam.o \
		rpcclient/display_sec.o \
		rpcclient/display_spool.o \
		rpcclient/display_srv.o \
		rpcclient/display_svc.o \
		rpcclient/display_sync.o \
		rpcclient/display_dfs.o \
		rpcclient/cmd_lsarpc.o \
		rpcclient/cmd_wkssvc.o \
		rpcclient/cmd_brs.o \
		rpcclient/cmd_samr.o \
		rpcclient/cmd_reg.o \
		rpcclient/cmd_srvsvc.o \
		rpcclient/cmd_svcctl.o \
		rpcclient/cmd_netlogon.o \
		rpcclient/cmd_atsvc.o \
		rpcclient/cmd_spoolss.o \
		rpcclient/cmd_eventlog.o \
		rpcclient/cmd_dfs.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
RPCCLIENT_LIBS = $(SAMBA_LIBS)

PAM_NTDOM_OBJ = pam_ntdom/pam_ntdom_auth.o \
		pam_ntdom/rpc_validate.o \
		pam_ntdom/support.o \
		$(SIDDB_OBJ) \
		$(STUB_UID_OBJ)
PAM_NTDOM_LIBS = $(SAMBA_LIBS)

PAM_WINBIND_OBJ = nsswitch/pam_winbind.po nsswitch/common.po

SMBWRAPPER_OBJ = smbwrapper/smbw.o smbwrapper/wrapped.o \
		smbwrapper/smbw_dir.o smbwrapper/smbw_stat.o \
		smbwrapper/realcalls.o smbwrapper/shared.o

CLIENT_OBJ = client/client.o client/clitar.o
CLIENT_LIBS = $(SMBLIB) $(NMBLIB) $(SAMBALIB) 

MOUNT_OBJ = client/smbmount.o client/clientutil.o \
              $(RPC_PARSE_OBJ2)

MNT_OBJ = client/smbmnt.o \
              $(RPC_PARSE_OBJ2)

UMOUNT_OBJ = client/smbumount.o \
              $(RPC_PARSE_OBJ2)

NMB_AGENT_OBJ = utils/nmb-agent.o \
                 $(RPC_PARSE_OBJ2)

NMBLOOKUP_OBJ = utils/nmblookup.o

DEBUG2HTML_OBJ = utils/debug2html.o 

SMB_AGENT_OBJ = utils/smb-agent.o  \
			$(RPC_PARSE_OBJ2) rpc_client/cli_use.o

SMB_CLIENT_OBJ = smb-client.o 

SMBTORTURE_OBJ = utils/torture.o

SMBFILTER_OBJ = utils/smbfilter.o \
                 rpc_parse/parse_creds.o \
		 rpc_parse/parse_ntlmssp.o rpc_parse/parse_prs.o

PROTO_OBJ =  $(LIB_OBJ) $(LIBNMB_OBJ) $(PARAM_OBJ) \
		$(MSRPCD_OBJ) $(SVCCTLD_OBJ1) $(WINREGD_OBJ1) \
		$(SAMRD_OBJ1) \
		$(SAMRTDBLIB_OBJ) \
		$(SAMRNT5LDAPLIB_OBJ) \
		$(LIBSURS_OBJ) \
		$(SAMRPASSLIB_OBJ) \
		$(SAMRTDBD_OBJ1) \
		$(SAMRNT5LDAPD_OBJ1) \
		$(SRVSVCD_OBJ1) $(WKSSVCD_OBJ1) $(BROWSERD_OBJ1) \
		$(SPOOLSSD_OBJ1) $(NETLOGOND_OBJ1) \
		$(LSARPCD_OBJ1) $(SMBD_OBJ) $(NMBD_OBJ) \
		$(SWAT_OBJ) $(CLIENT_OBJ) \
		$(REGEDIT_OBJ) $(SVCCLIENT_OBJ) \
		$(SAMCLIENT_OBJ) $(RPCCLIENT_OBJ) \
		$(RPCTORTURE_OBJ) $(SPOOLCLIENT_OBJ) \
		$(CMDCLIENT_OBJ) $(LSACLIENT_OBJ) \
		$(EVTCLIENT_OBJ) $(NETCLIENT_OBJ) \
		$(LIBSMB_OBJ) $(SMBWRAPPER_OBJ) \
		$(GROUPDB_OBJ) $(PASSDB_OBJ) $(SAMPASSDB_OBJ) \
		$(SMBPASSWD_OBJ) $(SIDDB_OBJ) \
		$(RPC_SRVUTIL_OBJ)

SMBWRAPPERPICOBJS = $(SMBWRAPPER_OBJ:.o=.po)
SMBWRAPPERPICOBJS32 = $(SMBWRAPPER_OBJ:.o=.po32)

LIBSURS_LTOBJS = $(LIBSURS_OBJ:.o=.lo) 

LIBSAMRTDB_LTOBJS = $(SAMRTDBLIB_OBJ:.o=.lo) 

LIBSAMRPASS_LTOBJS = $(SAMRPASSLIB_OBJ:.o=.lo) 

LIBSAMRNT5LDAP_LTOBJS = $(SAMRNT5LDAPLIB_OBJ:.o=.lo) 

LIBSMBPW_LTOBJS = $(GROUPDB_OBJ:.o=.lo) $(SAMPASSDB_OBJ:.o=.lo) \
		$(PASSDB_OBJ:.o=.lo)

LIBUBIQX_LTOBJS = $(UBIQX_OBJ:.o=.lo)

LIBSAMBA_LTOBJS = $(LIBSAMBA_OBJ:.o=.lo)

LIBNMB_LTOBJS = $(LIBNMB_OBJ:.o=.lo)

LIBSMB_LTOBJS = $(LIBSMB_OBJ:.o=.lo)

LIBMSRPC_LTOBJS = $(RPC_CLIENT_OBJ:.o=.lo) $(RPC_PARSE_OBJ:.o=.lo)

WINBINDD_OBJ1 = \
		nsswitch/winbindd.o       \
		nsswitch/winbindd_user.o  \
		nsswitch/winbindd_group.o \
		nsswitch/winbindd_idmap.o \
		nsswitch/winbindd_util.o  \
		nsswitch/winbindd_cache.o \
		nsswitch/winbindd_pam.o

WINBINDD_OBJ = \
		$(WINBINDD_OBJ1) \
		$(RPC_CLIENT_OBJ) $(RPC_PARSE_OBJ) $(STUB_UID_OBJ) \
		$(LIBNMB_OBJ) $(PARAM_OBJ) $(UBIQX_OBJ) $(LIB_OBJ) \
		$(NSSWINS_OBJ) $(SIDDB_OBJ) $(LIBSMB_OBJ)

NTDOM_OBJ = nsswitch/ntdom.o nsswitch/common.o

NTDOM_ICOBJS = $(NTDOM_OBJ:.o=.po)

######################################################################
# now the rules...
######################################################################

all : CHECK $(SPROGS) $(PROGS) 

libsurs : CHECK $(LIBSURS)

libsamrpass : CHECK $(SAMRPASSLIB)

libsamrtdb : CHECK $(SAMRTDBLIB)

libsamrnt5ldap : CHECK $(SAMRNT5LDAPLIB)

libnmb : CHECK $(NMBLIB)

libsmb : CHECK $(SMBLIB)

libsmbpw : CHECK $(SMBPWLIB)

libmsrpc : CHECK $(MSRPCLIB)

libsamba : CHECK $(SAMBALIB)

libubiqx : CHECK $(UBIQXLIB)

smbwrapper : CHECK bin/smbsh bin/smbwrapper.so @WRAP32@

smbtorture : CHECK bin/smbtorture

rpctorture : CHECK bin/rpctorture

smbfilter : CHECK bin/smbfilter

nsswitch: CHECK nsswitch/libnss_ntdom.so bin/winbindd nsswitch/pam_winbind.so

check: all nsswitch
	$(RUNTEST) $(RUNTESTDEFAULTFLAGS) $(RUNTESTFLAGS)

.SUFFIXES:
.SUFFIXES: .c .o .lo .po .po32

CHECK:
	@echo "Using FLAGS = $(FLAGS)"
	@echo "Using LIBS = $(LIBS)"

MAKEDIR = || exec false; \
	  if test -d "$$dir"; then :; else \
	  echo mkdir "$$dir"; \
	  mkdir -p "$$dir" >/dev/null 2>&1 || \
	  test -d "$$dir" || \
	  mkdir "$$dir" || \
	  exec false; fi || exec false

# the lines below containing `@MAINT@' are for atomatic dependency tracking
# they will only work with GNU make, gcc and --enable-maintainer-mode
# without --enable-maintainer-mode, they do nothing
.c.o: @MAINT@ .deps/.dummy
	@if (: >> $@ || : > $@) >/dev/null 2>&1; then rm -f $@; else \
	 dir=`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` $(MAKEDIR); fi
@MAINT@	@if (: >> .deps/$@ || : > .deps/$@) >/dev/null 2>&1; then :; \
@MAINT@	 else dir=.deps/`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` \
@MAINT@	      $(MAKEDIR); fi; rm -f .deps/$@ .deps/$@d
	@echo Compiling $*.c
	@$(CC) -I. -I$(srcdir) $(FLAGS) -c $< \
	  -o $@ @MAINT@ -Wp,-MD,.deps/$@
@MAINT@	@sed 's|^'`echo $@ | sed 's,.*/,,'`':|$@:|' \
@MAINT@	  <.deps/$@ >.deps/$@d && \
@MAINT@	rm -f .deps/$@ && : >.deps/.stamp

# This is for libtool
.c.lo: @MAINT@ .deps/.dummy
	@if (: >> $@ || : > $@) >/dev/null 2>&1; then rm -f $@; else \
	  dir=`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` $(MAKEDIR); fi
@MAINT@	@if (: >> .deps/$@ || : > .deps/$@) >/dev/null 2>&1; then :; \
@MAINT@	 else dir=.deps/`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` \
@MAINT@	      $(MAKEDIR); fi; rm -f .deps/$@ .deps/$@d
@BROKEN_CC@	-mv `echo $@ | sed 's%^.*/%%g'` $@
	@echo Compiling $< with libtool
	@$(LIBTOOL) --mode=compile \
	  $(CC) -I. -I$(srcdir) $(FLAGS) -c $< \
	  -o $@ @MAINT@ -Wp,-MD,.deps/$@
@MAINT@	@sed 's|^.*'`echo $* | sed 's,.*/,,'`'.*:|$@:|' \
@MAINT@	  <.deps/$@ >.deps/$@d && \
@MAINT@	rm -f .deps/$@ && : >.deps/.stamp

.c.po: @MAINT@ .deps/.dummy
	@if (: >> $@ || : > $@) >/dev/null 2>&1; then rm -f $@; else \
	  dir=`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` $(MAKEDIR); fi
@MAINT@	@if (: >> .deps/$@ || : > .deps/$@) >/dev/null 2>&1; then :; \
@MAINT@	 else dir=.deps/`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` \
@MAINT@	      $(MAKEDIR); fi; rm -f .deps/$@ .deps/$@d
	@echo Compiling $*.c with @PICFLAG@
	@$(CC) -I. -I$(srcdir) $(FLAGS) @PICFLAG@ -c $< \
	  -o $*.po.o @MAINT@ -Wp,-MD,.deps/$@
@MAINT@	@sed 's|^'`echo $*\.po\.o | sed 's,.*/,,'`':|$@:|' \
@MAINT@	  <.deps/$@ >.deps/$@d && \
@MAINT@	rm -f .deps/$@ && : >.deps/.stamp
	@mv $*.po.o $@

# this is for IRIX
.c.po32: @MAINT@ .deps/.dummy
	@if (: >> $@ || : > $@) >/dev/null 2>&1; then rm -f $@; else \
	  dir=`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` $(MAKEDIR); fi
@MAINT@	@if (: >> .deps/$@ || : > .deps/$@) >/dev/null 2>&1; then :; \
@MAINT@	 else dir=.deps/`echo $@ | sed 's,/[^/]*$$,,;s,^$$,.,'` \
@BROKEN_CC@	-mv `echo $@ | sed -e 's%^.*/%%g' -e 's%\.po$$%.o%'` $@.o
@MAINT@	      $(MAKEDIR); fi; rm -f .deps/$@ .deps/$@d
	@echo Compiling $*.c with @PICFLAG@ and -32
	@$(CC) -32 -I. -I$(srcdir) $(FLAGS) @PICFLAG@ -c $< \
	  -o $*.po32.o @MAINT@ -Wp,-MD,.deps/$@
@MAINT@	@sed 's|^'`echo $*.po32.o | sed 's,.*/,,'`':|$@:|' \
@MAINT@	  <.deps/$@ >.deps/$@d && \
@MAINT@	rm -f .deps/$@ && : >.deps/.stamp
	@mv $*.po32.o $@

bin/.dummy:
	@if (: >> $@ || : > $@) >/dev/null 2>&1; then :; else \
	  dir=bin $(MAKEDIR); fi
	@: >> $@ || : > $@ # what a fancy emoticon!

bin/libsurs.la: $(LIBSURS_LTOBJS) bin/.dummy
@BROKEN_CC@	-mv `echo $@ | sed -e 's%^.*/%%g' -e 's%\.po32$$%.o%'` $@.o
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSURS_LTOBJS)

bin/libmsrpc.la: $(LIBMSRPC_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBMSRPC_LTOBJS)

bin/libnmb.la: $(LIBNMB_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBNMB_LTOBJS)

bin/libsmbpw.la: $(LIBSMBPW_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSMBPW_LTOBJS)

bin/libsmb.la: $(LIBSMB_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSMB_LTOBJS)

bin/libubiqx.la: $(LIBUBIQX_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBUBIQX_LTOBJS)

bin/libsamba.la: $(LIBSAMBA_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSAMBA_LTOBJS)

bin/libsamrpass.la: $(LIBSAMRPASS_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSAMRPASS_LTOBJS)

bin/libsamrnt5ldap.la: $(LIBSAMRNT5LDAP_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSAMRNT5LDAP_LTOBJS)

bin/libsamrtdb.la: $(LIBSAMRTDB_LTOBJS) bin/.dummy
	@echo Linking shared library $@
	@$(LINK) -o $@ -rpath $(LIBDIR) -version-info 0:1:0 \
	  $(LIBSAMRTDB_LTOBJS)

bin/smbd: $(SMBD_LIBS) $(SMBD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMBD_OBJ) $(SMBD_LIBS) $(LIBS)

bin/svcctld: $(SAMBA_LIBS) $(SVCCTLD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SVCCTLD_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/lsarpcd: $(LSARPCD_LIBS) $(LSARPCD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(LSARPCD_OBJ) $(LSARPCD_LIBS) $(LIBS)

bin/spoolssd: $(SPOOLSSD_LIBS) $(SPOOLSSD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SPOOLSSD_OBJ) $(SPOOLSSD_LIBS) $(LIBS)

bin/srvsvcd: $(SAMBA_LIBS) $(SRVSVCD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SRVSVCD_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/wkssvcd: $(SAMBA_LIBS) $(WKSSVCD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(WKSSVCD_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/browserd: $(SAMBA_LIBS) $(BROWSERD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(BROWSERD_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/winregd: $(SAMBA_LIBS) $(WINREGD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(WINREGD_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/netlogond: $(NETLOGOND_LIBS) $(NETLOGOND_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NETLOGOND_OBJ) $(NETLOGOND_LIBS) $(LIBS)

bin/netlogonpassd: $(NETLOGONPASSD_LIBS) $(NETLOGOND_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NETLOGOND_OBJ) $(NETLOGONPASSD_LIBS) $(LIBS)

bin/netlogontdbd: $(NETLOGONTDBD_LIBS) $(NETLOGOND_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NETLOGOND_OBJ) $(NETLOGONTDBD_LIBS) $(LIBS)

bin/netlogonnt5ldapd: $(NETLOGONNT5LDAPD_LIBS) $(NETLOGOND_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NETLOGOND_OBJ) $(NETLOGONNT5LDAPD_LIBS) $(LIBS)

bin/samrd: $(SAMRD_LIBS) $(SAMRD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SAMRD_OBJ) $(SAMRD_LIBS) $(LIBS)

bin/samrpassd: $(SAMRPASSD_LIBS) $(SAMRD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SAMRD_OBJ) $(SAMRPASSD_LIBS) $(LIBS)

bin/samrtdbd: $(SAMRTDBD_LIBS) $(SAMRD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SAMRD_OBJ) $(SAMRTDBD_LIBS) $(LIBS)

bin/samrnt5ldapd: $(SAMRNT5LDAPD_LIBS) $(SAMRD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SAMRD_OBJ) $(SAMRNT5LDAPD_LIBS) $(LIBS)

bin/nmbd: $(NMBD_LIBS) $(NMBD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NMBD_OBJ) $(NMBD_LIBS) $(LIBS)

bin/swat: $(SWAT_LIBS) $(SWAT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SWAT_OBJ) $(SWAT_LIBS) $(LIBS)

bin/smbrun: $(SMBRUN_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMBRUN_OBJ) $(LIBS)

bin/regedit: $(REGEDIT_LIBS) $(REGEDIT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(REGEDIT_OBJ) $(REGEDIT_LIBS) $(LIBS)

bin/svccontrol: $(SVCCLIENT_LIBS) $(SVCCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SVCCLIENT_OBJ) $(SVCCLIENT_LIBS) $(LIBS)

bin/samedit: $(SAMCLIENT_LIBS) $(SAMCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SAMCLIENT_OBJ) $(SAMCLIENT_LIBS) $(LIBS)

bin/cmdat: $(CMDCLIENT_LIBS) $(CMDCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(CMDCLIENT_OBJ) $(CMDCLIENT_LIBS) $(LIBS)

bin/eventlog: $(EVTCLIENT_LIBS) $(EVTCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(EVTCLIENT_OBJ) $(EVTCLIENT_LIBS) $(LIBS)

bin/net: $(NETCLIENT_LIBS) $(NETCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NETCLIENT_OBJ) $(NETCLIENT_LIBS) $(LIBS)

bin/lsa: $(LSACLIENT_LIBS) $(LSACLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(LSACLIENT_OBJ) $(LSACLIENT_LIBS) $(LIBS)

bin/rpctorture: $(RPCTORTURE_LIBS) $(RPCTORTURE_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(RPCTORTURE_OBJ) $(RPCTORTURE_LIBS) $(LIBS)

bin/ntspool: $(SPOOLCLIENT_LIBS) $(SPOOLCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SPOOLCLIENT_OBJ) $(SPOOLCLIENT_LIBS) $(LIBS)

bin/rpcclient: $(RPCCLIENT_LIBS) $(RPCCLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(RPCCLIENT_OBJ) $(RPCCLIENT_LIBS) $(LIBS)

bin/smbclient: $(CLIENT_LIBS) $(CLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(CLIENT_OBJ) $(CLIENT_LIBS) $(LIBS)

#bin/smbmount: $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(MOUNT_OBJ) bin/.dummy
#	@echo Linking $@
#	@$(LINK) -o $@ $(MOUNT_OBJ) $(SAMBALIB) $(SMBLIB) $(NMBLIB) $(LIBS)

#bin/smbmnt: $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(MNT_OBJ) bin/.dummy
#	@echo Linking $@
#	@$(LINK) -o $@ $(MNT_OBJ) $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(LIBS)

#bin/smbumount: $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(UMOUNT_OBJ) bin/.dummy
#	@echo Linking $@
#	@$(LINK) -o $@ $(UMOUNT_OBJ) $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(LIBS)

bin/testparm: $(SAMBALIB) $(TESTPARM_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(TESTPARM_OBJ) $(SAMBALIB) $(LIBS)

bin/testprns: $(SAMBALIB) $(TESTPRNS_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(TESTPRNS_OBJ) $(SAMBALIB) $(LIBS)

bin/smbstatus: $(SAMBALIB) $(UBIQXLIB) $(STATUS_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(STATUS_OBJ) $(SAMBALIB) $(UBIQXLIB) $(LIBS)

bin/smbpasswd: $(SMBPASSWD_LIBS) $(SMBPASSWD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMBPASSWD_OBJ) $(SMBPASSWD_LIBS) $(LIBS)

bin/make_smbcodepage: $(SAMBALIB) $(MAKE_SMBCODEPAGE_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(MAKE_SMBCODEPAGE_OBJ) $(SAMBALIB) $(LIBS)

bin/make_unicodemap: $(SAMBALIB) $(MAKE_UNICODEMAP_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(MAKE_UNICODEMAP_OBJ) $(SAMBALIB) $(LIBS)

bin/nmblookup: $(SAMBALIB) $(NMBLIB) $(NMBLOOKUP_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NMBLOOKUP_OBJ) $(NMBLIB) $(SAMBALIB) $(LIBS)

bin/make_printerdef: $(SAMBALIB) $(MAKE_PRINTERDEF_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(MAKE_PRINTERDEF_OBJ) $(SAMBALIB) $(LIBS)

bin/smbtorture: $(SAMBA_LIBS) $(SMBTORTURE_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMBTORTURE_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/smb-client: $(SMB_CLIENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMB_CLIENT_OBJ) $(LIBS)

bin/nmb-agent: $(SAMBALIB) $(SMBLIB) $(NMBLIB) $(NMB_AGENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(NMB_AGENT_OBJ) $(SAMBALIB) $(SMBLIB) $(NMBLIB) $(LIBS)

bin/smb-agent: $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(SMB_AGENT_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMB_AGENT_OBJ) $(SMBLIB) $(SAMBALIB) $(NMBLIB) $(LIBS)

bin/smbfilter: $(SAMBA_LIBS) $(SMBFILTER_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMBFILTER_OBJ) $(SAMBA_LIBS) $(LIBS)

bin/debug2html: $(SAMBALIB) $(DEBUG2HTML_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(DEBUG2HTML_OBJ) $(SAMBALIB) $(LIBS)

bin/smbwrapper.so: $(SMBWRAPPERPICOBJS)
	@echo Linking smbwrapper shared library $@
	@$(LD) @LDSHFLAGS@ -o $@ $(SMBWRAPPERPICOBJS) $(LIBS)

bin/smbwrapper.32.so: $(SMBWRAPPERPICOBJS32)
	@echo Linking smbwrapper shared library $@
	@$(LD) -32 @LDSHFLAGS@ -o $@ $(SMBWRAPPERPICOBJS32) $(LIBS)

bin/smbsh: $(SAMBALIB) $(SMBSH_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(SMBSH_OBJ) $(SAMBALIB) $(LIBS)

bin/winbindd: $(WINBINDD_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -o $@ $(WINBINDD_OBJ) $(LIBS)

nsswitch/libnss_ntdom.so: $(NTDOM_ICOBJS)
	@echo "Linking $@"
	@$(LINK) -shared -o $@ $(NTDOM_ICOBJS)

bin/pam_ntdom_auth.so: $(PAM_NTDOM_LIBS) $(PAM_NTDOM_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -shared -Xlinker -x -o $@ $(PAM_NTDOM_LIBS) $(PAM_NTDOM_OBJ)

nsswitch/pam_winbind.so: $(PAM_WINBIND_OBJ) bin/.dummy
	@echo Linking $@
	@$(LINK) -shared -o $@ $(PAM_WINBIND_OBJ)

install: all \
	installdirs \
	install-libs installbin install-sbin \
	installman installscripts installcp installswat

installdirs:
	@for p in $(BASEDIR) $(SBINDIR) $(BINDIR) $(LIBDIR) $(VARDIR) \
		$(CODEPAGEDIR); do \
	    $(SHELL) $(srcdir)/install-sh -d -m $(INSTALLPERMS) $(DESTDIR)$$p; \
	done

install-libs: $(SHARED_LIBS) installdirs
	@list='$(SHARED_LIBS)'; for p in $$list; do \
	  echo Installing $$p in $(LIBDIR) using libtool; \
	  $(LIBTOOL) --mode=install $(INSTALL) $$p $(DESTDIR)$(LIBDIR); \
	done

installbin: $(PROGS) installdirs
	@list='$(PROGS)'; for p in $$list; do \
	  echo Installing $$p in $(BINDIR) using libtool; \
	  $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(BINDIR); \
	done

install-sbin: $(SPROGS) installdirs
	@list='$(SPROGS)'; for p in $$list; do \
	  echo Installing $$p in $(SBINDIR) using libtool; \
	  $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(SBINDIR); \
	done

installscripts: installdirs
	@$(SHELL) $(srcdir)/script/installscripts.sh $(INSTALLPERMS) $(BINDIR) $(patsubst %,$(srcdir)/%,$(SCRIPTS))

installcp: installdirs
	@$(SHELL) $(srcdir)/script/installcp.sh $(srcdir) $(LIBDIR) $(CODEPAGEDIR) $(BINDIR) $(CODEPAGELIST)

installswat: installdirs
	@$(SHELL) $(srcdir)/script/installswat.sh $(SWATDIR) $(srcdir)

# revert to the previously installed version
revert:
	@$(SHELL) $(srcdir)/script/revert.sh $(SBINDIR) $(SPROGS) 
	@$(SHELL) $(srcdir)/script/revert.sh $(BINDIR) $(PROGS) $(SCRIPTS)

installman:
	@$(SHELL) $(srcdir)/script/installman.sh $(MANDIR) $(srcdir) "@ROFF@"

uninstall: uninstallman uninstallbin uninstallscripts uninstallcp

uninstallman:
	@$(SHELL) $(srcdir)/script/uninstallman.sh $(MANDIR) $(srcdir)

uninstallbin:
	@$(SHELL) $(srcdir)/script/uninstallbin.sh $(INSTALLPERMS) $(BASEDIR) $(SBINDIR) $(LIBDIR) $(VARDIR) $(SPROGS)
	@$(SHELL) $(srcdir)/script/uninstallbin.sh $(INSTALLPERMS) $(BASEDIR) $(BINDIR) $(LIBDIR) $(VARDIR) $(PROGS)

uninstallscripts:
	@$(SHELL) $(srcdir)/script/uninstallscripts.sh $(INSTALLPERMS) $(BINDIR) $(SCRIPTS)

uninstallcp:
	@$(SHELL) $(srcdir)/script/uninstallcp.sh $(CODEPAGEDIR) $(CODEPAGELIST)

clean: 
	-rm -f core */*~ *~ */*.o */*.po */*.po32 */*.lo */*.so

proto: winbindd_proto lib_smb_proto rpc_client_proto rpc_parse_proto \
	all_other_proto_for_now

all_other_proto_for_now: 
	@cd $(srcdir) && $(SHELL) script/mkproto.sh $(AWK) \
	  include/proto.h \
	  $(PROTO_OBJ)

pam_ntdom_proto:
	@cd $(srcdir) && $(SHELL) script/mkproto.sh $(AWK) \
	  -h _PAM_NTDOM_PROTO_H_ pam_ntdom/pam_ntdom_proto.h \
	  $(PAM_NTDOM_OBJ)

lib_smb_proto:
	@cd $(srcdir) && $(SHELL) script/mkproto.sh $(AWK) \
	  -h _LIB_SMB_PROTO_H_ include/lib_smb_proto.h \
	  $(LIBSMB_OBJ)

rpc_parse_proto:
	@cd $(srcdir) && $(SHELL) script/mkproto.sh $(AWK) \
	  -h _RPC_PARSE_PROTO_H_ include/rpc_parse_proto.h \
	  $(RPC_PARSE_OBJ)

rpc_client_proto:
	@cd $(srcdir) && $(SHELL) script/mkproto.sh $(AWK) \
	  -h _RPC_CLIENT_PROTO_H_ include/rpc_client_proto.h \
	  $(RPC_CLIENT_OBJ)

winbindd_proto:
	@cd $(srcdir) && $(SHELL) script/mkproto.sh $(AWK) \
	  -h _WINBINDD_PROTO_H_ nsswitch/winbindd_proto.h \
	  $(WINBINDD_OBJ1)

etags:
	etags `find . -name "*.[ch]" | grep -v /CVS/`

ctags:
	ctags `find . -name "*.[ch]" | grep -v /CVS/`

realclean: clean
	-rm -f config.log $(PROGS) $(SPROGS) bin/.dummy
	-rm -rf bin

distclean: realclean
	-rm -f include/config.h include/stamp-h Makefile
	-rm -f config.status config.cache so_locations
	-rm -f libtool
	-rm -rf .deps

#
# This target is for documentation updaters. It regenerates
# the man pages and HTML docs from the YODL source files.
# In order for this target to work YODL must be installed
# and working on your system. JRA.
yodldocs:
	@$(SHELL) $(srcdir)/script/makeyodldocs.sh $(srcdir)

# this target is really just for my use. It only works on a limited
# range of machines and is used to produce a list of potentially
# dead (ie. unused) functions in the code. (tridge)
finddead:
	nm */*.o |grep 'U ' | awk '{print $$2}' | sort -u > nmused.txt
	nm */*.o |grep 'T ' | awk '{print $$3}' | sort -u > nmfns.txt
	comm -13 nmused.txt nmfns.txt 

finddeadsmbd:
	nm $(SMBD_OBJ) |grep 'U ' | awk '{print $$2}' | sort -u > nmusedsmbd.txt
	nm $(SMBD_OBJ) |grep 'T ' | awk '{print $$3}' | sort -u > nmfnssmbd.txt
	comm -13 nmusedsmbd.txt nmfnssmbd.txt 

# Rules for maintainers (--enable-maintainer-mode)
AUTOCONF=@AUTOCONF@
AUTOHEADER=@AUTOHEADER@

# when configure.in is updated, reconfigure
$(srcdir)/configure: @MAINT@ $(srcdir)/configure.in $(srcdir)/aclocal.m4
	echo "WARNING: you need to rerun configure"

config.status: $(srcdir)/configure
	echo "WARNING: you need to run ./config.status --recheck"

Makefile: $(srcdir)/Makefile.in config.status \
	  include/stamp-h # just to ensure that config.h is up-to-date
	CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

script/samba-init.d: $(srcdir)/script/samba-init.d.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck
# So something depends on libtool, so it gets rebuild, if needed
$(SHARED_LIBS): libtool

# note that nothing depends on config.h, so will probably be rebuilt
# only when explicitly requested, unless dependency tracking is enabled
include/config.h: include/stamp-h
	@:

include/stamp-h: $(srcdir)/include/config.h.in config.status
	CONFIG_FILES= CONFIG_HEADERS=include/config.h $(SHELL) ./config.status
	@echo > include/stamp-h

$(srcdir)/include/config.h.in: $(srcdir)/include/stamp-h.in
	@:

$(srcdir)/include/stamp-h.in: @MAINT@ $(srcdir)/acconfig.h $(srcdir)/configure.in
	cd $(srcdir) && $(AUTOHEADER)
	@date -u > $@

# automatic dependency tracking rules
.deps/.dummy:
	@if (: >> $@ || : > $@) >/dev/null 2>&1; then :; else \
	  dir=.deps $(MAKEDIR); fi
	@: >> $@ || : > $@ # what a fancy emoticon!

.deps/.stamp: .deps/.dummy
	@: >> $@ || : > $@

.deps/depend: .deps/.stamp
	@echo Updating dependencies
	@: | cat `find .deps -type f -name \*d` >$@ 2>/dev/null || true

@MAINT@-include .deps/depend
