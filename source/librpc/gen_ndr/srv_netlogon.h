#include "librpc/gen_ndr/ndr_netlogon.h"
#ifndef __SRV_NETLOGON__
#define __SRV_NETLOGON__
WERROR _netr_LogonUasLogon(pipes_struct *p, const char *server_name, const char *account_name, const char *workstation, struct netr_UasInfo *info);
WERROR _netr_LogonUasLogoff(pipes_struct *p, const char *server_name, const char *account_name, const char *workstation, struct netr_UasLogoffInfo *info);
NTSTATUS _netr_LogonSamLogon(pipes_struct *p, const char *server_name, const char *computer_name, struct netr_Authenticator *credential, struct netr_Authenticator *return_authenticator, uint16_t logon_level, union netr_LogonLevel logon, uint16_t validation_level, union netr_Validation *validation, uint8_t *authoritative);
NTSTATUS _netr_LogonSamLogoff(pipes_struct *p, const char *server_name, const char *computer_name, struct netr_Authenticator *credential, struct netr_Authenticator *return_authenticator, uint16_t logon_level, union netr_LogonLevel logon);
NTSTATUS _netr_ServerReqChallenge(pipes_struct *p, const char *server_name, const char *computer_name, struct netr_Credential *credentials);
NTSTATUS _netr_ServerAuthenticate(pipes_struct *p, const char *server_name, const char *account_name, enum netr_SchannelType secure_channel_type, const char *computer_name, struct netr_Credential *credentials);
NTSTATUS _netr_ServerPasswordSet(pipes_struct *p, const char *server_name, const char *account_name, enum netr_SchannelType secure_channel_type, const char *computer_name, struct netr_Authenticator credential, struct samr_Password new_password, struct netr_Authenticator *return_authenticator);
NTSTATUS _netr_DatabaseDeltas(pipes_struct *p, const char *logon_server, const char *computername, struct netr_Authenticator credential, struct netr_Authenticator *return_authenticator, enum netr_SamDatabaseID database_id, uint64_t *sequence_num, uint32_t preferredmaximumlength, struct netr_DELTA_ENUM_ARRAY *delta_enum_array);
NTSTATUS _netr_DatabaseSync(pipes_struct *p, const char *logon_server, const char *computername, struct netr_Authenticator credential, struct netr_Authenticator *return_authenticator, enum netr_SamDatabaseID database_id, uint32_t *sync_context, uint32_t preferredmaximumlength, struct netr_DELTA_ENUM_ARRAY *delta_enum_array);
NTSTATUS _netr_AccountDeltas(pipes_struct *p, const char *logon_server, const char *computername, struct netr_Authenticator credential, struct netr_Authenticator *return_authenticator, struct netr_UAS_INFO_0 uas, uint32_t count, uint32_t level, uint32_t buffersize, struct netr_AccountBuffer *buffer, uint32_t *count_returned, uint32_t *total_entries, struct netr_UAS_INFO_0 *recordid);
NTSTATUS _netr_AccountSync(pipes_struct *p, const char *logon_server, const char *computername, struct netr_Authenticator credential, struct netr_Authenticator *return_authenticator, uint32_t reference, uint32_t level, uint32_t buffersize, struct netr_AccountBuffer *buffer, uint32_t *count_returned, uint32_t *total_entries, uint32_t *next_reference, struct netr_UAS_INFO_0 *recordid);
NTSTATUS _netr_GetDcName(pipes_struct *p, const char *logon_server, const char *domainname, const char **dcname);
WERROR _netr_LogonControl(pipes_struct *p, const char *logon_server, enum netr_LogonControlCode function_code, uint32_t level, union netr_CONTROL_QUERY_INFORMATION *info);
WERROR _netr_GetAnyDCName(pipes_struct *p, const char *logon_server, const char *domainname, const char **dcname);
WERROR _netr_LogonControl2(pipes_struct *p, const char *logon_server, uint32_t function_code, uint32_t level, union netr_CONTROL_DATA_INFORMATION data, union netr_CONTROL_QUERY_INFORMATION *query);
NTSTATUS _netr_ServerAuthenticate2(pipes_struct *p, const char *server_name, const char *account_name, enum netr_SchannelType secure_channel_type, const char *computer_name, struct netr_Credential *credentials, uint32_t *negotiate_flags);
NTSTATUS _netr_DatabaseSync2(pipes_struct *p, const char *logon_server, const char *computername, struct netr_Authenticator credential, struct netr_Authenticator *return_authenticator, enum netr_SamDatabaseID database_id, uint16_t restart_state, uint32_t *sync_context, uint32_t preferredmaximumlength, struct netr_DELTA_ENUM_ARRAY *delta_enum_array);
NTSTATUS _netr_DatabaseRedo(pipes_struct *p, const char *logon_server, const char *computername, struct netr_Authenticator credential, struct netr_Authenticator *return_authenticator, uint8_t *change_log_entry, uint32_t change_log_entry_size, struct netr_DELTA_ENUM_ARRAY *delta_enum_array);
WERROR _netr_LogonControl2Ex(pipes_struct *p, const char *logon_server, uint32_t function_code, uint32_t level, union netr_CONTROL_DATA_INFORMATION data, union netr_CONTROL_QUERY_INFORMATION *query);
WERROR _netr_NETRENUMERATETRUSTEDDOMAINS(pipes_struct *p);
WERROR _netr_DsRGetDCName(pipes_struct *p, const char *server_unc, const char *domain_name, struct GUID *domain_guid, struct GUID *site_guid, uint32_t flags, struct netr_DsRGetDCNameInfo *info);
WERROR _netr_NETRLOGONDUMMYROUTINE1(pipes_struct *p);
WERROR _netr_NETRLOGONSETSERVICEBITS(pipes_struct *p);
WERROR _netr_NETRLOGONGETTRUSTRID(pipes_struct *p);
WERROR _netr_NETRLOGONCOMPUTESERVERDIGEST(pipes_struct *p);
WERROR _netr_NETRLOGONCOMPUTECLIENTDIGEST(pipes_struct *p);
NTSTATUS _netr_ServerAuthenticate3(pipes_struct *p, const char *server_name, const char *account_name, enum netr_SchannelType secure_channel_type, const char *computer_name, struct netr_Credential *credentials, uint32_t *negotiate_flags, uint32_t *rid);
WERROR _netr_DsRGetDCNameEx(pipes_struct *p, const char *server_unc, const char *domain_name, struct GUID *domain_guid, const char *site_name, uint32_t flags, struct netr_DsRGetDCNameInfo *info);
WERROR _netr_DsRGetSiteName(pipes_struct *p, const char *computer_name, const char **site);
NTSTATUS _netr_LogonGetDomainInfo(pipes_struct *p, const char *server_name, const char *computer_name, struct netr_Authenticator *credential, struct netr_Authenticator *return_authenticator, uint32_t level, union netr_DomainQuery query, union netr_DomainInfo *info);
NTSTATUS _netr_ServerPasswordSet2(pipes_struct *p, const char *server_name, const char *account_name, enum netr_SchannelType secure_channel_type, const char *computer_name, struct netr_Authenticator credential, struct netr_CryptPassword new_password, struct netr_Authenticator *return_authenticator);
WERROR _netr_NETRSERVERPASSWORDGET(pipes_struct *p);
WERROR _netr_NETRLOGONSENDTOSAM(pipes_struct *p);
WERROR _netr_DSRADDRESSTOSITENAMESW(pipes_struct *p);
WERROR _netr_DsRGetDCNameEx2(pipes_struct *p, const char *server_unc, const char *client_account, uint32_t mask, const char *domain_name, struct GUID *domain_guid, const char *site_name, uint32_t flags, struct netr_DsRGetDCNameInfo *info);
WERROR _netr_NETRLOGONGETTIMESERVICEPARENTDOMAIN(pipes_struct *p);
WERROR _netr_NETRENUMERATETRUSTEDDOMAINSEX(pipes_struct *p);
WERROR _netr_DSRADDRESSTOSITENAMESEXW(pipes_struct *p);
WERROR _netr_DSRGETDCSITECOVERAGEW(pipes_struct *p);
NTSTATUS _netr_LogonSamLogonEx(pipes_struct *p, const char *server_name, const char *computer_name, uint16_t logon_level, union netr_LogonLevel logon, uint16_t validation_level, union netr_Validation *validation, uint8_t *authoritative, uint32_t *flags);
WERROR _netr_DsrEnumerateDomainTrusts(pipes_struct *p, const char *server_name, uint32_t trust_flags, uint32_t *count, struct netr_DomainTrust **trusts);
WERROR _netr_DSRDEREGISTERDNSHOSTRECORDS(pipes_struct *p);
WERROR _netr_NETRSERVERTRUSTPASSWORDSGET(pipes_struct *p);
WERROR _netr_DSRGETFORESTTRUSTINFORMATION(pipes_struct *p);
WERROR _netr_NETRGETFORESTTRUSTINFORMATION(pipes_struct *p);
NTSTATUS _netr_LogonSamLogonWithFlags(pipes_struct *p, const char *server_name, const char *computer_name, struct netr_Authenticator *credential, struct netr_Authenticator *return_authenticator, uint16_t logon_level, union netr_LogonLevel logon, uint16_t validation_level, union netr_Validation *validation, uint8_t *authoritative, uint32_t *flags);
WERROR _netr_NETRSERVERGETTRUSTINFO(pipes_struct *p);
void netlogon_get_pipe_fns(struct api_struct **fns, int *n_fns);
NTSTATUS rpc_netlogon_init(void);
#endif /* __SRV_NETLOGON__ */
