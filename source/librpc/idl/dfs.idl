/*
  dfs interface definition
*/

[ uuid(4fc742e0-4a10-11cf-8273-00aa004ae673),
  version(3.0),
  pointer_default(unique)
] interface netdfs
{
	/******************/
	/* Function: 0x00 */
	void dfs_Exist(
		[out,ref] uint32 *exist_flag
		);


	/******************/
	/* Function: 0x01 */
	NTSTATUS dfs_Add (
		[in]     unistr *path,
		[in]     unistr *server,
		[in]     unistr *share,
		[in]     unistr *comment,
		[in]     uint32  flags
		);

	/******************/
	/* Function: 0x02 */
	NTSTATUS dfs_Remove (
		[in,ref] unistr *path,
		[in]     unistr *server,
		[in]     unistr *share
		);

	/******************/
	/* Function: 0x03 */
	NTSTATUS dfs_UNKNOWN3 ();

	/******************/
	/* Function: 0x04 */
	NTSTATUS dfs_Info (
		[in,ref] unistr_noterm *path,
		[in]     unistr *server,
		[in]     unistr *share,
		[in]     uint16 level
		);

	/******************/
	/* Function: 0x05 */

	typedef struct {
		unistr *str;
	} dfs_String;

	typedef struct {
		uint32 count;
		[size_is(count)] dfs_String *s;
	} dfs_Enum1;

	typedef union {
		case(1) dfs_Enum1 *enum1;
	} dfs_EnumInfo;

	typedef struct {
		uint32 level;
		[switch_is(level)] dfs_EnumInfo e;
	} dfs_EnumStruct;

	NTSTATUS dfs_Enum (
		[in] uint32 level,
		[in] uint32 bufsize,
		[in,out] dfs_EnumStruct *info,
		[in]     uint32 *unknown,
		[in,out] uint32 *total
		);
}
