/*
  lsa interface definition
*/

[ uuid(12345778-1234-abcd-ef00-0123456789ab),
  version(0.0),
  pointer_default(unique)
] interface lsarpc
{
	
	typedef struct {
		[struct_len] uint32 _len;
		uint16  impersonation_level;
		uint8   context_mode;
		uint8   effective_only;
	} lsa_QosInfo;
	
	typedef struct {
		[struct_len] uint32 _len;
		uint8 *root_dir;
		unistr *object_name;
		uint32 attributes;
		security_descriptor *sec_desc;
		lsa_QosInfo *sec_qos;
	} lsa_ObjectAttribute;
	
	NTSTATUS lsa_OpenPolicy (
		[in]       uint16 *system_name,
		[in,ref]   lsa_ObjectAttribute *attr,
		[in]       uint32 desired_access,
		[out,ref]  policy_handle *handle
		);
	
	NTSTATUS lsa_OpenPolicy2 (
		[in]      unistr *system_name,
		[in,ref]  lsa_ObjectAttribute *attr,
		[in]      uint32 desired_access,
		[out,ref] policy_handle *handle
		);

	typedef struct {
		dom_sid2 *sid;
	} lsa_SidPtr;
	
	typedef struct {
		uint32 num_sids;
		[size_is(num_sids)] lsa_SidPtr *sids;
	} lsa_SidArray;

	NTSTATUS lsa_EnumSids (
		[in,ref]     policy_handle *handle,
		[in,out,ref] uint32 *resume_handle,
		[in]         uint32 num_entries,
		[out,ref]    lsa_SidArray *sids
		);

	typedef struct {
		uint16 name_len;
		uint16 name_size;
		unistr_noterm *name;
	} lsa_Name;

	typedef struct {
		uint16 sid_type;
		lsa_Name name;
		uint32 sid_index;
	} lsa_TranslatedName;

	typedef struct {
		uint32 count;
		[size_is(count)] lsa_TranslatedName *names;
	} lsa_TransNameArray;

	typedef struct {
		lsa_Name name;
		dom_sid2 *sid;
	} lsa_TrustInformation;

	typedef struct {
		uint32 count;
		[size_is(count)] lsa_TrustInformation *domains;
		uint32 max_count;
	} lsa_RefDomainList;

	NTSTATUS lsa_LookupSids (
		[in,ref]     policy_handle *handle,
		[in,ref]     lsa_SidArray *sids,
		[out]        lsa_RefDomainList *domains,
		[in,out,ref] lsa_TransNameArray *names,
		[in]         uint16 level,
		[in,out,ref] uint32 *count
		);

	typedef struct {
		uint16 sid_type;
		uint32 rid;
		uint32 sid_index;
	} lsa_TranslatedSid;

	typedef struct {
		uint32 count;
		[size_is(count)] lsa_TranslatedSid *sids;
	} lsa_TransSidArray;

	NTSTATUS lsa_LookupNames (
		[in,ref]     policy_handle *handle,
		[in]         uint32 num_names,
		[in,ref,size_is(num_names)]  lsa_Name *names,
		[out]        lsa_RefDomainList *domains,
		[in,out,ref] lsa_TransSidArray *sids,
		[in]         uint16 level,
		[in,out,ref] uint32 *count
		);
}
