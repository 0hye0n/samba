#ifndef _WINBINDD_PROTO_H_
#define _WINBINDD_PROTO_H_
/* This file is automatically generated with "make proto". DO NOT EDIT */


/*The following definitions come from  nsswitch/winbindd.c  */

void do_print_client_info(void);
void do_flush_cache(void);
int main(int argc, char **argv);

/*The following definitions come from  nsswitch/winbindd_group.c  */

enum winbindd_result winbindd_getgrnam_from_group(struct winbindd_state *state);
enum winbindd_result winbindd_getgrnam_from_gid(struct winbindd_state *state);
enum winbindd_result winbindd_setgrent(struct winbindd_state *state);
enum winbindd_result winbindd_endgrent(struct winbindd_state *state);
enum winbindd_result winbindd_getgrent(struct winbindd_state *state);

/*The following definitions come from  nsswitch/winbindd_surs.c  */

BOOL winbindd_surs_sam_sid_to_unixid(struct winbindd_domain *domain,
                                     DOM_SID *sid, 
                                     enum SID_NAME_USE name_type,
                                     POSIX_ID *id);
BOOL winbindd_surs_unixid_to_sam_sid(struct winbindd_domain *domain,
                                     POSIX_ID *id, DOM_SID *sid);

/*The following definitions come from  nsswitch/winbindd_user.c  */

enum winbindd_result winbindd_getpwnam_from_user(struct winbindd_state *state) ;
enum winbindd_result winbindd_getpwnam_from_uid(struct winbindd_state *state);
enum winbindd_result winbindd_setpwent(struct winbindd_state *state);
enum winbindd_result winbindd_endpwent(struct winbindd_state *state);
enum winbindd_result winbindd_getpwent(struct winbindd_state *state);

/*The following definitions come from  nsswitch/winbindd_util.c  */

BOOL lookup_domain_sid(fstring domain_name, struct winbindd_domain *domain);
BOOL get_domain_info(struct winbindd_domain *domain);
BOOL open_lsa_handle(struct winbindd_domain *domain);
BOOL open_sam_handles(struct winbindd_domain *domain);
BOOL winbindd_lookup_sid_by_name(struct winbindd_domain *domain,
                                 fstring name, DOM_SID *sid,
                                 enum SID_NAME_USE *type);
BOOL winbindd_lookup_name_by_sid(struct winbindd_domain *domain,
                                 DOM_SID *sid, char *name,
                                 enum SID_NAME_USE *type);
BOOL winbindd_lookup_userinfo(struct winbindd_domain *domain,
                              uint32 user_rid, SAM_USERINFO_CTR *user_info);
BOOL winbindd_lookup_groupinfo(struct winbindd_domain *domain,
                              uint32 group_rid, GROUP_INFO_CTR *info);
BOOL winbindd_lookup_groupmem(struct winbindd_domain *domain,
                              uint32 group_rid, uint32 *num_names, 
                              uint32 **rid_mem, char ***names, 
                              enum SID_NAME_USE **name_types);
int winbindd_lookup_aliasmem(struct winbindd_domain *domain,
                             uint32 alias_rid, uint32 *num_names, 
                             DOM_SID ***sids, char ***names, 
                             enum SID_NAME_USE **name_types);
int winbindd_lookup_aliasinfo(struct winbindd_domain *domain,
                              uint32 alias_rid, ALIAS_INFO_CTR *info);
struct winbindd_domain *find_domain_from_name(char *domain_name);
struct winbindd_domain *find_domain_sid_from_name(char *domain_name);
struct winbindd_domain *find_domain_from_uid(uid_t uid);
struct winbindd_domain *find_domain_from_gid(gid_t gid);
struct winbindd_domain *find_domain_from_sid(DOM_SID *sid);
void free_getent_state(struct getent_state *state);
BOOL winbindd_param_init(void);
#endif /* _WINBINDD_PROTO_H_ */
