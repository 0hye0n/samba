<%

/*
 * Copyright (C)  Rafal Szczesniak 2007
 */

/* JSON-RPC mappings to the libnet functions */

jsonrpc_include("resources.esp");


function _NetContext(params, error)
{
  var credParams, credentials;
  var resName;

  if (params.length < 1)
  {
    /* create default NetContext based on already provided credentials */
    credentials = session.authinfo.credentials;
    resName = "netCtx";
  }
  else
  {
    /* create user specified credentials object */
    credParams = params[0];
    if (typeof(credParams) != "object")
    {
      error.setError(jsonrpc.Constant.ServerError.ParameterMismatch,
		     "credentials parameter is expected to be an object");
      return error;
    }
  
    if (typeof(credParams.domain) != "string")
    {
      error.setError(jsonrpc.Constant.ServerError.ParameterMismatch,
		     "a valid string is expected in credentials.domain");
      return error;
    }
  
    if (typeof(credParams.username) != "string")
    {
      error.setError(jsonrpc.Constant.ServerError.ParameterMismatch,
		     "a valid string is expected in credentials.username");
      return error;
    }
  
    if (typeof(credParams.username) != "string")
    {
      error.setError(jsonrpc.Constant.ServerError.ParameterMismatch,
		     "a valid string is expected in credentials.password");
      return error;
    }
  
    credentials = credentials_init();
    credentials.set_domain(credParams.domain);
    credentials.set_username(credParams.username);
    credentials.set_password(credParams.password);

    resName = "netCtx[" + credParams.domain + "/" + credParams.username + "]";
  }

  /* was this NetContext created yet ? */
  var resId = session.resources.find(key, error);
  if (resId != undefined)
  {
    /* yes, return its resource id */
    return resId;
  }

  /* no, create the new context and assign it a resource id */
  var netCtx = NetContext(credentials);
  resId = session.resources.set(netCtx, resName, error);
  return resId;
}
jsonrpc.method.NetContext = _NetContext;


/*
 * Local Variables:
 * mode: c
 * End:
 */

%>
