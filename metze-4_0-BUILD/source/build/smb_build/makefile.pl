###########################################################
### SMB Build System					###
### - create output for Makefile			###
###							###
###  Copyright (C) Stefan (metze) Metzmacher 2004	###
###  Released under the GNU GPL				###
###########################################################

###########################################################
# This function prepares the output for Makefile
#
# $output = _prepare_makefile_in($SMB_BUILD_CTX)
#
# $SMB_BUILD_CTX -	the global SMB_BUILD context
#
# $output -		the resulting output buffer
sub _prepare_makefile_in($)
{
	my $output;

	$output  = "########################################\n";
	$output .= "# Autogenerated by config.smb_build.pl #\n";
	$output .= "########################################\n";
	$output .= "
prefix=\@prefix\@
exec_prefix=\@exec_prefix\@
VPATH=\@srcdir\@
srcdir=\@srcdir\@
builddir=\@builddir\@

SHELL=/bin/sh

CC=\@CC\@
CC_FLAGS=\@CFLAGS\@ \@CPPFLAGS\@

LD=\@CC\@
LD_FLAGS=\@LDFLAGS\@ \@CFLAGS\@

SHLD=\@SHLD\@
SHLD_FLAGS=\@LDSHFLAGS\@ \@LDFLAGS\@
SONAMEFLAG=\@SONAMEFLAG\@

PERL=\@PERL\@

default: all

.SUFFIXES:
.SUFFIXES: .c .o .h .gch .a .so

MAKEDIR = || exec false; \
	  if test -d \"\$\$dir\"; then :; else \
	  echo mkdir \"\$\$dir\"; \
	  mkdir -p \"\$\$dir\" >/dev/null 2>&1 || \
	  test -d \"\$\$dir\" || \
	  mkdir \"\$\$dir\" || \
	  exec false; fi || exec false

.c.o:
	\@if (: >> \$\@ || : > \$\@) >/dev/null 2>&1; then rm -f \$\@; else \
	 dir=`echo \$\@ | sed 's,/[^/]*$$,,;s,^$$,.,'` \$(MAKEDIR); fi
	\@echo Compiling \$*.c
	\@\$(CC) \$(CFLAGS) -c \$< -o \$\@
\@BROKEN_CC\@	-mv `echo \$\@ | sed 's%^.*/%%g'` \$\@

.h.gch:
	\@if (: >> \$\@ || : > \$\@) >/dev/null 2>&1; then rm -f \$\@; else \
	 dir=`echo \$\@ | sed 's,/[^/]*$$,,;s,^$$,.,'` \$(MAKEDIR); fi
	\@echo Precompiling \$*.h
	\@\$(CC) \$(CC_FLAGS) -c \$< -o \$\@
\@BROKEN_CC\@	-mv `echo \$\@ | sed 's%^.*/%%g'` \$\@


";

	return $output;
}

###########################################################
# This function creates Makefile.in from the SMB_BUILD 
# context
#
# create_makefile_in($SMB_BUILD_CTX)
#
# $SMB_BUILD_CTX -	the global SMB_BUILD context
#
# $output -		the resulting output buffer
sub create_makefile_in($)
{
	my $CTX = shift;
	my $output;

	$output = _prepare_makefile_in($CTX);

	open(MAKEFILE_IN,"> Makefile.in") || die ("Can't open Makefile.in\n");

	print MAKEFILE_IN $output;

	close(MAKEFILE_IN);

	print "config.smb_build.pl: creating Makefile.in\n";
	return;	
}