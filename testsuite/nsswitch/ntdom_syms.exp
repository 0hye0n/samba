#
# @(#) Test nss functions are exported from the libnss_ntdom.so library
# @(#) Test there are no external dependencies in the libnss_ntdom.so library
#
# We expect the following symbols to be exported:
#
#    _nss_ntdom_getgrent_r
#    _nss_ntdom_endgrent
#    _nss_ntdom_endpwent
#    _nss_ntdom_getgrgid_r
#    _nss_ntdom_getgrnam_r
#    _nss_ntdom_getpwent_r
#    _nss_ntdom_getpwnam_r
#    _nss_ntdom_getpwuid_r
#    _nss_ntdom_setgrent
#    _nss_ntdom_setpwent
#
# This test also has the nice side-effect of showing any unresolved symbols 
# in the library.
#

load_lib util-defs.exp

# Build ntdom.so

verbose "Compiling..."

set output [util_start "make nsswitch/libnss_ntdom.so"]

if {[regexp "make.*Error" $output]} {
    perror "make nsswitch/ntdom.so"
    puts $output
    return
}

# Compile load-dl.c

set output [target_compile "$srcdir/$subdir/ntdom_syms.c" \
        "$srcdir/$subdir/ntdom_syms" executable \
        {libs="-ldl" additional_flags="-g"}]

if {$output != ""} {
    perror "compile ntdom_syms.c"
    puts $output
    return
}

# Run load-dl.c

set output [util_start "$srcdir/$subdir/ntdom_syms" "nsswitch/libnss_ntdom.so"]

if {[regexp "FAIL:" $output]} {
    fail "run ntdom_syms"
    puts $output
    return
}

pass "ntdom_syms"

# Clean up

#unlink "$srcdir/$subdir/ntdom_syms"
