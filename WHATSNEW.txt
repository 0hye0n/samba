'Samba4 TP4' presents you with an opportunity to see a Technology
Preview (TP) snapshot of Samba4's development, as at January 2007.

In the last few months since TP3 was released in October 2006,
significant work has been done across many parts of Samba4.  Since that
time, we have added the basis for some new and exciting features:

  PKINIT support to Samba4's KDC will allow, smart-card login to a
  Samba4 domain.  TP4 demonstrates this with static key files, but
  work will continue to enable actual hardware cards.

  Clustering support was always a design goal of Samba4, and with TP4
  we have the ctdb framework, a cluster-aware shared database.  This
  allows Samba4 to share a shared cluster file-system with it's clients. 
  Presented at this year's linux.conf.au, including a highly rigged
  demo, you can expect to see this mature over the next few months.

  Non-blocking and Asynchronous IO support, has always been a design
  goal in Samba4, and TP4 will use new Linux Kernel features to
  implement event driven asynchronous IO.  This makes Samba more
  efficient on systems where some data may be 'further away' than a
  local disk, such as HSM systems.  This allows the Kernel to handle
  reading the returned data from the disk, only notifying Samba when
  the data is ready for dispatch to the client. 

  Our web-management console, known as SWAT, is being revamped, and in
  TP4 you can find a new Web 2.0 style user interface, being used to
  support a web-based ldb browser.  We hope this new system will allow
  things simple not possible with the form-submit style of web
  management.

  Using LDB LDAP back-end integration has improved in this release, with an
  improved mapping module allowing the start of Fedora DS back-end
  support.  

In continuing our research effort, TP4 includes the work to better
understand and implement the DRSUAPI replication protocols.  By better
understanding the needs of replication now, we can structure our
databases so that their format will have to change less in future.

We hope to use this replication function to replace the SamSync based
Vampire process so effectively demonstrated since TP1, and to
eventually join an Active Directory domain, as a replicating partner.

Behind the scenes, much of the core infrastructure of Samba4 continues
development:

  In Kerberos, we have continued to track the development of the
  Heimdal Kerberos implementation, and reduce the custom diff between
  our branch and upstream.  Heimdal now provides plug-in APIs for
  almost all of the hooks we need, including management and validation
  of the PAC.

  In testing, our test infrastructure has undergone a quiet
  revolution, as we improve our unit test framework.  Likewise, the
  tests themselves have continued to expand, as we follow our
  test-driven development pattern.

  In providing an abstraction above our raw RPC layer, the libnet
  library continues to expand, becoming a C and JS management API for
  Samba4 and remote servers.

  To ensure that, as an administrator and developer, you can easily
  read and edit our internal databases, our LDB layer has been
  optimised for speed.  The aim here is to avoid needing to use the faster, but
  more opaque, TDB layer.  

These are just some of the highlights of the work done in the past few
months.  More details can be found in our SVN history.



